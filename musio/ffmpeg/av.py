from ctypes import *

_libraries = {}
_libraries['/usr/lib/ffmpeg2.8/libavcodec.so'] = CDLL('/usr/lib/ffmpeg2.8/libavcodec.so')
STRING = c_char_p
WSTRING = c_wchar_p
_libraries['/usr/lib/ffmpeg2.8/libavdevice.so'] = CDLL('/usr/lib/ffmpeg2.8/libavdevice.so')
_libraries['/usr/lib/ffmpeg2.8/libavformat.so'] = CDLL('/usr/lib/ffmpeg2.8/libavformat.so')
_libraries['/usr/lib/ffmpeg2.8/libswscale.so'] = CDLL('/usr/lib/ffmpeg2.8/libswscale.so')


CODEC_ID_LOCO = 73
AV_CODEC_ID_WMV2 = 19
AV_CODEC_ID_CDGRAPHICS = 133
AV_CODEC_ID_SMC = 50
AV_CODEC_ID_H263P = 20
class _IO_FILE(Structure):
    pass
stdout = (POINTER(_IO_FILE)).in_dll(_libraries['/usr/lib/ffmpeg2.8/libavcodec.so'], 'stdout')
stdout = stdout # alias
stdin = (POINTER(_IO_FILE)).in_dll(_libraries['/usr/lib/ffmpeg2.8/libavcodec.so'], 'stdin')
stdin = stdin # alias
stderr = (POINTER(_IO_FILE)).in_dll(_libraries['/usr/lib/ffmpeg2.8/libavcodec.so'], 'stderr')
stderr = stderr # alias
# av_sat_dadd32 = av_sat_dadd32_c # alias
# av_popcount64 = av_popcount64_c # alias
AV_CODEC_ID_BINKVIDEO = 136
CODEC_ID_PCM_S24BE = 65549
# av_clipd = av_clipd_c # alias
PIX_FMT_RGBA64LE = 292
ME_PHODS = 4
AV_PIX_FMT_YUVA422P16LE = 106
# av_clip_int16 = av_clip_int16_c # alias
# av_clip64 = av_clip64_c # alias
AV_CODEC_ID_ASS = 1095979808
PIX_FMT_YUVJ422P = 13
# av_ceil_log2 = av_ceil_log2_c # alias
# av_builtin_constant_p = __builtin_constant_p # alias
# av_clip_int8 = av_clip_int8_c # alias
# __wur = __attribute_warn_unused_result__ # alias
# __gwchar_t = wchar_t # alias
# __WCHAR_MAX = __WCHAR_MAX__ # alias
# __USECONDS_T_TYPE = __U32_TYPE # alias
# __UID_T_TYPE = __U32_TYPE # alias
# __SYSCALL_SLONG_TYPE = __SLONGWORD_TYPE # alias
# __TIME_T_TYPE = __SYSCALL_SLONG_TYPE # alias
CODEC_ID_H263 = 5
# def GET_UTF8(val,GET_BYTE,ERROR): return val= GET_BYTE; { uint32_t top = (val & 128) >> 1; if ((val & 0xc0) == 0x80 || val >= 0xFE) ERROR while (val & top) { int tmp= GET_BYTE - 128; if(tmp>>6) ERROR val= (val<<6) + tmp; top <<= 5; } val &= (top << 1) - 1; } # macro
# __SYSCALL_ULONG_TYPE = __ULONGWORD_TYPE # alias
CODEC_ID_PCM_S24LE = 65548
# __SSIZE_T_TYPE = __SWORD_TYPE # alias
AV_CODEC_ID_AVRN = 1096176238
PIX_FMT_RGBA64BE = 291
# __RLIM64_T_TYPE = __UQUAD_TYPE # alias
AV_CODEC_ID_MSVIDEO1 = 47
AV_RESAMPLE_FILTER_TYPE_CUBIC = 0
CODEC_ID_INTERPLAY_VIDEO = 40
AV_CODEC_ID_MSMPEG4V3 = 17
# __OFF64_T_TYPE = __SQUAD_TYPE # alias
AV_PIX_FMT_VDPAU_VC1 = 40
# __NLINK_T_TYPE = __SYSCALL_ULONG_TYPE # alias
AV_PKT_DATA_PALETTE = 0
AV_SAMPLE_FMT_NB = 10
AV_CODEC_ID_AMR_WB = 73729
AV_OPT_TYPE_PIXEL_FMT = 1346784596
AV_CODEC_ID_IDCIN = 48
_ISOC_ = 3
CODEC_ID_Y41P = 1496592720
CODEC_ID_CLLC = 167
_SVID_ = 0
_IEEE_ = -1
AV_CODEC_ID_HEVC = 1211250229
LIBSWSCALE_VERSION_INT = 132453 # Variable c_int '132453'
LIBSWSCALE_BUILD = LIBSWSCALE_VERSION_INT # alias
CODEC_ID_PCM_U32BE = 65547
AVCOL_PRI_UNSPECIFIED = 2
AV_PIX_FMT_YUVA420P9LE = 92
PIX_FMT_YUV444P12LE = 310
PIX_FMT_GBRP16LE = 88
CODEC_ID_PCM_S16BE = 65537
AV_CODEC_ID_SPEEX = 86052
CODEC_ID_UTVIDEO = 154
AV_PIX_FMT_VDPAU_WMV3 = 39
CODEC_ID_XBM = 161
AV_SAMPLE_FMT_U8P = 5
CODEC_ID_PRORES = 149
CODEC_ID_WESTWOOD_SND1 = 86033
CODEC_ID_PCM_U32LE = 65546
AV_CODEC_ID_TQI = 123
CODEC_ID_MPEG2VIDEO_XVMC = 3
AV_SAMPLE_FMT_FLT = 3
CODEC_ID_SHORTEN = 86031
AV_CODEC_ID_MDEC = 38
AV_PIX_FMT_BGR4 = 20
AVCOL_PRI_BT709 = 1
# av_popcount = av_popcount_c # alias
PIX_FMT_GBRP16BE = 87
AV_SAMPLE_FMT_S16 = 1
AV_PIX_FMT_VDPAU_MPEG2 = 38
AV_SAMPLE_FMT_U8 = 0
AV_CODEC_ID_PRORES = 149
AV_CODEC_ID_PCM_S32LE = 65544
# av_clipf = av_clipf_c # alias
AV_CODEC_ID_VCR1 = 36
AV_CODEC_ID_MSRLE = 46
CODEC_ID_MPEG2VIDEO = 2
# def GET_UTF16(val,GET_16BIT,ERROR): return val = GET_16BIT; { unsigned int hi = val - 0xD800; if (hi < 0x800) { val = GET_16BIT - 0xDC00; if (val > 0x3FFU || hi > 0x3FFU) ERROR val += (hi<<10) + 0x10000; } } # macro
AV_SAMPLE_FMT_NONE = -1
AV_CODEC_ID_TARGA_Y216 = 1412575542
CODEC_ID_ADPCM_ADX = 69641
AVCOL_RANGE_NB = 3
CODEC_ID_RV30 = 69
CODEC_ID_PCM_S32BE = 65545
# def __REDIRECT(name,proto,alias): return name proto __asm__ (__ASMNAME (#alias)) # macro
CODEC_ID_A64_MULTI5 = 145
CODEC_ID_A64_MULTI = 144
PIX_FMT_GBRP10LE = 86
SUBTITLE_TEXT = 2
EAGAIN = 11 # Variable c_int '11'
EWOULDBLOCK = EAGAIN # alias
# av_clip_uint8 = av_clip_uint8_c # alias
AV_PIX_FMT_VDPAU_MPEG1 = 37
SUBTITLE_BITMAP = 1
CODEC_ID_WMAV1 = 86023
# av_clip_uint16 = av_clip_uint16_c # alias
AV_CODEC_ID_QPEG = 61
CODEC_ID_YOP = 140
AV_CODEC_ID_MIMIC = 114
CODEC_ID_DPX = 129
__codecvt_partial = 1
CODEC_ID_V210 = 128
# def __NTH(fct): return __LEAF_ATTR fct throw () # macro
CODEC_ID_TMV = 127
AV_PICTURE_TYPE_BI = 7
CODEC_ID_V210X = 126
PIX_FMT_YUV420P10BE = 71
# PIX_FMT_YUV422P12 = AV_PIX_FMT_YUV422P12 # alias
AV_CODEC_ID_WS_VQA = 45
CODEC_ID_MPEG1VIDEO = 1
AV_CODEC_ID_INDEO5 = 113
AV_AUDIO_SERVICE_TYPE_NB = 9
AV_AUDIO_SERVICE_TYPE_KARAOKE = 8
AV_AUDIO_SERVICE_TYPE_VOICE_OVER = 7
AV_AUDIO_SERVICE_TYPE_EMERGENCY = 6
AV_AUDIO_SERVICE_TYPE_DIALOGUE = 4
CODEC_ID_FFVHUFF = 68
def htobe32(x): return __bswap_32 (x) # macro
CODEC_ID_DIRAC = 117
CODEC_ID_ESCAPE124 = 116
AV_AUDIO_SERVICE_TYPE_EFFECTS = 1
AV_CODEC_ID_PNG = 62
AV_AUDIO_SERVICE_TYPE_MAIN = 0
PIX_FMT_YUV422P14BE = 307
PIX_FMT_GBRP10BE = 85
CODEC_ID_ANM = 135
AV_CODEC_ID_SUNRAST = 111
CODEC_ID_SUNRAST = 111
CODEC_ID_PCX = 110
CODEC_ID_VB = 109
CODEC_ID_AMV = 108
# av_clip = av_clip_c # alias
AV_PIX_FMT_VDPAU_H264 = 36
CODEC_ID_VP6A = 107
AV_CODEC_ID_CINEPAK = 44
CODEC_ID_NONE = 0
AV_CODEC_ID_AMV = 108
def FF_ARRAY_ELEMS(a): return (sizeof(a) / sizeof((a)[0])) # macro
PIX_FMT_BGRA64LE = 294
CODEC_ID_VP6F = 93
# def __LDBL_REDIR1_NTH(name,proto,alias): return name proto __THROW # macro
CODEC_ID_PCM_F32LE = 65557
CODEC_ID_PAM = 67
AV_CODEC_ID_ADPCM_AFC = 1095123744
AV_CODEC_ID_DPX = 129
PIX_FMT_GBRP9LE = 84
AV_CODEC_ID_TXD = 106
AV_CODEC_ID_VOXWARE = 86048
EDEADLK = 35 # Variable c_int '35'
EDEADLOCK = EDEADLK # alias
# def __LDBL_REDIR(name,proto): return name proto # macro
PIX_FMT_YUV444P10LE = 78
AV_PIX_FMT_YUVA420P = 35
AV_CODEC_ID_PTX = 105
CODEC_ID_SAMI = 1396788553
def __GNUC_PREREQ(maj,min): return ((__GNUC__ << 16) + __GNUC_MINOR__ >= ((maj) << 16) + (min)) # macro
AV_CODEC_ID_RPZA = 43
CODEC_ID_PBM = 64
PIX_FMT_VDPAU_MPEG4 = 60
PIX_FMT_YUV444P16BE = 59
PIX_FMT_YUV422P16BE = 57
CODEC_ID_FIRST_SUBTITLE = 94208
AV_CODEC_ID_SGI = 102
def getc(_fp): return _IO_getc (_fp) # macro
CODEC_ID_ULTI = 58
CODEC_ID_TSCC = 57
AV_CODEC_ID_VIMA = 1447644481
PIX_FMT_GBRP9BE = 83
CODEC_ID_CDGRAPHICS = 133
# SCHAR_MAX = __SCHAR_MAX__ # alias
# CHAR_MAX = SCHAR_MAX # alias
AV_CODEC_ID_ATRAC3 = 86047
CODEC_ID_AYUV = 1096373590
AV_PIX_FMT_GRAY8 = 8
PIX_FMT_BGR555BE = 49
AV_CODEC_ID_MSMPEG4V2 = 16
AV_PIX_FMT_YUVJ440P = 34
# __S32_TYPE = int # alias
# CHAR_BIT = __CHAR_BIT__ # alias
PIX_FMT_RGB48LE = 42
# av_clipl_int32 = av_clipl_int32_c # alias
PIX_FMT_RGB48BE = 41
CODEC_ID_XAN_WC4 = 42
CODEC_ID_XAN_WC3 = 41
AV_CODEC_ID_TMV = 127
PIX_FMT_VDPAU_MPEG1 = 37
CODEC_ID_VIMA = 1447644481
CODEC_ID_CLJR = 37
AV_CODEC_ID_AURA2 = 125
AV_CODEC_ID_XAN_WC4 = 42
AV_CODEC_ID_MPEG4 = 13
AV_CODEC_ID_SGIRLE = 1397180754
CODEC_ID_PGM = 65
CODEC_ID_PCM_U8 = 65541
AV_CODEC_ID_ADPCM_IMA_WS = 69636
AV_CODEC_ID_ADPCM_IMA_APC = 69661
# __KEY_T_TYPE = __S32_TYPE # alias
AV_CODEC_ID_ADPCM_IMA_RAD = 1380008992
CODEC_ID_DVVIDEO = 25
PIX_FMT_GBRP = 82
CODEC_ID_MPEG2TS = 131072
# def isfinite(x): return (sizeof (x) == sizeof (float) ? __finitef (x) : sizeof (x) == sizeof (double) ? __finite (x) : __finitel (x)) # macro
CODEC_ID_H263P = 20
AV_PIX_FMT_YUV440P = 33
CODEC_ID_WMV1 = 18
CODEC_ID_MSMPEG4V2 = 16
CODEC_ID_RAWVIDEO = 14
AV_CODEC_ID_LJPEG = 10
AV_PIX_FMT_YUVA422P10LE = 100
PIX_FMT_YUV422P14LE = 308
CODEC_ID_JPEGLS = 12
# __INO64_T_TYPE = __UQUAD_TYPE # alias
# __SUSECONDS_T_TYPE = __SYSCALL_SLONG_TYPE # alias
CODEC_ID_RV20 = 7
# PIX_FMT_YUV420P9 = AV_PIX_FMT_YUV420P9 # alias
CODEC_ID_FFMETADATA = 135168
CODEC_ID_MPEG4SYSTEMS = 131073
CODEC_ID_ADPCM_XA = 69640
# PIX_FMT_BGRA64 = AV_PIX_FMT_BGRA64 # alias
CODEC_ID_ZLIB = 55
def be64toh(x): return __bswap_64 (x) # macro
AV_CODEC_ID_ADPCM_G722 = 69660
# __GID_T_TYPE = __U32_TYPE # alias
CODEC_ID_FIRST_UNKNOWN = 98304
PIX_FMT_VDA_VLD = 81
AV_CODEC_ID_SMPTE_KLV = 1263294017
CODEC_ID_PROBE = 102400
AV_CODEC_ID_OTF = 5198918
AV_CODEC_ID_IDF = 4801606
# __FSWORD_T_TYPE = __SYSCALL_SLONG_TYPE # alias
AV_CODEC_ID_XBIN = 1480739150
# __SLONG32_TYPE = int # alias
CODEC_ID_MSS1 = 163
AV_CODEC_ID_FIRST_UNKNOWN = 98304
AV_CODEC_ID_VMNC = 90
CODEC_ID_XSUB = 94211
CODEC_ID_TEXT = 94210
AV_PIX_FMT_YUVA422P16BE = 105
CODEC_ID_DVD_SUBTITLE = 94208
# __FSFILCNT_T_TYPE = __SYSCALL_ULONG_TYPE # alias
AV_PICTURE_TYPE_SP = 6
# __RLIM_T_TYPE = __SYSCALL_ULONG_TYPE # alias
# PIX_FMT_YUV420P16 = AV_PIX_FMT_YUV420P16 # alias
AV_CODEC_ID_EIA_608 = 1664495672
AV_CODEC_ID_MICRODVD = 1833195076
AV_CODEC_ID_DVB_TELETEXT = 94215
CODEC_ID_8SVX_FIB = 86072
CODEC_ID_PPM = 63
CODEC_ID_G723_1 = 86069
CODEC_ID_SRT = 94216
CODEC_ID_CELT = 86068
AV_CODEC_ID_MPEG2VIDEO = 2
CODEC_ID_QDMC = 86067
PIX_FMT_YUV422P9LE = 80
CODEC_ID_AAC_LATM = 86066
CODEC_ID_OTF = 5198918
AV_CODEC_ID_KMVC = 86
CODEC_ID_SMACKVIDEO = 84
CODEC_ID_BINKAUDIO_DCT = 86065
CODEC_ID_BINKAUDIO_RDFT = 86064
CODEC_ID_ATRAC1 = 86063
CODEC_ID_MP4ALS = 86062
AV_RESAMPLE_FILTER_TYPE_BLACKMAN_NUTTALL = 1
CODEC_ID_TRUEHD = 86061
CODEC_ID_TWINVQ = 86060
AV_FIELD_TT = 2
CODEC_ID_SIPR = 86058
CODEC_ID_EAC3 = 86057
CODEC_ID_ATRAC3P = 86056
CODEC_ID_WMALOSSLESS = 86055
def be16toh(x): return __bswap_16 (x) # macro
CODEC_ID_WMAPRO = 86054
CODEC_ID_WMAVOICE = 86053
CODEC_ID_SPEEX = 86052
CODEC_ID_MUSEPACK8 = 86051
CODEC_ID_NELLYMOSER = 86050
CODEC_ID_APE = 86049
CODEC_ID_VOXWARE = 86048
AV_CODEC_ID_DVD_NAV = 1145979222
# def FFSIGN(a): return ((a) > 0 ? 1 : -1) # macro
CODEC_ID_GSM_MS = 86046
CODEC_ID_MLP = 86045
CODEC_ID_MUSEPACK7 = 86044
CODEC_ID_IMC = 86043
CODEC_ID_DSICINAUDIO = 86042
AV_CODEC_ID_ZMBV = 82
CODEC_ID_WAVPACK = 86041
CODEC_ID_QCELP = 86040
AV_CODEC_ID_ADPCM_EA_MAXIS_XA = 69658
CODEC_ID_SMACKAUDIO = 86039
CODEC_ID_TRUEMOTION2 = 78
CODEC_ID_TTA = 86038
CODEC_ID_TRUESPEECH = 86037
PIX_FMT_YUV422P9BE = 79
CODEC_ID_COOK = 86036
CODEC_ID_IDF = 4801606
AV_CODEC_ID_MMVIDEO = 81
CODEC_ID_QDM2 = 86035
CODEC_ID_GSM = 86034
CODEC_ID_IFF_ILBM = 137
CODEC_ID_ALAC = 86032
CODEC_ID_MP3ON4 = 86030
CODEC_ID_VMDAUDIO = 86027
CODEC_ID_MACE6 = 86026
# __MODE_T_TYPE = __U32_TYPE # alias
AV_PIX_FMT_YUVA420P10BE = 97
def __GLIBC_PREREQ(maj,min): return ((__GLIBC__ << 16) + __GLIBC_MINOR__ >= ((maj) << 16) + (min)) # macro
CODEC_ID_DVAUDIO = 86022
PIX_FMT_BGR48LE = 68
CODEC_ID_VORBIS = 86021
CODEC_ID_DTS = 86020
CODEC_ID_AC3 = 86019
AV_CODEC_ID_TGV = 121
# PIX_FMT_YUV420P14 = AV_PIX_FMT_YUV420P14 # alias
CODEC_ID_AAC = 86018
AV_CODEC_ID_TRUEMOTION2 = 78
CODEC_ID_MP3 = 86017
CODEC_ID_MP2 = 86016
CODEC_ID_SOL_DPCM = 81923
CODEC_ID_XAN_DPCM = 81922
CODEC_ID_INTERPLAY_DPCM = 81921
CODEC_ID_QPEG = 61
CODEC_ID_RA_288 = 77825
CODEC_ID_RA_144 = 77824
__LITTLE_ENDIAN = 1234 # Variable c_int '1234'
__BYTE_ORDER = __LITTLE_ENDIAN # alias
CODEC_ID_AMR_WB = 73729
def __LONG_LONG_PAIR(HI,LO): return LO, HI # macro
AVSTREAM_PARSE_FULL_RAW = 1463898624
CODEC_ID_XBIN = 1480739150
# __INO_T_TYPE = __SYSCALL_ULONG_TYPE # alias
PIX_FMT_YUV444P16LE = 58
# __ID_T_TYPE = __U32_TYPE # alias
AV_CODEC_ID_AASC = 75
CODEC_ID_PCM_S32LE = 65544
# __FSFILCNT64_T_TYPE = __UQUAD_TYPE # alias
# __FSBLKCNT_T_TYPE = __SYSCALL_ULONG_TYPE # alias
CODEC_ID_PCM_S16LE_PLANAR = 65554
AV_CODEC_ID_MVC2 = 1297498930
# __FSBLKCNT64_T_TYPE = __UQUAD_TYPE # alias
__FLOAT_WORD_ORDER = __BYTE_ORDER # alias
# __DEV_T_TYPE = __UQUAD_TYPE # alias
# __DADDR_T_TYPE = __S32_TYPE # alias
# __CLOCK_T_TYPE = __SYSCALL_SLONG_TYPE # alias
AV_CODEC_ID_FLV1 = 22
CODEC_ID_AVUI = 1096176969
AV_CODEC_ID_SANM = 1396788813
# __BLKCNT_T_TYPE = __SYSCALL_SLONG_TYPE # alias
AV_CODEC_ID_WMV3 = 72
CODEC_ID_PCM_S16LE = 65536
# __BLKCNT64_T_TYPE = __SQUAD_TYPE # alias
_POSIX_UIO_MAXIOV = 16 # Variable c_int '16'
_XOPEN_IOV_MAX = _POSIX_UIO_MAXIOV # alias
_POSIX_OPEN_MAX = 20 # Variable c_int '20'
_POSIX_FD_SETSIZE = _POSIX_OPEN_MAX # alias
PIX_FMT_YUV444P10BE = 77
CODEC_ID_BINTEXT = 1112823892
def __WTERMSIG(status): return ((status) & 0x7f) # macro
size_t = c_ulong
_IO_size_t = size_t # alias
CODEC_ID_JV = 150
AV_CODEC_ID_PCM_F64BE = 65558
__off64_t = c_long
_IO_off64_t = __off64_t # alias
_POSIX_PIPE_BUF = 512 # Variable c_int '512'
_POSIX_HIWAT = _POSIX_PIPE_BUF # alias
AV_PIX_FMT_BGRA64BE = 293
CODEC_ID_EXR = 809850962
AV_CODEC_ID_RV30 = 69
# _IO_HAVE_ST_BLKSIZE = _G_HAVE_ST_BLKSIZE # alias
_G_BUFSIZ = 8192 # Variable c_int '8192'
_IO_BUFSIZ = _G_BUFSIZ # alias
# LONG_MAX = __LONG_MAX__ # alias
# SSIZE_MAX = LONG_MAX # alias
AV_CODEC_ID_FFVHUFF = 68
# SHRT_MAX = __SHRT_MAX__ # alias
# _Mfloat_ = float # alias
int8_t = c_int8
QP_STORE_T = int8_t # alias
AV_CODEC_ID_YUV4 = 1498764852
# PIX_FMT_YUV444P16 = AV_PIX_FMT_YUV444P16 # alias
AV_PIX_FMT_YUV422P16BE = 57
# PIX_FMT_YUV444P14 = AV_PIX_FMT_YUV444P14 # alias
PIX_FMT_RGB565LE = 44
PIX_FMT_YUV444P9LE = 76
# PIX_FMT_YUV444P10 = AV_PIX_FMT_YUV444P10 # alias
AV_PIX_FMT_XYZ12BE = 111
class __va_list_tag(Structure):
    pass
__va_list_tag._fields_ = [
]
__gnuc_va_list = __va_list_tag * 1
_IO_va_list = __gnuc_va_list # alias
# PIX_FMT_YUV422P9 = AV_PIX_FMT_YUV422P9 # alias
CODEC_ID_MTS2 = 166
AV_CODEC_ID_TEXT = 94210
AVSTREAM_PARSE_TIMESTAMPS = 3
AV_CODEC_ID_PGM = 65
__uid_t = c_uint
_IO_uid_t = __uid_t # alias
AVSTREAM_PARSE_NONE = 0
# PIX_FMT_RGBA64 = AV_PIX_FMT_RGBA64 # alias
AV_CODEC_ID_EVRC = 1936029283
AV_CODEC_ID_TAK = 1950507339
AV_CODEC_ID_OPUS = 1330664787
def AVUNERROR(e): return (-(e)) # macro
AV_CODEC_ID_PBM = 64
AV_CODEC_ID_SONIC_LS = 1397706316
AV_CODEC_ID_SONIC = 1397706307
AV_CODEC_ID_TAK_DEPRECATED = 86079
AV_CODEC_ID_PPM = 63
AV_CODEC_ID_COMFORT_NOISE = 86078
def FFMAX3(a,b,c): return FFMAX(FFMAX(a,b),c) # macro
AV_CODEC_ID_OPUS_DEPRECATED = 86077
AV_CODEC_ID_ILBC = 86076
AV_CODEC_ID_IAC = 86075
AV_CODEC_ID_RALF = 86074
AV_CODEC_ID_V408 = 1446260792
CODEC_ID_SNOW = 1397641047
AV_CODEC_ID_VIXL = 60
CODEC_ID_ZEROCODEC = 162
AV_CODEC_ID_CELT = 86068
CODEC_ID_JACOSUB = 1246975298
AV_CODEC_ID_QDMC = 86067
CODEC_ID_AURA2 = 125
AV_CODEC_ID_AAC_LATM = 86066
__off_t = c_long
_IO_off_t = __off_t # alias
AV_CODEC_ID_ATRAC1 = 86063
AV_PIX_FMT_YUVA420P16BE = 103
# PIX_FMT_YUV422P14 = AV_PIX_FMT_YUV422P14 # alias
AV_CODEC_ID_MP4ALS = 86062
CODEC_ID_LAGARITH = 148
AV_CODEC_ID_TWINVQ = 86060
AV_CODEC_ID_MP1 = 86059
AV_CODEC_ID_SIPR = 86058
AV_CODEC_ID_EAC3 = 86057
AV_PIX_FMT_MONOBLACK = 10
SUBTITLE_NONE = 0
AV_CODEC_ID_WMAPRO = 86054
AV_CODEC_ID_WMAVOICE = 86053
# _IO_iconv_t = _G_iconv_t # alias
AV_CODEC_ID_MUSEPACK8 = 86051
AV_CODEC_ID_NELLYMOSER = 86050
AV_CODEC_ID_BFI = 118
AV_CODEC_ID_BINTEXT = 1112823892
class _G_fpos_t(Structure):
    pass
class __mbstate_t(Structure):
    pass
class N11__mbstate_t3DOT_6E(Union):
    pass
N11__mbstate_t3DOT_6E._fields_ = [
    ('__wch', c_uint),
    ('__wchb', c_char * 4),
]
__mbstate_t._fields_ = [
    ('__count', c_int),
    ('__value', N11__mbstate_t3DOT_6E),
]
_G_fpos_t._fields_ = [
    ('__pos', __off_t),
    ('__state', __mbstate_t),
]
_IO_fpos_t = _G_fpos_t # alias
AV_CODEC_ID_GSM_MS = 86046
AV_CODEC_ID_MLP = 86045
CODEC_ID_V410 = 158
AV_CODEC_ID_MUSEPACK7 = 86044
AV_CODEC_ID_V308 = 1446195256
AV_CODEC_ID_IMC = 86043
AV_CODEC_ID_TSCC = 57
CODEC_ID_PAF_VIDEO = 1346455126
AV_CODEC_ID_WAVPACK = 86041
AV_CODEC_ID_QCELP = 86040
AV_CODEC_ID_SMACKAUDIO = 86039
AV_PIX_FMT_RGB8 = 22
AV_CODEC_ID_TTA = 86038
PIX_FMT_RGB0 = 296
PIX_FMT_YUV422P10LE = 74
CODEC_ID_SUBVIEWER = 1400201814
# _IO_file_flags = _flags # alias
AV_CODEC_ID_GSM = 86034
CODEC_ID_CDXL = 160
AV_PIX_FMT_NV12 = 25
AV_CODEC_ID_ASV1 = 32
AV_CODEC_ID_SHORTEN = 86031
CODEC_ID_MXPEG = 147
CODEC_ID_BMV_VIDEO = 155
CODEC_ID_MP3ADU = 86029
AV_CODEC_ID_DIRAC = 117
_G_va_list = __gnuc_va_list # alias
AVCOL_TRC_GAMMA28 = 5
CODEC_ID_QTRLE = 56
CODEC_ID_SANM = 1396788813
# __WCHAR_MIN = __WCHAR_MIN__ # alias
# WCHAR_MIN = __WCHAR_MIN # alias
AV_PIX_FMT_YUVA422P_LIBAV = 89
CODEC_ID_WMV3IMAGE = 152
AV_LOCK_CREATE = 0
PIX_FMT_YUV422P10BE = 73
CODEC_ID_REALTEXT = 1381259348
AV_CODEC_ID_ADPCM_EA_R1 = 69652
# WCHAR_MAX = __WCHAR_MAX # alias
AV_PIX_FMT_RGB4_BYTE = 24
def AV_VERSION_INT(a,b,c): return (a<<16 | b<<8 | c) # macro
CODEC_ID_ADPCM_G722 = 69660
AVCOL_TRC_NB = 8
CODEC_ID_CYUV = 27
AV_CODEC_ID_ESCAPE124 = 116
# def FFERRTAG(a,b,c,d): return (-(int)MKTAG(a, b, c, d)) # macro
AV_CODEC_ID_AYUV = 1096373590
CODEC_ID_YUV4 = 1498764852
CODEC_ID_R210 = 134
AV_CODEC_ID_ADPCM_IMA_AMV = 69651
CODEC_ID_TGQ = 122
AV_CODEC_ID_COOK = 86036

# values for enumeration 'AVPixelFormat'
AV_PIX_FMT_NONE = -1
AV_PIX_FMT_YUV420P = 0
AV_PIX_FMT_YUYV422 = 1
AV_PIX_FMT_RGB24 = 2
AV_PIX_FMT_BGR24 = 3
AV_PIX_FMT_YUV422P = 4
AV_PIX_FMT_YUV444P = 5
AV_PIX_FMT_YUV410P = 6
AV_PIX_FMT_YUV411P = 7
AV_PIX_FMT_MONOWHITE = 9
AV_PIX_FMT_PAL8 = 11
AV_PIX_FMT_YUVJ420P = 12
AV_PIX_FMT_YUVJ422P = 13
AV_PIX_FMT_YUVJ444P = 14
AV_PIX_FMT_XVMC_MPEG2_MC = 15
AV_PIX_FMT_XVMC_MPEG2_IDCT = 16
AV_PIX_FMT_UYVY422 = 17
AV_PIX_FMT_UYYVYY411 = 18
AV_PIX_FMT_BGR8 = 19
AV_PIX_FMT_BGR4_BYTE = 21
AV_PIX_FMT_RGB4 = 23
AV_PIX_FMT_NV21 = 26
AV_PIX_FMT_ARGB = 27
AV_PIX_FMT_RGBA = 28
AV_PIX_FMT_ABGR = 29
AV_PIX_FMT_BGRA = 30
AV_PIX_FMT_GRAY16BE = 31
AV_PIX_FMT_GRAY16LE = 32
AV_PIX_FMT_RGB48BE = 41
AV_PIX_FMT_RGB48LE = 42
AV_PIX_FMT_RGB565BE = 43
AV_PIX_FMT_RGB565LE = 44
AV_PIX_FMT_RGB555BE = 45
AV_PIX_FMT_RGB555LE = 46
AV_PIX_FMT_BGR565BE = 47
AV_PIX_FMT_BGR565LE = 48
AV_PIX_FMT_BGR555BE = 49
AV_PIX_FMT_BGR555LE = 50
AV_PIX_FMT_VAAPI_MOCO = 51
AV_PIX_FMT_VAAPI_IDCT = 52
AV_PIX_FMT_VAAPI_VLD = 53
AV_PIX_FMT_YUV420P16LE = 54
AV_PIX_FMT_YUV420P16BE = 55
AV_PIX_FMT_YUV422P16LE = 56
AV_PIX_FMT_YUV444P16LE = 58
AV_PIX_FMT_YUV444P16BE = 59
AV_PIX_FMT_VDPAU_MPEG4 = 60
AV_PIX_FMT_DXVA2_VLD = 61
AV_PIX_FMT_RGB444LE = 62
AV_PIX_FMT_RGB444BE = 63
AV_PIX_FMT_BGR444LE = 64
AV_PIX_FMT_BGR444BE = 65
AV_PIX_FMT_GRAY8A = 66
AV_PIX_FMT_BGR48BE = 67
AV_PIX_FMT_BGR48LE = 68
AV_PIX_FMT_YUV420P9BE = 69
AV_PIX_FMT_YUV420P9LE = 70
AV_PIX_FMT_YUV420P10BE = 71
AV_PIX_FMT_YUV420P10LE = 72
AV_PIX_FMT_YUV422P10BE = 73
AV_PIX_FMT_YUV422P10LE = 74
AV_PIX_FMT_YUV444P9BE = 75
AV_PIX_FMT_YUV444P9LE = 76
AV_PIX_FMT_YUV444P10BE = 77
AV_PIX_FMT_YUV444P10LE = 78
AV_PIX_FMT_YUV422P9BE = 79
AV_PIX_FMT_YUV422P9LE = 80
AV_PIX_FMT_VDA_VLD = 81
AV_PIX_FMT_GBRP = 82
AV_PIX_FMT_GBRP9BE = 83
AV_PIX_FMT_GBRP9LE = 84
AV_PIX_FMT_GBRP10BE = 85
AV_PIX_FMT_GBRP10LE = 86
AV_PIX_FMT_GBRP16BE = 87
AV_PIX_FMT_GBRP16LE = 88
AV_PIX_FMT_YUVA444P_LIBAV = 90
AV_PIX_FMT_YUVA420P9BE = 91
AV_PIX_FMT_YUVA422P9BE = 93
AV_PIX_FMT_YUVA422P9LE = 94
AV_PIX_FMT_YUVA444P9BE = 95
AV_PIX_FMT_YUVA444P9LE = 96
AV_PIX_FMT_YUVA420P10LE = 98
AV_PIX_FMT_YUVA422P10BE = 99
AV_PIX_FMT_YUVA444P10BE = 101
AV_PIX_FMT_YUVA444P10LE = 102
AV_PIX_FMT_YUVA420P16LE = 104
AV_PIX_FMT_YUVA444P16BE = 107
AV_PIX_FMT_YUVA444P16LE = 108
AV_PIX_FMT_VDPAU = 109
AV_PIX_FMT_XYZ12LE = 110
AV_PIX_FMT_NV16 = 112
AV_PIX_FMT_NV20LE = 113
AV_PIX_FMT_NV20BE = 114
AV_PIX_FMT_RGBA64BE = 291
AV_PIX_FMT_RGBA64LE = 292
AV_PIX_FMT_BGRA64LE = 294
AV_PIX_FMT_0RGB = 295
AV_PIX_FMT_RGB0 = 296
AV_PIX_FMT_0BGR = 297
AV_PIX_FMT_BGR0 = 298
AV_PIX_FMT_YUVA444P = 299
AV_PIX_FMT_YUVA422P = 300
AV_PIX_FMT_YUV420P12BE = 301
AV_PIX_FMT_YUV420P12LE = 302
AV_PIX_FMT_YUV420P14BE = 303
AV_PIX_FMT_YUV420P14LE = 304
AV_PIX_FMT_YUV422P12BE = 305
AV_PIX_FMT_YUV422P12LE = 306
AV_PIX_FMT_YUV422P14BE = 307
AV_PIX_FMT_YUV422P14LE = 308
AV_PIX_FMT_YUV444P12BE = 309
AV_PIX_FMT_YUV444P12LE = 310
AV_PIX_FMT_YUV444P14BE = 311
AV_PIX_FMT_YUV444P14LE = 312
AV_PIX_FMT_GBRP12BE = 313
AV_PIX_FMT_GBRP12LE = 314
AV_PIX_FMT_GBRP14BE = 315
AV_PIX_FMT_GBRP14LE = 316
AV_PIX_FMT_GBRAP = 317
AV_PIX_FMT_GBRAP16BE = 318
AV_PIX_FMT_GBRAP16LE = 319
AV_PIX_FMT_YUVJ411P = 320
AV_PIX_FMT_BAYER_BGGR8 = 321
AV_PIX_FMT_BAYER_RGGB8 = 322
AV_PIX_FMT_BAYER_GBRG8 = 323
AV_PIX_FMT_BAYER_GRBG8 = 324
AV_PIX_FMT_BAYER_BGGR16LE = 325
AV_PIX_FMT_BAYER_BGGR16BE = 326
AV_PIX_FMT_BAYER_RGGB16LE = 327
AV_PIX_FMT_BAYER_RGGB16BE = 328
AV_PIX_FMT_BAYER_GBRG16LE = 329
AV_PIX_FMT_BAYER_GBRG16BE = 330
AV_PIX_FMT_BAYER_GRBG16LE = 331
AV_PIX_FMT_BAYER_GRBG16BE = 332
AV_PIX_FMT_NB = 333
PIX_FMT_NONE = -1
PIX_FMT_YUV420P = 0
PIX_FMT_YUYV422 = 1
PIX_FMT_RGB24 = 2
PIX_FMT_BGR24 = 3
PIX_FMT_YUV422P = 4
PIX_FMT_YUV444P = 5
PIX_FMT_YUV410P = 6
PIX_FMT_YUV411P = 7
PIX_FMT_GRAY8 = 8
PIX_FMT_MONOWHITE = 9
PIX_FMT_MONOBLACK = 10
PIX_FMT_PAL8 = 11
PIX_FMT_YUVJ420P = 12
PIX_FMT_YUVJ444P = 14
PIX_FMT_XVMC_MPEG2_MC = 15
PIX_FMT_XVMC_MPEG2_IDCT = 16
PIX_FMT_UYVY422 = 17
PIX_FMT_UYYVYY411 = 18
PIX_FMT_BGR8 = 19
PIX_FMT_BGR4 = 20
PIX_FMT_BGR4_BYTE = 21
PIX_FMT_RGB8 = 22
PIX_FMT_RGB4 = 23
PIX_FMT_RGB4_BYTE = 24
PIX_FMT_NV12 = 25
PIX_FMT_NV21 = 26
PIX_FMT_ARGB = 27
PIX_FMT_RGBA = 28
PIX_FMT_ABGR = 29
PIX_FMT_BGRA = 30
PIX_FMT_GRAY16BE = 31
PIX_FMT_GRAY16LE = 32
PIX_FMT_YUV440P = 33
PIX_FMT_YUVJ440P = 34
PIX_FMT_YUVA420P = 35
PIX_FMT_VDPAU_H264 = 36
PIX_FMT_VDPAU_MPEG2 = 38
PIX_FMT_VDPAU_WMV3 = 39
PIX_FMT_VDPAU_VC1 = 40
PIX_FMT_RGB565BE = 43
PIX_FMT_RGB555BE = 45
PIX_FMT_RGB555LE = 46
PIX_FMT_BGR565BE = 47
PIX_FMT_BGR565LE = 48
PIX_FMT_BGR555LE = 50
PIX_FMT_VAAPI_MOCO = 51
PIX_FMT_VAAPI_IDCT = 52
PIX_FMT_VAAPI_VLD = 53
PIX_FMT_YUV420P16LE = 54
PIX_FMT_YUV420P16BE = 55
PIX_FMT_YUV422P16LE = 56
PIX_FMT_DXVA2_VLD = 61
PIX_FMT_RGB444LE = 62
PIX_FMT_RGB444BE = 63
PIX_FMT_BGR444LE = 64
PIX_FMT_BGR444BE = 65
PIX_FMT_GRAY8A = 66
PIX_FMT_BGR48BE = 67
PIX_FMT_YUV420P9BE = 69
PIX_FMT_YUV420P9LE = 70
PIX_FMT_YUV420P10LE = 72
PIX_FMT_YUV444P9BE = 75
PIX_FMT_BGRA64BE = 293
PIX_FMT_0RGB = 295
PIX_FMT_0BGR = 297
PIX_FMT_BGR0 = 298
PIX_FMT_YUVA444P = 299
PIX_FMT_YUVA422P = 300
PIX_FMT_YUV420P12BE = 301
PIX_FMT_YUV420P12LE = 302
PIX_FMT_YUV420P14BE = 303
PIX_FMT_YUV420P14LE = 304
PIX_FMT_YUV422P12BE = 305
PIX_FMT_YUV422P12LE = 306
PIX_FMT_YUV444P12BE = 309
PIX_FMT_YUV444P14BE = 311
PIX_FMT_YUV444P14LE = 312
PIX_FMT_GBRP12BE = 313
PIX_FMT_GBRP12LE = 314
PIX_FMT_GBRP14BE = 315
PIX_FMT_GBRP14LE = 316
PIX_FMT_NB = 317
AVPixelFormat = c_int # enum
PixelFormat = AVPixelFormat # alias
def AV_VERSION_DOT(a,b,c): return a ##. ## b ##. ## c # macro
_POSIX_THREAD_DESTRUCTOR_ITERATIONS = 4 # Variable c_int '4'
PTHREAD_DESTRUCTOR_ITERATIONS = _POSIX_THREAD_DESTRUCTOR_ITERATIONS # alias
AVCOL_TRC_SMPTE240M = 7
# PIX_FMT_YUV444P9 = AV_PIX_FMT_YUV444P9 # alias
AV_CODEC_ID_RL2 = 115
AV_CODEC_ID_THEORA = 31
CODEC_ID_MSZH = 54
AV_CODEC_ID_ADPCM_THP = 69650
AV_CODEC_ID_PCM_S32LE_PLANAR_DEPRECATED = 65565
AV_CODEC_ID_FLASHSV2 = 132
AV_CODEC_ID_QDM2 = 86035
AV_CODEC_ID_XFACE = 1480999235
AV_CODEC_ID_PCM_DVD = 65555
def AVERROR(e): return (-(e)) # macro
AV_CODEC_ID_8BPS = 49
AV_CODEC_ID_RA_288 = 77825
AV_CODEC_ID_DNXHD = 100
# PIX_FMT_RGB565 = AV_PIX_FMT_RGB565 # alias
AV_CODEC_ID_VP3 = 30
def FFALIGN(x,a): return (((x)+(a)-1)&~((a)-1)) # macro
AV_CODEC_ID_HDMV_PGS_SUBTITLE = 94214
CODEC_ID_MOTIONPIXELS = 120
CODEC_ID_VMDVIDEO = 53
def alloca(size): return __builtin_alloca (size) # macro
AV_CODEC_ID_ADPCM_SBPRO_2 = 69649
AVCOL_RANGE_UNSPECIFIED = 0
CODEC_ID_EIA_608 = 1664495672
CODEC_ID_TQI = 123
AV_CODEC_ID_R10K = 146
CODEC_ID_PCM_F32BE = 65556
AV_CODEC_ID_AVUI = 1096176969
AV_CODEC_ID_INDEO3 = 29
AVMEDIA_TYPE_ATTACHMENT = 4
AV_CODEC_ID_Y41P = 1496592720
CODEC_ID_ADPCM_EA_R2 = 69654
AVMEDIA_TYPE_SUBTITLE = 3
CODEC_ID_TRUEMOTION1 = 52
CODEC_ID_ADPCM_EA_R3 = 69653
CODEC_ID_ADPCM_EA_R1 = 69652
AV_CODEC_ID_ADPCM_SBPRO_3 = 69648
AV_CODEC_ID_ESCAPE130_DEPRECATED = 171
AV_CODEC_ID_AIC = 170
AV_CODEC_ID_VP9 = 169
# PIX_FMT_YUV420P12 = AV_PIX_FMT_YUV420P12 # alias
AVMEDIA_TYPE_DATA = 2
AV_CODEC_ID_WESTWOOD_SND1 = 86033
AV_CODEC_ID_FFMETADATA = 135168
# PIX_FMT_YUV420P10 = AV_PIX_FMT_YUV420P10 # alias
AVSTREAM_PARSE_HEADERS = 2
CODEC_ID_ADPCM_SWF = 69645
AV_PIX_FMT_Y400A = AV_PIX_FMT_GRAY8A # alias
PIX_FMT_Y400A = AV_PIX_FMT_Y400A # alias
AV_CODEC_ID_MSS1 = 163
AV_CODEC_ID_ZEROCODEC = 162
AVMEDIA_TYPE_AUDIO = 1
# PIX_FMT_RGB555 = AV_PIX_FMT_RGB555 # alias
def AV_TOSTRING(s): return #s # macro
CODEC_ID_ADPCM_4XM = 69639
# PIX_FMT_RGB32_1 = AV_PIX_FMT_RGB32_1 # alias
AVCOL_TRC_UNSPECIFIED = 2
AVMEDIA_TYPE_VIDEO = 0
AV_CODEC_ID_BMV_VIDEO = 155
AV_CODEC_ID_UTVIDEO = 154
AV_CODEC_ID_SMV = 1936944502
AV_CODEC_ID_VC1IMAGE = 153
AV_CODEC_ID_WMV3IMAGE = 152
CODEC_ID_PCM_S8_PLANAR = 65563
AV_PIX_FMT_GBR24P = AV_PIX_FMT_GBRP # alias
PIX_FMT_GBR24P = AV_PIX_FMT_GBR24P # alias
AVMEDIA_TYPE_UNKNOWN = -1
AV_CODEC_ID_PCM_U32LE = 65546
AVCOL_TRC_GAMMA22 = 4
# PIX_FMT_BGR48 = AV_PIX_FMT_BGR48 # alias
# def __LDBL_REDIR_NTH(name,proto): return name proto __THROW # macro
AV_CODEC_ID_012V = 808530518
CODEC_ID_SONIC_LS = 1397706316
CODEC_ID_WMAV2 = 86024
CODEC_ID_PCM_DVD = 65555
# def __warndecl(name,msg): return extern void name (void) __attribute__((__warning__ (msg))) # macro
# def av_err2str(errnum): return av_make_error_string((char[AV_ERROR_MAX_STRING_SIZE]){0}, AV_ERROR_MAX_STRING_SIZE, errnum) # macro
CODEC_ID_PCM_S24DAUD = 65552
# NULL = __null # alias
CODEC_ID_PCM_U24LE = 65550
CODEC_ID_PGMYUV = 66
# INT_MAX = __INT_MAX__ # alias
# NL_SETMAX = INT_MAX # alias
AV_CODEC_ID_ANM = 135
__NFDBITS = 64 # Variable c_int '64'
NFDBITS = __NFDBITS # alias
# PIX_FMT_BGR32 = AV_PIX_FMT_BGR32 # alias
def AV_STRINGIFY(s): return AV_TOSTRING(s) # macro
# LLONG_MAX = __LONG_LONG_MAX__ # alias
AV_SAMPLE_FMT_DBLP = 9
AVCOL_TRC_BT709 = 1
_POSIX2_LINE_MAX = 2048 # Variable c_int '2048'
LINE_MAX = _POSIX2_LINE_MAX # alias
CODEC_ID_PCM_U16LE = 65538
AV_MATRIX_ENCODING_NB = 3
AV_CODEC_ID_AURA = 124
CODEC_ID_FIRST_AUDIO = 65536
__codecvt_noconv = 3
AV_CODEC_ID_TGQ = 122
AV_CODEC_ID_MOTIONPIXELS = 120
AV_CODEC_ID_CYUV = 27
AV_CODEC_ID_CMV = 119
AVCOL_SPC_RGB = 0
def FFUMOD(a,b): return ((a)-(b)*FFUDIV(a,b)) # macro
AV_CODEC_ID_AVRP = 1096176208
CODEC_ID_SMC = 50
CODEC_ID_DXTORY = 157
AV_CODEC_ID_FFWAVESYNTH = 1179014995
AV_CODEC_ID_ADPCM_YAMAHA = 69646
AV_CODEC_ID_INDEO4 = 112
_POSIX_ = 2
AV_CODEC_ID_PCX = 110
AV_CODEC_ID_VB = 109
AV_MATRIX_ENCODING_NONE = 0
CODEC_ID_DVB_TELETEXT = 94215
AV_CODEC_ID_VP6A = 107
AV_CODEC_ID_METASOUND = 86080
AV_CODEC_ID_C93 = 103
# def AV_PRAGMA(s): return _Pragma(#s) # macro
AV_CODEC_ID_THP = 101
AV_MIX_COEFF_TYPE_FLT = 2
AV_CODEC_ID_DSICINVIDEO = 95
AV_CODEC_ID_VP6 = 92
def MKBETAG(a,b,c,d): return ((d) | ((c) << 8) | ((b) << 16) | ((unsigned)(a) << 24)) # macro
AV_CODEC_ID_VP5 = 91
AV_CODEC_ID_HUFFYUV = 26
AV_CODEC_ID_JPEG2000 = 89
AVFMT_DURATION_FROM_PTS = 0
AV_CODEC_ID_FLASHSV = 87
AV_CODEC_ID_EXR = 809850962
AV_CODEC_ID_NUV = 85
CODEC_ID_8BPS = 49
AV_CODEC_ID_SMACKVIDEO = 84
def __va_copy(d,s): return __builtin_va_copy(d,s) # macro
AV_CODEC_ID_AVS = 83
# def AV_GCC_VERSION_AT_LEAST(x,y): return (__GNUC__ > x || __GNUC__ == x && __GNUC_MINOR__ >= y) # macro
_XOPEN_ = 1
AV_CODEC_ID_CSCD = 80
AV_CODEC_ID_BMP = 79
AV_CODEC_ID_FRAPS = 77
AV_CODEC_ID_INDEO2 = 76
AV_CODEC_ID_WNV1 = 74
AV_CODEC_ID_LOCO = 73
AV_SIDE_DATA_PARAM_CHANGE_CHANNEL_COUNT = 1
AV_CODEC_ID_ASV2 = 33
def AV_PIX_FMT_NE(be,le): return AV_PIX_FMT_ ##le # macro
AV_CODEC_ID_VC1 = 71
AV_CODEC_ID_RV40 = 70
CODEC_ID_WMV3 = 72
AV_CODEC_ID_PAM = 67
AVCHROMA_LOC_TOPLEFT = 3
AV_MIX_COEFF_TYPE_NB = 3
AV_CODEC_ID_BMV_AUDIO = 86073
AV_CODEC_ID_DXA = 99
AV_PICTURE_TYPE_B = 3
AV_CODEC_ID_DVVIDEO = 25
AV_CODEC_ID_MSMPEG4V1 = 15
AV_CODEC_ID_QDRAW = 59
AV_CODEC_ID_8SVX_FIB = 86072
CODEC_ID_MSA1 = 164
AV_CODEC_ID_ULTI = 58
AV_CODEC_ID_QTRLE = 56
AV_CODEC_ID_ESCAPE130 = 1160852272
CODEC_ID_IDCIN = 48
def __STRING(x): return #x # macro
CODEC_ID_RL2 = 115
AV_CODEC_ID_G729 = 86070
AV_CODEC_ID_G723_1 = 86069
CODEC_ID_V408 = 1446260792
# PIX_FMT_YUV444P12 = AV_PIX_FMT_YUV444P12 # alias
def FD_ZERO(fdsetp): return __FD_ZERO (fdsetp) # macro
__codecvt_ok = 0
def __MATHCALLX(function,suffix,args,attrib): return __MATHDECLX (_Mdouble_,function,suffix, args, attrib) # macro
# PIX_FMT_GRAY16 = AV_PIX_FMT_GRAY16 # alias
# def __u_intN_t(N,MODE): return typedef unsigned int u_int ##N ##_t __attribute__ ((__mode__ (MODE))) # macro
CODEC_ID_MSVIDEO1 = 47
AV_MATRIX_ENCODING_DPLII = 2
AV_MATRIX_ENCODING_DOLBY = 1
CODEC_ID_SSA = 94212
AVCHROMA_LOC_NB = 7
CODEC_ID_ADPCM_IMA_ISS = 69659
AVCHROMA_LOC_BOTTOM = 6
AVCHROMA_LOC_BOTTOMLEFT = 5
AVCHROMA_LOC_TOP = 4
CODEC_ID_R10K = 146
AVCHROMA_LOC_CENTER = 2
AVCHROMA_LOC_LEFT = 1
AVCHROMA_LOC_UNSPECIFIED = 0
AV_CODEC_ID_BINKAUDIO_RDFT = 86064
def isgreater(x,y): return __builtin_isgreater(x, y) # macro
AVDISCARD_NONE = -16
CODEC_ID_PTX = 105
# PIX_FMT_GBRP9 = AV_PIX_FMT_GBRP9 # alias
AV_CODEC_ID_REALTEXT = 1381259348
# def __nonnull(params): return __attribute__ ((__nonnull__ params)) # macro
AV_CLASS_CATEGORY_SWRESAMPLER = 10
AV_CODEC_ID_BRENDER_PIX = 1112557912
CODEC_ID_MSRLE = 46
AV_CODEC_ID_TRUEHD = 86061
AV_CODEC_ID_ADPCM_EA = 69642
# PIX_FMT_YUV422P16 = AV_PIX_FMT_YUV422P16 # alias
AVFMT_DURATION_FROM_BITRATE = 2
def AV_NE(be,le): return (le) # macro
AVFMT_DURATION_FROM_STREAM = 1
AV_MIX_COEFF_TYPE_Q8 = 0
# PIX_FMT_GBRP16 = AV_PIX_FMT_GBRP16 # alias
AV_CODEC_ID_SAMI = 1396788553
AV_CLASS_CATEGORY_ENCODER = 5
CODEC_ID_WS_VQA = 45
# def __FDS_BITS(set): return ((set)->fds_bits) # macro
AV_CODEC_ID_ATRAC3P = 86056
CODEC_ID_PICTOR = 142
CODEC_ID_FLASHSV2 = 132
CODEC_ID_ADPCM_EA_XAS = 69657
AV_CODEC_ID_WMALOSSLESS = 86055
AVSTREAM_PARSE_FULL_ONCE = 4
CODEC_ID_VP8 = 141
def AV_JOIN(a,b): return AV_GLUE(a, b) # macro
AV_CLASS_CATEGORY_OUTPUT = 2
AV_CODEC_ID_PCM_ALAW = 65543
AV_CODEC_ID_H263 = 5
# PIX_FMT_GBRP14 = AV_PIX_FMT_GBRP14 # alias
AV_CODEC_ID_H263I = 21
AV_CODEC_ID_JACOSUB = 1246975298
def __glibc_unlikely(cond): return __builtin_expect ((cond), 0) # macro
CODEC_ID_IFF_BYTERUN1 = 138
AV_CODEC_ID_G2M_DEPRECATED = 172
CODEC_ID_FLIC = 51
CODEC_ID_CINEPAK = 44
def __CONCAT(x,y): return x ## y # macro
CODEC_ID_DVB_SUBTITLE = 94209
CODEC_ID_ADPCM_IMA_EA_EACS = 69656
def WEXITSTATUS(status): return __WEXITSTATUS (__WAIT_INT (status)) # macro
AV_ROUND_PASS_MINMAX = 8192
def AV_GLUE(a,b): return a ## b # macro
AV_CODEC_ID_APE = 86049
AV_ROUND_UP = 3
# PIX_FMT_RGB48 = AV_PIX_FMT_RGB48 # alias
AV_ROUND_DOWN = 2
AV_ROUND_INF = 1
CODEC_ID_KGV1 = 139
AV_ROUND_ZERO = 0
AV_CODEC_ID_BETHSOFTVID = 104
# PIX_FMT_GBRP12 = AV_PIX_FMT_GBRP12 # alias
CODEC_ID_RPZA = 43
# __MATH_INLINE = __extern_always_inline # alias
CODEC_ID_ADPCM_IMA_EA_SEAD = 69655
AV_CODEC_ID_PCM_U8 = 65541
CODEC_ID_MAD = 130
ME_ITER = 50
ME_UMH = 8
ME_HEX = 7
ME_X1 = 6
# PIX_FMT_GBRP10 = AV_PIX_FMT_GBRP10 # alias
ME_FULL = 2
AV_CODEC_ID_DSICINAUDIO = 86042
AV_CODEC_ID_WEBP = 1464156752
AV_CODEC_ID_XAN_WC3 = 41
AVSTREAM_PARSE_FULL = 1
AV_CODEC_ID_DVB_SUBTITLE = 94209
CODEC_ID_AURA = 124
AV_CODEC_ID_SRT = 94216
# def __bswap_constant_64(x): return (__extension__ ((((x) & 0xff00000000000000ull) >> 56) | (((x) & 0x00ff000000000000ull) >> 40) | (((x) & 0x0000ff0000000000ull) >> 24) | (((x) & 0x000000ff00000000ull) >> 8) | (((x) & 0x00000000ff000000ull) << 8) | (((x) & 0x0000000000ff0000ull) << 24) | (((x) & 0x000000000000ff00ull) << 40) | (((x) & 0x00000000000000ffull) << 56))) # macro
# def __LDBL_REDIR1(name,proto,alias): return name proto # macro
AV_PICTURE_TYPE_SI = 5
AV_PICTURE_TYPE_S = 4
AV_PICTURE_TYPE_P = 2
CODEC_ID_ADPCM_SBPRO_2 = 69649
AV_PICTURE_TYPE_I = 1
AV_RESAMPLE_FILTER_TYPE_KAISER = 2
CODEC_ID_TGV = 121
AV_SAMPLE_FMT_FLTP = 8
AV_CODEC_ID_DVD_SUBTITLE = 94208
CODEC_ID_PCM_S8 = 65540
AV_CODEC_ID_V210X = 126
CODEC_ID_CMV = 119
FF_OPT_TYPE_CONST = 128
FF_OPT_TYPE_BINARY = 7
FF_OPT_TYPE_RATIONAL = 6
def __bswap_constant_32(x): return ((((x) & 0xff000000) >> 24) | (((x) & 0x00ff0000) >> 8) | (((x) & 0x0000ff00) << 8) | (((x) & 0x000000ff) << 24)) # macro
FF_OPT_TYPE_STRING = 5
AV_CODEC_ID_ALAC = 86032
FF_OPT_TYPE_FLOAT = 4
FF_OPT_TYPE_DOUBLE = 3
CODEC_ID_BFI = 118
FF_OPT_TYPE_INT64 = 2
FP_NORMAL = 4
FF_OPT_TYPE_FLAGS = 0
AV_OPT_TYPE_CHANNEL_LAYOUT = 1128811585
AV_CODEC_ID_WEBVTT = 1465275476
AV_OPT_TYPE_COLOR = 1129270354
# av_clip_uintp2 = av_clip_uintp2_c # alias
AV_OPT_TYPE_DURATION = 1146442272
AV_AUDIO_SERVICE_TYPE_HEARING_IMPAIRED = 3
AV_OPT_TYPE_VIDEO_RATE = 1448231252
AV_OPT_TYPE_SAMPLE_FMT = 1397116244
CODEC_ID_FRWU = 131
def htole64(x): return (x) # macro
CODEC_ID_PAF_AUDIO = 1346455105
AV_OPT_TYPE_IMAGE_SIZE = 1397316165
AV_CODEC_ID_MP3ON4 = 86030
AV_OPT_TYPE_CONST = 128
AV_OPT_TYPE_BINARY = 7
AV_OPT_TYPE_RATIONAL = 6
AV_OPT_TYPE_STRING = 5
AV_OPT_TYPE_FLOAT = 4
AV_CODEC_ID_FIRST_SUBTITLE = 94208
AV_OPT_TYPE_DOUBLE = 3
AV_OPT_TYPE_INT64 = 2
CODEC_ID_MIMIC = 114
CODEC_ID_INDEO5 = 113
AV_CODEC_ID_CLLC = 167
AV_FIELD_TB = 4
CODEC_ID_ROQ_DPCM = 81920
AV_FRAME_DATA_PANSCAN = 0
CODEC_ID_INDEO4 = 112
CODEC_ID_ADPCM_IMA_AMV = 69651
AV_CODEC_ID_FFV1 = 34
def UINTMAX_C(c): return c ## UL # macro
AV_CODEC_ID_MSZH = 54
AV_CODEC_ID_H264 = 28
AV_CODEC_ID_SVQ3 = 24
AV_CODEC_ID_TIFF = 97
# PIX_FMT_BGR555 = AV_PIX_FMT_BGR555 # alias
AV_CODEC_ID_MTS2 = 166
AV_FIELD_BB = 3
CODEC_ID_MDEC = 38
AV_CODEC_ID_A64_MULTI5 = 145
AV_CODEC_ID_RV10 = 6
CODEC_ID_SONIC = 1397706307
# __CLOCKID_T_TYPE = __S32_TYPE # alias
CODEC_ID_ADPCM_THP = 69650
AV_MIX_COEFF_TYPE_Q15 = 1
AV_CODEC_ID_MPEG2VIDEO_XVMC = 3
AV_CODEC_ID_MPEG1VIDEO = 1
AV_CODEC_ID_NONE = 0
# def av_uninit(x): return x=x # macro
def __WCOREDUMP(status): return ((status) & __WCOREFLAG) # macro
AV_CODEC_ID_MSA1 = 164
CODEC_ID_BETHSOFTVID = 104
AV_CODEC_ID_GIF = 98
AV_CODEC_ID_RAWVIDEO = 14
AV_OPT_FLAG_IMPLICIT_KEY = 1
def __bos0(ptr): return __builtin_object_size (ptr, 0) # macro
AV_CODEC_ID_TSCC2 = 165
AV_CODEC_ID_ADPCM_IMA_WAV = 69633
CODEC_ID_SGI = 102
CODEC_ID_TXD = 106
AV_LOCK_RELEASE = 2
AV_CODEC_ID_PROBE = 102400
CODEC_ID_BINKVIDEO = 136
CODEC_ID_THP = 101
CODEC_ID_DNXHD = 100
AVFILTER_AUTO_CONVERT_ALL = 0
AV_CODEC_ID_XSUB = 94211
AV_RESAMPLE_DITHER_NB = 5
CODEC_ID_GIF = 98
CODEC_ID_VCR1 = 36
__ssize_t = c_long
_IO_ssize_t = __ssize_t # alias
CODEC_ID_ADPCM_SBPRO_3 = 69648
CODEC_ID_TIFF = 97
_POSIX_ARG_MAX = 4096 # Variable c_int '4096'
NL_ARGMAX = _POSIX_ARG_MAX # alias
CODEC_ID_C93 = 103
CODEC_ID_ILBC = 86076
def va_end(v): return __builtin_va_end(v) # macro
AV_CODEC_ID_JV = 150
CODEC_ID_DSICINVIDEO = 95
__codecvt_error = 2
AV_CODEC_ID_TIERTEXSEQVIDEO = 96
AV_CODEC_ID_JPEGLS = 12
AV_RESAMPLE_DITHER_TRIANGULAR_NS = 4
# def FFSWAP(type,a,b): return do{type SWAP_tmp= b; b= a; a= SWAP_tmp;}while(0) # macro
AV_FIELD_UNKNOWN = 0
CODEC_ID_AMR_NB = 73728
# def _IO_ferror_unlocked(__fp): return (((__fp)->_flags & _IO_ERR_SEEN) != 0) # macro
AV_CLASS_CATEGORY_NB = 11
AV_CLASS_CATEGORY_SWSCALER = 9
AV_CODEC_ID_PCM_S24LE_PLANAR = 407917392
AV_CLASS_CATEGORY_BITSTREAM_FILTER = 8
AV_CLASS_CATEGORY_FILTER = 7
CODEC_ID_IAC = 86075
AV_CLASS_CATEGORY_DECODER = 6
AV_CODEC_ID_VMDAUDIO = 86027
AV_CLASS_CATEGORY_INPUT = 1
AV_CODEC_ID_PAF_AUDIO = 1346455105
AV_CLASS_CATEGORY_NA = 0
CODEC_ID_VP5 = 91
AV_RESAMPLE_DITHER_TRIANGULAR_HP = 3
AV_CODEC_ID_SP5X = 11
AV_RESAMPLE_DITHER_NONE = 0
CODEC_ID_FFV1 = 34
# def _IO_feof_unlocked(__fp): return (((__fp)->_flags & _IO_EOF_SEEN) != 0) # macro
# __PID_T_TYPE = __S32_TYPE # alias
CODEC_ID_RALF = 86074
def UINT8_C(c): return c # macro
def FD_SET(fd,fdsetp): return __FD_SET (fd, fdsetp) # macro
AV_CODEC_ID_8SVX_EXP = 86071
AV_CODEC_ID_DTS = 86020
AV_CODEC_ID_TARGA = 94
# PIX_FMT_0RGB32 = AV_PIX_FMT_0RGB32 # alias
AV_RESAMPLE_DITHER_TRIANGULAR = 2
AV_CODEC_ID_MP3ADU = 86029
CODEC_ID_PCM_MULAW = 65542
AV_CODEC_ID_FLAC = 86028
CODEC_ID_AVRP = 1096176208
CODEC_ID_ASV2 = 33
AV_CLASS_CATEGORY_MUXER = 3
def va_start(v,l): return __builtin_va_start(v,l) # macro
AV_CODEC_ID_WMAV2 = 86024
def va_copy(d,s): return __builtin_va_copy(d,s) # macro
AV_CODEC_ID_VORBIS = 86021
CODEC_ID_BMV_AUDIO = 86073
def va_arg(v,l): return __builtin_va_arg(v,l) # macro
AV_CODEC_ID_AC3 = 86019
AV_CODEC_ID_AAC = 86018
CODEC_ID_ZMBV = 82
AV_CODEC_ID_MP3 = 86017
# def signbit(x): return (sizeof (x) == sizeof (float) ? __signbitf (x) : sizeof (x) == sizeof (double) ? __signbit (x) : __signbitl (x)) # macro
def putc(_ch,_fp): return _IO_putc (_ch, _fp) # macro
AV_CODEC_ID_XAN_DPCM = 81922
AV_CODEC_ID_INTERPLAY_DPCM = 81921
AV_CODEC_ID_ROQ_DPCM = 81920
def major(dev): return gnu_dev_major (dev) # macro
def le64toh(x): return (x) # macro
def le32toh(x): return (x) # macro
# PIX_FMT_BGR444 = AV_PIX_FMT_BGR444 # alias
def le16toh(x): return (x) # macro
def isunordered(u,v): return __builtin_isunordered(u, v) # macro
AV_CODEC_ID_ADPCM_DTK = 1146374944
# PIX_FMT_YUV422P10 = AV_PIX_FMT_YUV422P10 # alias
AV_CODEC_ID_ADPCM_IMA_OKI = 1330333984
AV_CODEC_ID_VP6F = 93
# PIX_FMT_0BGR32 = AV_PIX_FMT_0BGR32 # alias
def isnormal(x): return (fpclassify (x) == FP_NORMAL) # macro
CODEC_ID_4XM = 35
# def isnan(x): return (sizeof (x) == sizeof (float) ? __isnanf (x) : sizeof (x) == sizeof (double) ? __isnan (x) : __isnanl (x)) # macro
AV_RESAMPLE_DITHER_RECTANGULAR = 1
def islessgreater(x,y): return __builtin_islessgreater(x, y) # macro
AV_CODEC_ID_ADPCM_IMA_ISS = 69659
AV_CODEC_ID_CDXL = 160
AV_CODEC_ID_ADPCM_EA_XAS = 69657
CODEC_ID_ASV1 = 32
# def isinf(x): return (sizeof (x) == sizeof (float) ? __isinff (x) : sizeof (x) == sizeof (double) ? __isinf (x) : __isinfl (x)) # macro
AV_CODEC_ID_ADPCM_IMA_EA_SEAD = 69655
AV_CODEC_ID_ADPCM_EA_R2 = 69654
def INT64_C(c): return c ## L # macro
AV_CODEC_ID_ADPCM_EA_R3 = 69653
AV_CODEC_ID_PCM_S8_PLANAR = 65563
CODEC_ID_DXA = 99
def htole32(x): return (x) # macro
def htole16(x): return (x) # macro
CODEC_ID_FRAPS = 77
AV_CODEC_ID_ADPCM_SBPRO_4 = 69647
def htobe16(x): return __bswap_16 (x) # macro
AV_CODEC_ID_ADPCM_SWF = 69645
# def fpclassify(x): return (sizeof (x) == sizeof (float) ? __fpclassifyf (x) : sizeof (x) == sizeof (double) ? __fpclassify (x) : __fpclassifyl (x)) # macro
AV_CODEC_ID_ADPCM_G726 = 69643
def be32toh(x): return __bswap_32 (x) # macro
CODEC_ID_INDEO2 = 76
AV_CODEC_ID_ADPCM_ADX = 69641
AV_CODEC_ID_ADPCM_XA = 69640
AV_CODEC_ID_ADPCM_4XM = 69639
CODEC_ID_FLAC = 86028
AV_CODEC_ID_ADPCM_MS = 69638
AV_CODEC_ID_ADPCM_IMA_SMJPEG = 69637
def av_int_list_length(list,term): return av_int_list_length_for_size(sizeof(*(list)), list, term) # macro
AV_CODEC_ID_ADPCM_IMA_DK4 = 69635
__PDP_ENDIAN = 3412 # Variable c_int '3412'
PDP_ENDIAN = __PDP_ENDIAN # alias
# def av_alloc_size(...): return __attribute__((alloc_size(__VA_ARGS__))) # macro
AV_CODEC_ID_ADPCM_IMA_QT = 69632
AV_CODEC_ID_PCM_S16BE_PLANAR = 1347637264
AV_CODEC_ID_PCM_S32LE_PLANAR = 542135120
def __warnattr(msg): return __attribute__((__warning__ (msg))) # macro
CODEC_ID_ADPCM_SBPRO_4 = 69647
CODEC_ID_8SVX_EXP = 86071
# def strndupa(s,n): return (__extension__ ({ const char *__old = (s); size_t __len = strnlen (__old, (n)); char *__new = (char *) __builtin_alloca (__len + 1); __new[__len] = '\0'; (char *) memcpy (__new, __old, __len); })) # macro
# def av_opt_set_int_list(obj,name,val,term,flags): return (av_int_list_length(val, term) > INT_MAX / sizeof(*(val)) ? AVERROR(EINVAL) : av_opt_set_bin(obj, name, (const uint8_t *)(val), av_int_list_length(val, term) * sizeof(*(val)), flags)) # macro
# def _IO_peekc_unlocked(_fp): return (_IO_BE ((_fp)->_IO_read_ptr >= (_fp)->_IO_read_end, 0) && __underflow (_fp) == EOF ? EOF : *(unsigned char *) (_fp)->_IO_read_ptr) # macro
# def _IO_PENDING_OUTPUT_COUNT(_fp): return ((_fp)->_IO_write_ptr - (_fp)->_IO_write_base) # macro
def _IO_BE(expr,res): return __builtin_expect ((expr), res) # macro
def WTERMSIG(status): return __WTERMSIG (__WAIT_INT (status)) # macro
def WIFSTOPPED(status): return __WIFSTOPPED (__WAIT_INT (status)) # macro
CODEC_ID_RV40 = 70
AV_AUDIO_SERVICE_TYPE_COMMENTARY = 5
def WIFCONTINUED(status): return __WIFCONTINUED (__WAIT_INT (status)) # macro
CODEC_ID_WNV1 = 74
AV_CODEC_ID_MAD = 130
CODEC_ID_THEORA = 31
AV_CODEC_ID_SUBVIEWER = 1400201814
AV_ROUND_NEAR_INF = 5
def MKTAG(a,b,c,d): return ((a) | ((b) << 8) | ((c) << 16) | ((unsigned)(d) << 24)) # macro
CODEC_ID_G729 = 86070
# def strdupa(s): return (__extension__ ({ const char *__old = (s); size_t __len = strlen (__old) + 1; char *__new = (char *) __builtin_alloca (__len); (char *) memcpy (__new, __old, __len); })) # macro
def INTMAX_C(c): return c ## L # macro
def INT8_C(c): return c # macro
def INT16_C(c): return c # macro
AV_CODEC_ID_PCM_S24DAUD = 65552
# def FF_CEIL_RSHIFT(a,b): return (!av_builtin_constant_p(b) ? -((-(a)) >> (b)) : ((a) + (1<<(b)) - 1) >> (b)) # macro
# def FFUDIV(a,b): return (((a)>0 ?(a):(a)-(b)+1) / (b)) # macro
AVCOL_PRI_FILM = 8
# NL_TEXTMAX = INT_MAX # alias
AVCOL_PRI_SMPTE240M = 7
AVFILTER_AUTO_CONVERT_NONE = -1
def FFMIN3(a,b,c): return FFMIN(FFMIN(a,b),c) # macro
AVCOL_SPC_NB = 9
# def FFMAX(a,b): return ((a) > (b) ? (a) : (b)) # macro
AV_CODEC_ID_DXTORY = 157
AVCOL_SPC_SMPTE170M = 6
# av_sat_add32 = av_sat_add32_c # alias
CODEC_ID_VP3 = 30
CODEC_ID_XWD = 159
AV_CODEC_ID_FRWU = 131
AV_CODEC_ID_PCM_BLURAY = 65560
CODEC_ID_TIERTEXSEQVIDEO = 96
CODEC_ID_PNG = 62
AV_CODEC_ID_CPIA = 1129335105
# def __intN_t(N,MODE): return typedef int int ##N ##_t __attribute__ ((__mode__ (MODE))) # macro
# def __errordecl(name,msg): return extern void name (void) __attribute__((__error__ (msg))) # macro
# def __bswap_constant_16(x): return ((unsigned short int) ((((x) >> 8) & 0xff) | (((x) & 0xff) << 8))) # macro
# def __bswap_16(x): return (__extension__ ({ unsigned short int __v, __x = (unsigned short int) (x); if (__builtin_constant_p (__x)) __v = __bswap_constant_16 (__x); else __asm__ ("rorw $8, %w0" : "=r" (__v) : "0" (__x) : "cc"); __v; })) # macro
AV_CODEC_ID_RA_144 = 77824
def __bos(ptr): return __builtin_object_size (ptr, __USE_FORTIFY_LEVEL > 1) # macro
def __attribute_format_strfmon__(a,b): return __attribute__ ((__format__ (__strfmon__, a, b))) # macro
CODEC_ID_VIXL = 60
CODEC_ID_H261 = 4
def __W_EXITCODE(ret,sig): return ((ret) << 8 | (sig)) # macro
CODEC_ID_QDRAW = 59
AV_PICTURE_TYPE_NONE = 0
AV_CODEC_ID_VBLE = 156
CODEC_ID_PCM_ALAW = 65543
def __WSTOPSIG(status): return __WEXITSTATUS(status) # macro
def __WIFSTOPPED(status): return (((status) & 0xff) == 0x7f) # macro
def __WIFEXITED(status): return (__WTERMSIG(status) == 0) # macro
# __BLKSIZE_T_TYPE = __SYSCALL_SLONG_TYPE # alias
def __WIFCONTINUED(status): return ((status) == __W_CONTINUED) # macro
def __WEXITSTATUS(status): return (((status) & 0xff00) >> 8) # macro
CODEC_ID_AASC = 75
# def __WAIT_INT(status): return (*(int *) &(status)) # macro
def __REDIRECT_NTH_LDBL(name,proto,alias): return __REDIRECT_NTH (name, proto, alias) # macro
# def __REDIRECT_NTHNL(name,proto,alias): return name proto __THROWNL __asm__ (__ASMNAME (#alias)) # macro
# def __REDIRECT_NTH(name,proto,alias): return name proto __THROW __asm__ (__ASMNAME (#alias)) # macro
def __REDIRECT_LDBL(name,proto,alias): return __REDIRECT (name, proto, alias) # macro
AV_LOCK_OBTAIN = 1
def __PMT(args): return args # macro
def __P(args): return args # macro
AV_CODEC_ID_CAVS = 88
# NL_NMAX = INT_MAX # alias
# def __MATHDECLX(type,function,suffix,args,attrib): return __MATHDECL_1(type, function,suffix, args) __attribute__ (attrib); __MATHDECL_1(type, __CONCAT(__,function),suffix, args) __attribute__ (attrib) # macro
def isgreaterequal(x,y): return __builtin_isgreaterequal(x, y) # macro
AV_CODEC_ID_SVQ1 = 23
CODEC_ID_H264 = 28
def htobe64(x): return __bswap_64 (x) # macro
def INT32_C(c): return c # macro
# def __FD_ZERO(fdsp): return do { int __d0, __d1; __asm__ __volatile__ ("cld; rep; " __FD_ZERO_STOS : "=c" (__d0), "=D" (__d1) : "a" (0), "0" (sizeof (fd_set) / sizeof (__fd_mask)), "1" (&__FDS_BITS (fdsp)[0]) : "memory"); } while (0) # macro
# def __FD_SET(d,set): return ((void) (__FDS_BITS (set)[__FD_ELT (d)] |= __FD_MASK (d))) # macro
# def __FD_MASK(d): return ((__fd_mask) 1 << ((d) % __NFDBITS)) # macro
def offsetof(TYPE,MEMBER): return __builtin_offsetof (TYPE, MEMBER) # macro
def __FD_ISSET(d,set): return ((__FDS_BITS (set)[__FD_ELT (d)] & __FD_MASK (d)) != 0) # macro
# def __FD_ELT(d): return __extension__ ({ long int __d = (d); (__builtin_constant_p (__d) ? (0 <= __d && __d < __FD_SETSIZE ? (__d / __NFDBITS) : __fdelt_warn (__d)) : __fdelt_chk (__d)); }) # macro
def minor(dev): return gnu_dev_minor (dev) # macro
CODEC_ID_PCM_U16BE = 65539
AV_CODEC_ID_G2M = 4665933
# NL_MSGMAX = INT_MAX # alias
# def _IO_getc_unlocked(_fp): return (_IO_BE ((_fp)->_IO_read_ptr >= (_fp)->_IO_read_end, 0) ? __uflow (_fp) : *(unsigned char *) (_fp)->_IO_read_ptr++) # macro
AV_CODEC_ID_RV20 = 7
AV_CODEC_ID_ADPCM_CT = 69644
AV_CODEC_ID_CLJR = 37
__pid_t = c_int
_IO_pid_t = __pid_t # alias
AV_CODEC_ID_PAF_VIDEO = 1346455126
CODEC_ID_ADPCM_YAMAHA = 69646
AV_CODEC_ID_PCM_F32LE = 65557
CODEC_ID_TARGA = 94
CODEC_ID_ADPCM_MS = 69638
AVDISCARD_NONREF = 8
# _IO_wint_t = wint_t # alias
NL_LANGMAX = _POSIX2_LINE_MAX # alias
CODEC_ID_HUFFYUV = 26
CODEC_ID_VBLE = 156
AV_CODEC_ID_SUBVIEWER1 = 1398953521
CODEC_ID_ADPCM_IMA_SMJPEG = 69637
CODEC_ID_MACE3 = 86025
# def DECLARE_ALIGNED(n,t,v): return t __attribute__ ((aligned (n))) v # macro
AVLINK_INIT = 2
def AV_VERSION(a,b,c): return AV_VERSION_DOT(a, b, c) # macro
FP_INFINITE = 1
AVCOL_RANGE_JPEG = 2
# def av_dlog(pctx,...): return do { if (0) av_log(pctx, AV_LOG_DEBUG, __VA_ARGS__); } while (0) # macro
CODEC_ID_DFA = 151
CODEC_ID_VP6 = 92
CODEC_ID_ADPCM_IMA_WS = 69636
def FD_ISSET(fd,fdsetp): return __FD_ISSET (fd, fdsetp) # macro
def FD_CLR(fd,fdsetp): return __FD_CLR (fd, fdsetp) # macro
AV_CODEC_ID_TRUESPEECH = 86037
AVLINK_STARTINIT = 1
AVCOL_PRI_SMPTE170M = 6
AV_CODEC_ID_DFA = 151
ME_TESA = 9
AV_CODEC_ID_H261 = 4
AV_CODEC_ID_PCM_S16LE_PLANAR = 65554
CODEC_ID_ADPCM_IMA_DK4 = 69635
AV_CLASS_CATEGORY_DEMUXER = 4
CODEC_ID_ATRAC3 = 86047
AVLINK_UNINIT = 0
AV_CODEC_ID_PCM_F64LE = 65559
AV_CODEC_ID_XBM = 161
# def __FD_CLR(d,set): return ((void) (__FDS_BITS (set)[__FD_ELT (d)] &= ~__FD_MASK (d))) # macro
# av_extern_inline = inline # alias
# def __WIFSIGNALED(status): return (((signed char) (((status) & 0x7f) + 1) >> 1) > 0) # macro
AV_CODEC_ID_V210 = 128
CODEC_ID_SVQ1 = 23
FP_SUBNORMAL = 3
CODEC_ID_INDEO3 = 29
FP_ZERO = 2
AV_CODEC_ID_PCM_ZORK = 65553
ME_LOG = 3
FP_NAN = 0
AV_CODEC_ID_PCM_F32BE = 65556
AV_CODEC_ID_MACE6 = 86026
AV_CODEC_ID_ADPCM_G726LE = 909260615
AV_CODEC_ID_MOV_TEXT = 94213
# def __ASMNAME2(prefix,cname): return __STRING (prefix) cname # macro
def __attribute_format_arg__(x): return __attribute__ ((__format_arg__ (x))) # macro
ME_ZERO = 1
AV_CODEC_ID_PCM_S24LE_PLANAR_DEPRECATED = 65564
def __ASMNAME(cname): return __ASMNAME2 (__USER_LABEL_PREFIX__, cname) # macro
# LONG_LONG_MAX = __LONG_LONG_MAX__ # alias
# def _IO_putc_unlocked(_ch,_fp): return (_IO_BE ((_fp)->_IO_write_ptr >= (_fp)->_IO_write_end, 0) ? __overflow (_fp, (unsigned char) (_ch)) : (unsigned char) (*(_fp)->_IO_write_ptr++ = (_ch))) # macro
CODEC_ID_VMNC = 90
CODEC_ID_FLV1 = 22
def UINT64_C(c): return c ## UL # macro
CODEC_ID_SVQ3 = 24
CODEC_ID_JPEG2000 = 89
CODEC_ID_ADPCM_IMA_WAV = 69633
AV_CODEC_ID_MACE3 = 86025
def _IO_peekc(_fp): return _IO_peekc_unlocked (_fp) # macro
AV_CODEC_ID_PCM_U24LE = 65550
AVDISCARD_DEFAULT = 0
AV_CODEC_ID_MXPEG = 147
AV_SAMPLE_FMT_S16P = 6
AV_CODEC_ID_ADPCM_IMA_EA_EACS = 69656
CODEC_ID_H263I = 21
AV_CODEC_ID_PCM_S24LE = 65548
AV_CODEC_ID_LAGARITH = 148
CODEC_ID_WMV2 = 19
AV_CODEC_ID_PCM_U24BE = 65551
CODEC_ID_CAVS = 88
CODEC_ID_ADPCM_IMA_QT = 69632
CODEC_ID_MICRODVD = 1833195076
AV_CODEC_ID_PCM_MULAW = 65542
AV_LOCK_DESTROY = 3
LITTLE_ENDIAN = __LITTLE_ENDIAN # alias
def makedev(maj,min): return gnu_dev_makedev (maj, min) # macro
CODEC_ID_MSMPEG4V1 = 15
def UINT16_C(c): return c # macro
AV_AUDIO_SERVICE_TYPE_VISUALLY_IMPAIRED = 2
def WSTOPSIG(status): return __WSTOPSIG (__WAIT_INT (status)) # macro
CODEC_ID_FLASHSV = 87
AV_CODEC_ID_WMAV1 = 86023
AVDISCARD_ALL = 48
AVDISCARD_NONKEY = 32
def WIFSIGNALED(status): return __WIFSIGNALED (__WAIT_INT (status)) # macro
AVDISCARD_BIDIR = 16
AV_SAMPLE_FMT_DBL = 4
AVCOL_PRI_BT470BG = 5
CODEC_ID_VC1IMAGE = 153
AV_CODEC_ID_PCM_U16LE = 65538
# def AV_NOWARN_DEPRECATED(code): return _Pragma("GCC diagnostic push") _Pragma("GCC diagnostic ignored \"-Wdeprecated-declarations\"") code _Pragma("GCC diagnostic pop") # macro
CODEC_ID_LJPEG = 10
AV_CODEC_ID_PCM_S24BE = 65549
CODEC_ID_KMVC = 86
CODEC_ID_S302M = 65562
AV_CODEC_ID_PCM_S16LE = 65536
AV_CODEC_ID_DVAUDIO = 86022
CODEC_ID_MJPEG = 8
AV_CODEC_ID_FIRST_AUDIO = 65536
AV_FIELD_BT = 5
AV_CODEC_ID_SMVJPEG = 1397577290
AV_CODEC_ID_SNOW = 1397641047
def UINT32_C(c): return c ## U # macro
AV_FIELD_PROGRESSIVE = 1
CODEC_ID_NUV = 85
CODEC_ID_PCM_LXF = 65561
# def RSHIFT(a,b): return ((a) > 0 ? ((a) + ((1<<(b))>>1))>>(b) : ((a) + ((1<<(b))>>1)-1)>>(b)) # macro
AV_CODEC_ID_WMV1 = 18
# def ROUNDED_DIV(a,b): return (((a)>0 ? (a) + ((b)>>1) : (a) - ((b)>>1))/(b)) # macro
AV_SAMPLE_FMT_S32 = 2
CODEC_ID_V308 = 1446195256
AV_CODEC_ID_MVC1 = 1297498929
AV_CODEC_ID_A64_MULTI = 144
LIBAVFORMAT_VERSION_INT = 3609448 # Variable c_int '3609448'
LIBAVFORMAT_BUILD = LIBAVFORMAT_VERSION_INT # alias
CODEC_ID_MSMPEG4V3 = 17
SUBTITLE_ASS = 3
# def PUT_UTF8(val,tmp,PUT_BYTE): return { int bytes, shift; uint32_t in = val; if (in < 0x80) { tmp = in; PUT_BYTE } else { bytes = (av_log2(in) + 4) / 5; shift = (bytes - 1) * 6; tmp = (256 - (256 >> bytes)) | (in >> shift); PUT_BYTE while (shift >= 6) { shift -= 6; tmp = 0x80 | ((in >> shift) & 0x3f); PUT_BYTE } } } # macro
LIBAVFILTER_VERSION_INT = 219748 # Variable c_int '219748'
LIBAVFILTER_BUILD = LIBAVFILTER_VERSION_INT # alias
def PIX_FMT_NE(be,le): return AV_PIX_FMT_NE(be, le) # macro
LIBAVDEVICE_VERSION_INT = 3605860 # Variable c_int '3605860'
LIBAVDEVICE_BUILD = LIBAVDEVICE_VERSION_INT # alias
CODEC_ID_ADPCM_CT = 69644
LIBAVCODEC_VERSION_INT = 3614565 # Variable c_int '3614565'
LIBAVCODEC_BUILD = LIBAVCODEC_VERSION_INT # alias
FF_LAMBDA_SCALE = 128 # Variable c_int '128'
FF_QUALITY_SCALE = FF_LAMBDA_SCALE # alias
AV_CODEC_ID_MPEG4SYSTEMS = 131073
__FD_SETSIZE = 1024 # Variable c_int '1024'
FD_SETSIZE = __FD_SETSIZE # alias
_POSIX2_EXPR_NEST_MAX = 32 # Variable c_int '32'
EXPR_NEST_MAX = _POSIX2_EXPR_NEST_MAX # alias
AV_CODEC_ID_PGMYUV = 66
AV_SAMPLE_FMT_S32P = 7
AV_CODEC_ID_BINKAUDIO_DCT = 86065
EOPNOTSUPP = 95 # Variable c_int '95'
ENOTSUP = EOPNOTSUPP # alias
AV_CODEC_ID_MPEG2TS = 131072
SCHAR_MIN = -128 # Variable c_int '-0x00000000000000080'
CHAR_MIN = SCHAR_MIN # alias
class _G_fpos64_t(Structure):
    pass
_G_fpos64_t._fields_ = [
    ('__pos', __off64_t),
    ('__state', __mbstate_t),
]
_IO_fpos64_t = _G_fpos64_t # alias
BYTE_ORDER = __BYTE_ORDER # alias
BUFSIZ = _IO_BUFSIZ # alias
__BIG_ENDIAN = 4321 # Variable c_int '4321'
BIG_ENDIAN = __BIG_ENDIAN # alias
_POSIX2_BC_STRING_MAX = 1000 # Variable c_int '1000'
BC_STRING_MAX = _POSIX2_BC_STRING_MAX # alias
_POSIX2_BC_SCALE_MAX = 99 # Variable c_int '99'
BC_SCALE_MAX = _POSIX2_BC_SCALE_MAX # alias
LIBPOSTPROC_VERSION_INT = 3408740 # Variable c_int '3408740'
LIBPOSTPROC_BUILD = LIBPOSTPROC_VERSION_INT # alias
_POSIX2_BC_DIM_MAX = 2048 # Variable c_int '2048'
BC_DIM_MAX = _POSIX2_BC_DIM_MAX # alias
_POSIX2_BC_BASE_MAX = 99 # Variable c_int '99'
BC_BASE_MAX = _POSIX2_BC_BASE_MAX # alias
CODEC_ID_ROQ = 39
AV_CODEC_ID_ANSI = 143
AV_CODEC_ID_H265 = AV_CODEC_ID_HEVC # alias
AV_CODEC_ID_ADPCM_IMA_DK3 = 69634
AVCOL_SPC_YCOCG = 8
AVCOL_SPC_YCGCO = AVCOL_SPC_YCOCG # alias
# def PUT_UTF16(val,tmp,PUT_16BIT): return { uint32_t in = val; if (in < 0x10000) { tmp = in; PUT_16BIT } else { tmp = 0xD800 | ((in - 0x10000) >> 10); PUT_16BIT tmp = 0xDC00 | ((in - 0x10000) & 0x3FF); PUT_16BIT } } # macro
CODEC_ID_AVS = 83
CODEC_ID_PCM_F64LE = 65559
AV_CODEC_ID_INTERPLAY_VIDEO = 40
CODEC_ID_TTF = 98304
# def FFABS(a): return ((a) >= 0 ? (a) : (-(a))) # macro
AV_CODEC_ID_PICTOR = 142
AV_CODEC_ID_TTF = 98304
def WIFEXITED(status): return __WIFEXITED (__WAIT_INT (status)) # macro
AV_OPT_TYPE_INT = 1
AV_CODEC_ID_PCM_S32BE = 65545
CODEC_ID_ADPCM_IMA_APC = 69661
CODEC_ID_HDMV_PGS_SUBTITLE = 94214
AV_PICTURE_STRUCTURE_BOTTOM_FIELD = 2
CODEC_ID_MOV_TEXT = 94213
CODEC_ID_G2M = 4665933
AVCOL_PRI_BT470M = 4
AV_CODEC_ID_PJS = 1349012051
LIBAVUTIL_VERSION_INT = 3420261 # Variable c_int '3420261'
LIBAVUTIL_BUILD = LIBAVUTIL_VERSION_INT # alias
AV_CODEC_ID_MJPEG = 8
CODEC_ID_ADPCM_EA_MAXIS_XA = 69658
AV_CODEC_ID_VPLAYER = 1448111218
AV_CODEC_ID_VP8 = 141
AV_CODEC_ID_MPL2 = 1297108018
CODEC_ID_MMVIDEO = 81
def islessequal(x,y): return __builtin_islessequal(x, y) # macro
AV_OPT_TYPE_FLAGS = 0
AV_SIDE_DATA_PARAM_CHANGE_DIMENSIONS = 8
AV_SIDE_DATA_PARAM_CHANGE_SAMPLE_RATE = 4
AV_SIDE_DATA_PARAM_CHANGE_CHANNEL_LAYOUT = 2
AV_CODEC_ID_SUBRIP = 1397909872
def av_printf_format(fmtpos,attrpos): return __attribute__((__format__(__printf__, fmtpos, attrpos))) # macro
AVCOL_SPC_SMPTE240M = 7
AV_CODEC_ID_XWD = 159
AV_CODEC_ID_AMR_NB = 73728
AV_CODEC_ID_WEBP_DEPRECATED = 173
CODEC_ID_OPUS = 1330664787
CODEC_ID_MPEG4 = 13
CODEC_ID_CSCD = 80
AV_CODEC_ID_4XM = 35
AV_CODEC_ID_MP2 = 86016
# def FFMIN(a,b): return ((a) > (b) ? (b) : (a)) # macro
AV_CODEC_ID_S302M = 65562
CODEC_ID_FFWAVESYNTH = 1179014995
LIBAVRESAMPLE_VERSION_INT = 65792 # Variable c_int '65792'
LIBAVRESAMPLE_BUILD = LIBAVRESAMPLE_VERSION_INT # alias
AV_CODEC_ID_MSS2 = 168
AV_CODEC_ID_KGV1 = 139
CODEC_ID_ADPCM_G726 = 69643
CODEC_ID_BMP = 79
def isless(x,y): return __builtin_isless(x, y) # macro
AV_CODEC_ID_SOL_DPCM = 81923
AVCOL_SPC_BT470BG = 5
CODEC_ID_ESCAPE130 = 1160852272
AVCOL_SPC_FCC = 4
AV_CODEC_ID_SSA = 94212
AV_CODEC_ID_IFF_BYTERUN1 = 138
AV_CODEC_ID_ZLIB = 55
CODEC_ID_SP5X = 11
CODEC_ID_RV10 = 6
AVMEDIA_TYPE_NB = 5
def __va_arg_pack_len(): return __builtin_va_arg_pack_len () # macro
# PIX_FMT_RGB444 = AV_PIX_FMT_RGB444 # alias
def __va_arg_pack(): return __builtin_va_arg_pack () # macro
AV_CODEC_ID_IFF_ILBM = 137
# PIX_FMT_RGB32 = AV_PIX_FMT_RGB32 # alias
# __OFF_T_TYPE = __SYSCALL_SLONG_TYPE # alias
AV_CODEC_ID_PCM_S8 = 65540
AVCOL_PRI_NB = 9
FF_OPT_TYPE_INT = 1
AVCOL_SPC_UNSPECIFIED = 2
CODEC_ID_ADPCM_IMA_DK3 = 69634
def __glibc_likely(cond): return __builtin_expect ((cond), 1) # macro
AV_CODEC_ID_MJPEGB = 9
AV_CODEC_ID_VMDVIDEO = 53
CODEC_ID_MJPEGB = 9
AV_CODEC_ID_PCM_U32BE = 65547
AVCOL_RANGE_MPEG = 1
AV_PKT_DATA_WEBVTT_SETTINGS = 76
AV_CODEC_ID_PCM_U16BE = 65539
AV_CODEC_ID_ROQ = 39
# def issignaling(x): return (sizeof (x) == sizeof (float) ? __issignalingf (x) : sizeof (x) == sizeof (double) ? __issignaling (x) : __issignalingl (x)) # macro
AV_PKT_DATA_WEBVTT_IDENTIFIER = 75
CODEC_ID_VC1 = 71
CODEC_ID_ANSI = 143
CODEC_ID_MP1 = 86059
AVCOL_SPC_BT709 = 1
# PIX_FMT_BGR32_1 = AV_PIX_FMT_BGR32_1 # alias
AV_CODEC_ID_V410 = 158
# PIX_FMT_BGR565 = AV_PIX_FMT_BGR565 # alias
AV_CODEC_ID_TRUEMOTION1 = 52
# def DECLARE_ASM_CONST(n,t,v): return static const t av_used __attribute__ ((aligned (n))) v # macro
AV_PICTURE_STRUCTURE_FRAME = 3
CODEC_ID_PCM_F64BE = 65558
CODEC_ID_PCM_U24BE = 65551
AV_PICTURE_STRUCTURE_TOP_FIELD = 1
AV_PICTURE_STRUCTURE_UNKNOWN = 0
CODEC_ID_TSCC2 = 165
AV_CODEC_ID_PCM_LXF = 65561
AV_CODEC_ID_R210 = 134
AV_CODEC_ID_FLIC = 51
# def __attribute_alloc_size__(params): return __attribute__ ((__alloc_size__ params)) # macro
CODEC_ID_ADPCM_EA = 69642
AV_CODEC_ID_PCM_S16BE = 65537
CODEC_ID_PCM_ZORK = 65553
AV_PKT_DATA_MATROSKA_BLOCKADDITIONAL = 74
AV_PKT_DATA_SUBTITLE_POSITION = 73
AV_PKT_DATA_STRINGS_METADATA = 72
CODEC_ID_PCM_BLURAY = 65560
AV_PKT_DATA_JP_DUALMONO = 71
AV_PKT_DATA_SKIP_SAMPLES = 70
AV_CODEC_ID_YOP = 140
AV_PKT_DATA_H263_MB_INFO = 3
def __W_STOPCODE(sig): return ((sig) << 8 | 0x7f) # macro
ME_EPZS = 5
AV_PKT_DATA_NEW_EXTRADATA = 1
AV_PKT_DATA_PARAM_CHANGE = 2
LIBAVCODEC_VERSION_MAJOR = 55 # Variable c_int '55'
AVFMT_NOBINSEARCH = 8192 # Variable c_int '8192'
FF_THREAD_SLICE = 2 # Variable c_int '2'
ETXTBSY = 26 # Variable c_int '26'
EOF = -1 # Variable c_int '-0x00000000000000001'
AVFILTER_FLAG_SUPPORT_TIMELINE = 196608 # Variable c_int '196608'
math_errhandling = 3 # Variable c_int '3'
AV_OPT_FLAG_AUDIO_PARAM = 8 # Variable c_int '8'
_MATH_H = 1 # Variable c_int '1'
FF_CODER_TYPE_VLC = 0 # Variable c_int '0'
M_LOG10E = 0.4342944819032518 # Variable c_double '4.3429448190325181666793241674895398318767547607421875e-1'
LONG_MIN = -9223372036854775808 # Variable c_long '-0x08000000000000000l'
AV_DISPOSITION_METADATA = 262144 # Variable c_int '262144'
__SIZEOF_PTHREAD_MUTEX_T = 40 # Variable c_int '40'
SCNuFAST64 = 'lu' # Variable STRING '(const char*)"lu"'
ENAMETOOLONG = 36 # Variable c_int '36'
SCNdPTR = 'ld' # Variable STRING '(const char*)"ld"'
_ATFILE_SOURCE = 1 # Variable c_int '1'
L_tmpnam = 20 # Variable c_int '20'
EREMCHG = 78 # Variable c_int '78'
AVERROR_EOF = -541478725 # Variable c_int '-0x00000000020464f45'
MB_TYPE_P0L1 = 16384 # Variable c_int '16384'
MAX_REORDER_DELAY = 16 # Variable c_int '16'
FF_PROFILE_H264_HIGH_444 = 144 # Variable c_int '144'
__WCOREFLAG = 128 # Variable c_int '128'
FF_PROFILE_H264_HIGH_10 = 110 # Variable c_int '110'
_G_HAVE_MREMAP = 1 # Variable c_int '1'
AV_CPU_FLAG_ARMV6 = 2 # Variable c_int '2'
CODEC_FLAG_AC_PRED = 16777216 # Variable c_int '16777216'
FF_PROFILE_MPEG4_MAIN = 3 # Variable c_int '3'
_IO_EOF_SEEN = 16 # Variable c_int '16'
EINPROGRESS = 115 # Variable c_int '115'
AV_CH_LAYOUT_6POINT0_FRONT = 1731 # Variable c_int '1731'
ENOTSOCK = 88 # Variable c_int '88'
AV_OPT_FLAG_VIDEO_PARAM = 16 # Variable c_int '16'
AV_CH_WIDE_RIGHT = 4294967296 # Variable c_ulonglong '4294967296ull'
FF_PROFILE_VC1_COMPLEX = 2 # Variable c_int '2'
CODEC_FLAG2_DROP_FRAME_TIMECODE = 8192 # Variable c_int '8192'
SCNoFAST8 = 'hho' # Variable STRING '(const char*)"hho"'
FF_PROFILE_H264_CAVLC_444 = 44 # Variable c_int '44'
__SIZEOF_PTHREAD_CONDATTR_T = 4 # Variable c_int '4'
AVRESAMPLE_MAX_CHANNELS = 32 # Variable c_int '32'
FF_DCT_FASTINT = 1 # Variable c_int '1'
LIBAVFORMAT_IDENT = 'Lavf55.19.104' # Variable STRING '(const char*)"Lavf55.19.104"'
M_LOG2_10 = 3.321928094887362 # Variable c_double '3.321928094887362181708567732130177319049835205078125e+0'
SWS_CPU_CAPS_MMX = 2147483648 # Variable c_uint '2147483648u'
EFBIG = 27 # Variable c_int '27'
AV_LOG_WARNING = 24 # Variable c_int '24'
AVFMT_FLAG_FLUSH_PACKETS = 512 # Variable c_int '512'
FF_PROFILE_JPEG2000_DCINEMA_4K = 4 # Variable c_int '4'
FF_SUB_CHARENC_MODE_PRE_DECODER = 1 # Variable c_int '1'
INT_FAST16_MIN = -9223372036854775808 # Variable c_long '-0x08000000000000000l'
FF_DEBUG_BUGS = 4096 # Variable c_int '4096'
CODEC_FLAG_LOW_DELAY = 524288 # Variable c_int '524288'
__USE_XOPEN_EXTENDED = 1 # Variable c_int '1'
AVSEEK_FLAG_BACKWARD = 1 # Variable c_int '1'
SCNu32 = 'u' # Variable STRING '(const char*)"u"'
AV_LOG_VERBOSE = 40 # Variable c_int '40'
FF_PROFILE_MPEG4_SIMPLE = 0 # Variable c_int '0'
_IO_USER_LOCK = 32768 # Variable c_int '32768'
MB_TYPE_16x8 = 16 # Variable c_int '16'
EMSGSIZE = 90 # Variable c_int '90'
INT_LEAST16_MAX = 32767 # Variable c_int '32767'
SCNdFAST16 = 'ld' # Variable STRING '(const char*)"ld"'
AV_PERM_READ = 1 # Variable c_int '1'
INTPTR_MIN = -9223372036854775808 # Variable c_long '-0x08000000000000000l'
SCNuFAST16 = 'lu' # Variable STRING '(const char*)"lu"'
FF_PROFILE_H264_INTRA = 2048 # Variable c_int '2048'
EL3RST = 47 # Variable c_int '47'
EREMOTEIO = 121 # Variable c_int '121'
PARSER_FLAG_USE_CODEC_TS = 4096 # Variable c_int '4096'
_POSIX_SOURCE = 1 # Variable c_int '1'
AV_OPT_SEARCH_CHILDREN = 1 # Variable c_int '1'
_IO_FIXED = 4096 # Variable c_int '4096'
SWS_CS_DEFAULT = 5 # Variable c_int '5'
AV_DISPOSITION_VISUAL_IMPAIRED = 256 # Variable c_int '256'
LIBSWSCALE_VERSION_MICRO = 101 # Variable c_int '101'
INT_LEAST8_MIN = -128 # Variable c_int '-0x00000000000000080'
__USE_POSIX199506 = 1 # Variable c_int '1'
M_PI_2 = 1.5707963267948966 # Variable c_double '1.5707963267948965579989817342720925807952880859375e+0'
AVPROBE_SCORE_MAX = 100 # Variable c_int '100'
FF_PROFILE_MPEG2_AAC_LOW = 128 # Variable c_int '128'
FF_PROFILE_DTS_HD_MA = 60 # Variable c_int '60'
_DEFAULT_SOURCE = 1 # Variable c_int '1'
M_PI_4 = 0.7853981633974483 # Variable c_double '7.8539816339744827899949086713604629039764404296875e-1'
ENOTUNIQ = 76 # Variable c_int '76'
ECOMM = 70 # Variable c_int '70'
ENFILE = 23 # Variable c_int '23'
AV_CH_TOP_CENTER = 2048 # Variable c_int '2048'
SWS_CS_SMPTE240M = 7 # Variable c_int '7'
FF_DTG_AFD_SAME = 8 # Variable c_int '8'
ENODATA = 61 # Variable c_int '61'
ELNRNG = 48 # Variable c_int '48'
AV_CODEC_PROP_TEXT_SUB = 131072 # Variable c_int '131072'
PRIXFAST64 = 'lX' # Variable STRING '(const char*)"lX"'
AV_CH_LAYOUT_NATIVE = 9223372036854775808 # Variable c_ulonglong '-9223372036854775808ull'
SWS_BILINEAR = 2 # Variable c_int '2'
____gwchar_t_defined = 1 # Variable c_int '1'
ERESTART = 85 # Variable c_int '85'
__WALL = 1073741824 # Variable c_int '1073741824'
__USE_POSIX199309 = 1 # Variable c_int '1'
AVFMT_GLOBALHEADER = 64 # Variable c_int '64'
FF_CMP_CHROMA = 256 # Variable c_int '256'
FF_PROFILE_VC1_SIMPLE = 0 # Variable c_int '0'
AV_LOG_FATAL = 8 # Variable c_int '8'
FF_MB_DECISION_RD = 2 # Variable c_int '2'
USHRT_MAX = 65535 # Variable c_int '65535'
SCNiLEAST16 = 'hi' # Variable STRING '(const char*)"hi"'
FF_PROFILE_MPEG4_ADVANCED_CODING = 11 # Variable c_int '11'
FF_BUG_QPEL_CHROMA = 64 # Variable c_int '64'
M_E = 2.718281828459045 # Variable c_double '2.718281828459045090795598298427648842334747314453125e+0'
PRIXLEAST32 = 'X' # Variable STRING '(const char*)"X"'
_IO_SHOWBASE = 128 # Variable c_int '128'
FF_PROFILE_H264_CONSTRAINED = 512 # Variable c_int '512'
AV_CH_TOP_FRONT_CENTER = 8192 # Variable c_int '8192'
NGROUPS_MAX = 65536 # Variable c_int '65536'
SCNiFAST64 = 'li' # Variable STRING '(const char*)"li"'
FF_BUFFER_TYPE_SHARED = 4 # Variable c_int '4'
FF_BUFFER_HINTS_REUSABLE = 8 # Variable c_int '8'
_G_HAVE_MMAP = 1 # Variable c_int '1'
PRIxPTR = 'lx' # Variable STRING '(const char*)"lx"'
FF_EC_DEBLOCK = 2 # Variable c_int '2'
WORD_BIT = 32 # Variable c_int '32'
AV_CH_WIDE_LEFT = 2147483648 # Variable c_ulonglong '2147483648ull'
SCNi16 = 'hi' # Variable STRING '(const char*)"hi"'
AVPALETTE_SIZE = 1024 # Variable c_int '1024'
AV_CPU_FLAG_AVX2 = 32768 # Variable c_int '32768'
_IO_OCT = 32 # Variable c_int '32'
MB_LEN_MAX = 16 # Variable c_int '16'
SCNd32 = 'd' # Variable STRING '(const char*)"d"'
FF_LAMBDA_SHIFT = 7 # Variable c_int '7'
FF_CODER_TYPE_RLE = 3 # Variable c_int '3'
PRIX32 = 'X' # Variable STRING '(const char*)"X"'
AV_CH_LAYOUT_QUAD = 51 # Variable c_int '51'
FF_DEBUG_VIS_QP = 8192 # Variable c_int '8192'
FF_IDCT_FAAN = 20 # Variable c_int '20'
SCNdLEAST16 = 'hd' # Variable STRING '(const char*)"hd"'
SWS_BITEXACT = 524288 # Variable c_int '524288'
_IOS_BIN = 128 # Variable c_int '128'
AV_CH_TOP_BACK_CENTER = 65536 # Variable c_int '65536'
_POSIX_THREAD_KEYS_MAX = 128 # Variable c_int '128'
AV_CH_LAYOUT_MONO = 4 # Variable c_int '4'
ENXIO = 6 # Variable c_int '6'
FF_RC_STRATEGY_XVID = 1 # Variable c_int '1'
PRIXFAST16 = 'lX' # Variable STRING '(const char*)"lX"'
_POSIX_SSIZE_MAX = 32767 # Variable c_int '32767'
AVERROR_UNKNOWN = -1313558101 # Variable c_int '-0x0000000004e4b4e55'
FF_PROFILE_MPEG4_SIMPLE_FACE_ANIMATION = 6 # Variable c_int '6'
CODEC_FLAG_QPEL = 16 # Variable c_int '16'
CODEC_CAP_AUTO_THREADS = 32768 # Variable c_int '32768'
SWS_FULL_CHR_H_INP = 16384 # Variable c_int '16384'
FF_DCT_MMX = 3 # Variable c_int '3'
_IO_SCIENTIFIC = 2048 # Variable c_int '2048'
AV_CODEC_PROP_LOSSY = 2 # Variable c_int '2'
FF_DTG_AFD_4_3 = 9 # Variable c_int '9'
M_LN10 = 2.302585092994046 # Variable c_double '2.30258509299404590109361379290930926799774169921875e+0'
PRIiPTR = 'li' # Variable STRING '(const char*)"li"'
AV_EF_EXPLODE = 8 # Variable c_int '8'
PRIuFAST8 = 'u' # Variable STRING '(const char*)"u"'
FF_PROFILE_JPEG2000_DCINEMA_2K = 3 # Variable c_int '3'
CODEC_FLAG_EMU_EDGE = 16384 # Variable c_int '16384'
FF_PROFILE_AAC_HE = 4 # Variable c_int '4'
_LARGEFILE_SOURCE = 1 # Variable c_int '1'
FF_CMP_DCTMAX = 13 # Variable c_int '13'
AV_PERM_NEG_LINESIZES = 32 # Variable c_int '32'
FF_PROFILE_H264_CONSTRAINED_BASELINE = 578 # Variable c_int '578'
FF_BUG_STD_QPEL = 128 # Variable c_int '128'
EPIPE = 32 # Variable c_int '32'
FF_LOSS_COLORQUANT = 16 # Variable c_int '16'
ERFKILL = 132 # Variable c_int '132'
EHOSTDOWN = 112 # Variable c_int '112'
ENOTEMPTY = 39 # Variable c_int '39'
FF_DCT_FAAN = 6 # Variable c_int '6'
_IO_DEC = 16 # Variable c_int '16'
EPROTONOSUPPORT = 93 # Variable c_int '93'
EBUSY = 16 # Variable c_int '16'
ESTRPIPE = 86 # Variable c_int '86'
FF_BUFFER_TYPE_INTERNAL = 1 # Variable c_int '1'
FF_PROFILE_H264_HIGH = 100 # Variable c_int '100'
_POSIX_STREAM_MAX = 8 # Variable c_int '8'
_IO_DONT_CLOSE = 32768 # Variable c_int '32768'
EADDRINUSE = 98 # Variable c_int '98'
AVIO_SEEKABLE_NORMAL = 1 # Variable c_int '1'
FF_BUG_XVID_ILACE = 4 # Variable c_int '4'
SCNdLEAST32 = 'd' # Variable STRING '(const char*)"d"'
ENOPROTOOPT = 92 # Variable c_int '92'
ENOSTR = 60 # Variable c_int '60'
FF_DEBUG_BITSTREAM = 4 # Variable c_int '4'
FF_COMPLIANCE_EXPERIMENTAL = -2 # Variable c_int '-0x00000000000000002'
_IO_UNITBUF = 8192 # Variable c_int '8192'
FF_PROFILE_AAC_HE_V2 = 28 # Variable c_int '28'
FF_PROFILE_MPEG4_BASIC_ANIMATED_TEXTURE = 7 # Variable c_int '7'
AV_PKT_FLAG_KEY = 1 # Variable c_int '1'
AV_DICT_DONT_OVERWRITE = 16 # Variable c_int '16'
AV_DICT_MATCH_CASE = 1 # Variable c_int '1'
LIBSWSCALE_IDENT = 'SwS2.5.101' # Variable STRING '(const char*)"SwS2.5.101"'
AV_DISPOSITION_KARAOKE = 32 # Variable c_int '32'
_POSIX_MAX_INPUT = 255 # Variable c_int '255'
FF_DTG_AFD_4_3_SP_14_9 = 13 # Variable c_int '13'
_ENDIAN_H = 1 # Variable c_int '1'
AVFILTER_CMD_FLAG_FAST = 2 # Variable c_int '2'
ELIBACC = 79 # Variable c_int '79'
LIBAVDEVICE_VERSION_MAJOR = 55 # Variable c_int '55'
__USE_FORTIFY_LEVEL = 2 # Variable c_int '2'
FF_BUG_OLD_MSMPEG4 = 2 # Variable c_int '2'
CODEC_FLAG_INTERLACED_ME = 536870912 # Variable c_int '536870912'
FF_PROFILE_DTS = 20 # Variable c_int '20'
PTRDIFF_MAX = 9223372036854775807 # Variable c_long '9223372036854775807l'
PRIi8 = 'i' # Variable STRING '(const char*)"i"'
EDQUOT = 122 # Variable c_int '122'
AVFILTER_CMD_FLAG_ONE = 1 # Variable c_int '1'
ENOENT = 2 # Variable c_int '2'
FF_PROFILE_MPEG2_422 = 0 # Variable c_int '0'
INT32_MIN = -2147483648 # Variable c_int '-0x00000000080000000'
LIBAVFORMAT_VERSION_MAJOR = 55 # Variable c_int '55'
LIBAVDEVICE_IDENT = 'Lavd55.5.100' # Variable STRING '(const char*)"Lavd55.5.100"'
AV_DISPOSITION_CAPTIONS = 65536 # Variable c_int '65536'
__INO_T_MATCHES_INO64_T = 1 # Variable c_int '1'
AV_CPU_FLAG_SSE = 8 # Variable c_int '8'
SEEK_END = 2 # Variable c_int '2'
INT_LEAST32_MAX = 2147483647 # Variable c_int '2147483647'
PRIiLEAST16 = 'i' # Variable STRING '(const char*)"i"'
AV_PERM_REUSE = 8 # Variable c_int '8'
M_PHI = 1.618033988749895 # Variable c_double '1.6180339887498949025257388711906969547271728515625e+0'
FF_PROFILE_RESERVED = -100 # Variable c_int '-0x00000000000000064'
INT_LEAST16_MIN = -32768 # Variable c_int '-0x00000000000008000'
SWS_CS_FCC = 4 # Variable c_int '4'
AV_CH_LOW_FREQUENCY = 8 # Variable c_int '8'
__PRIPTR_PREFIX = 'l' # Variable STRING '(const char*)"l"'
FF_PROFILE_DTS_ES = 30 # Variable c_int '30'
AV_CH_LAYOUT_5POINT0_BACK = 55 # Variable c_int '55'
FF_LOSS_CHROMA = 32 # Variable c_int '32'
AVFMT_VARIABLE_FPS = 1024 # Variable c_int '1024'
PARSER_FLAG_ONCE = 2 # Variable c_int '2'
HUGE_VAL = 0.0 # Variable c_double '0.0'
_POSIX_NGROUPS_MAX = 8 # Variable c_int '8'
_IO_BOOLALPHA = 65536 # Variable c_int '65536'
CODEC_FLAG2_FAST = 1 # Variable c_int '1'
EXFULL = 54 # Variable c_int '54'
FF_MIN_BUFFER_SIZE = 16384 # Variable c_int '16384'
PRIxFAST32 = 'lx' # Variable STRING '(const char*)"lx"'
INT_FAST8_MAX = 127 # Variable c_int '127'
__USE_BSD = 1 # Variable c_int '1'
ENOTDIR = 20 # Variable c_int '20'
M_1_PI = 0.3183098861837907 # Variable c_double '3.18309886183790691216444201927515678107738494873046875e-1'
SWS_SINC = 256 # Variable c_int '256'
UNDERFLOW = 4 # Variable c_int '4'
PIPE_BUF = 4096 # Variable c_int '4096'
AV_CH_LOW_FREQUENCY_2 = 34359738368 # Variable c_ulonglong '34359738368ull'
FF_CMP_W53 = 11 # Variable c_int '11'
AV_CH_LAYOUT_2_1 = 259 # Variable c_int '259'
FF_CMP_SAD = 0 # Variable c_int '0'
MB_TYPE_P0L0 = 4096 # Variable c_int '4096'
LIBSWSCALE_VERSION_MAJOR = 2 # Variable c_int '2'
AVFMT_FLAG_CUSTOM_IO = 128 # Variable c_int '128'
FF_PROFILE_MPEG2_MAIN = 4 # Variable c_int '4'
HUGE = 3.4028234663852886e+38 # Variable c_float '3.4028234663852885981170418348451692544e+38f'
FF_THREAD_FRAME = 1 # Variable c_int '1'
M_2_PI = 0.6366197723675814 # Variable c_double '6.3661977236758138243288840385503135621547698974609375e-1'
PRIdFAST64 = 'ld' # Variable STRING '(const char*)"ld"'
SCNu64 = 'lu' # Variable STRING '(const char*)"lu"'
EBADRQC = 56 # Variable c_int '56'
ENETRESET = 102 # Variable c_int '102'
_POSIX_SYMLINK_MAX = 255 # Variable c_int '255'
SWS_ERROR_DIFFUSION = 8388608 # Variable c_int '8388608'
__WORDSIZE = 64 # Variable c_int '64'
AV_CPU_FLAG_SSE3 = 64 # Variable c_int '64'
AV_DISPOSITION_HEARING_IMPAIRED = 128 # Variable c_int '128'
EAFNOSUPPORT = 97 # Variable c_int '97'
AV_EF_BITSTREAM = 2 # Variable c_int '2'
CODEC_FLAG_CLOSED_GOP = 2147483648 # Variable c_uint '2147483648u'
AV_LOG_DEBUG = 48 # Variable c_int '48'
EHOSTUNREACH = 113 # Variable c_int '113'
INT_FAST8_MIN = -128 # Variable c_int '-0x00000000000000080'
PRIiLEAST64 = 'li' # Variable STRING '(const char*)"li"'
SCNu8 = 'hhu' # Variable STRING '(const char*)"hhu"'
WEXITED = 4 # Variable c_int '4'
AV_CPU_FLAG_3DNOW = 4 # Variable c_int '4'
_XOPEN_SOURCE = 700 # Variable c_int '700'
WINT_MIN = 0 # Variable c_uint '0u'
__USE_ISOC95 = 1 # Variable c_int '1'
FF_FDEBUG_TS = 1 # Variable c_int '1'
CODEC_FLAG_GLOBAL_HEADER = 4194304 # Variable c_int '4194304'
FF_CMP_RD = 6 # Variable c_int '6'
_IO_BAD_SEEN = 16384 # Variable c_int '16384'
AV_CH_TOP_BACK_LEFT = 32768 # Variable c_int '32768'
__GLIBC__ = 2 # Variable c_int '2'
_IO_FLAGS2_MMAP = 1 # Variable c_int '1'
SCNdLEAST64 = 'ld' # Variable STRING '(const char*)"ld"'
FF_BUG_UMP4 = 8 # Variable c_int '8'
FF_PROFILE_AAC_LD = 22 # Variable c_int '22'
FF_IDCT_SIMPLEARM = 10 # Variable c_int '10'
AV_PROGRAM_RUNNING = 1 # Variable c_int '1'
SCNo64 = 'lo' # Variable STRING '(const char*)"lo"'
PRIdFAST8 = 'd' # Variable STRING '(const char*)"d"'
PRIi32 = 'i' # Variable STRING '(const char*)"i"'
AV_CPU_FLAG_SSE42 = 512 # Variable c_int '512'
AV_OPT_SEARCH_FAKE_OBJ = 2 # Variable c_int '2'
SLICE_FLAG_ALLOW_PLANE = 4 # Variable c_int '4'
FF_LOSS_RESOLUTION = 1 # Variable c_int '1'
UINT_MAX = 4294967295 # Variable c_uint '4294967295u'
FF_QSCALE_TYPE_VP56 = 3 # Variable c_int '3'
_IOS_NOREPLACE = 64 # Variable c_int '64'
CODEC_CAP_DRAW_HORIZ_BAND = 1 # Variable c_int '1'
_XLOCALE_H = 1 # Variable c_int '1'
FF_IDCT_AUTO = 0 # Variable c_int '0'
ENODEV = 19 # Variable c_int '19'
ENOCSI = 50 # Variable c_int '50'
FF_COMPLIANCE_UNOFFICIAL = -1 # Variable c_int '-0x00000000000000001'
INT_LEAST8_MAX = 127 # Variable c_int '127'
__STDLIB_MB_LEN_MAX = 16 # Variable c_int '16'
SCNo8 = 'hho' # Variable STRING '(const char*)"hho"'
CODEC_CAP_SLICE_THREADS = 8192 # Variable c_int '8192'
_SVID_SOURCE = 1 # Variable c_int '1'
__FD_ZERO_STOS = 'stosq' # Variable STRING '(const char*)"stosq"'
_IO_MAGIC = 4222418944 # Variable c_uint '4222418944u'
AV_CH_SURROUND_DIRECT_LEFT = 8589934592 # Variable c_ulonglong '8589934592ull'
_INTTYPES_H = 1 # Variable c_int '1'
CODEC_CAP_FRAME_THREADS = 4096 # Variable c_int '4096'
_IONBF = 2 # Variable c_int '2'
MB_TYPE_8x16 = 32 # Variable c_int '32'
AV_CH_LAYOUT_HEXAGONAL = 311 # Variable c_int '311'
__error_t_defined = 1 # Variable c_int '1'
SCNoFAST16 = 'lo' # Variable STRING '(const char*)"lo"'
PTRDIFF_MIN = -9223372036854775808 # Variable c_long '-0x08000000000000000l'
AV_DISPOSITION_DEFAULT = 1 # Variable c_int '1'
MAX_INPUT = 255 # Variable c_int '255'
FF_BUG_DIRECT_BLOCKSIZE = 512 # Variable c_int '512'
CODEC_FLAG_4MV = 4 # Variable c_int '4'
__WORDSIZE_TIME64_COMPAT32 = 1 # Variable c_int '1'
PRIuFAST32 = 'lu' # Variable STRING '(const char*)"lu"'
PRIX64 = 'lX' # Variable STRING '(const char*)"lX"'
EMLINK = 31 # Variable c_int '31'
AVFMT_NOTIMESTAMPS = 128 # Variable c_int '128'
AV_GET_BUFFER_FLAG_REF = 1 # Variable c_int '1'
EUCLEAN = 117 # Variable c_int '117'
PARSER_FLAG_COMPLETE_FRAMES = 1 # Variable c_int '1'
SCNi64 = 'li' # Variable STRING '(const char*)"li"'
EIO = 5 # Variable c_int '5'
FF_IDCT_SIMPLEARMV6 = 17 # Variable c_int '17'
FF_CMP_DCT264 = 14 # Variable c_int '14'
SWS_ACCURATE_RND = 262144 # Variable c_int '262144'
LIBAVFORMAT_VERSION_MICRO = 104 # Variable c_int '104'
PRIdFAST32 = 'ld' # Variable STRING '(const char*)"ld"'
FF_EC_GUESS_MVS = 1 # Variable c_int '1'
PRIo64 = 'lo' # Variable STRING '(const char*)"lo"'
_POSIX_MAX_CANON = 255 # Variable c_int '255'
SWS_DIRECT_BGR = 32768 # Variable c_int '32768'
AIO_PRIO_DELTA_MAX = 20 # Variable c_int '20'
ECANCELED = 125 # Variable c_int '125'
_IOS_APPEND = 8 # Variable c_int '8'
EADV = 68 # Variable c_int '68'
AV_CH_LAYOUT_7POINT1_WIDE_BACK = 255 # Variable c_int '255'
SWS_GAUSS = 128 # Variable c_int '128'
FF_DTG_AFD_16_9 = 10 # Variable c_int '10'
AVFMT_FLAG_IGNIDX = 2 # Variable c_int '2'
PRIdLEAST64 = 'ld' # Variable STRING '(const char*)"ld"'
_POSIX_THREAD_THREADS_MAX = 64 # Variable c_int '64'
RAND_MAX = 2147483647 # Variable c_int '2147483647'
CODEC_FLAG_PSNR = 32768 # Variable c_int '32768'
__USE_ATFILE = 1 # Variable c_int '1'
AVERROR_MUXER_NOT_FOUND = -1481985528 # Variable c_int '-0x00000000058554df8'
AV_EF_CAREFUL = 65536 # Variable c_int '65536'
AVFMT_NODIMENSIONS = 2048 # Variable c_int '2048'
PRIuLEAST64 = 'lu' # Variable STRING '(const char*)"lu"'
PP_FORMAT_420 = 25 # Variable c_int '25'
FF_CMP_SSE = 1 # Variable c_int '1'
PP_FORMAT_422 = 9 # Variable c_int '9'
LIBAVUTIL_VERSION_MAJOR = 52 # Variable c_int '52'
XATTR_SIZE_MAX = 65536 # Variable c_int '65536'
AVERROR_EXIT = -1414092869 # Variable c_int '-0x00000000054495845'
_POSIX2_CHARCLASS_NAME_MAX = 14 # Variable c_int '14'
_SYS_CDEFS_H = 1 # Variable c_int '1'
EILSEQ = 84 # Variable c_int '84'
CODEC_CAP_PARAM_CHANGE = 16384 # Variable c_int '16384'
UINT_FAST8_MAX = 255 # Variable c_int '255'
EDESTADDRREQ = 89 # Variable c_int '89'
SCNxFAST16 = 'lx' # Variable STRING '(const char*)"lx"'
HOST_NAME_MAX = 64 # Variable c_int '64'
_IO_NO_WRITES = 8 # Variable c_int '8'
PRIiFAST16 = 'li' # Variable STRING '(const char*)"li"'
SLICE_FLAG_CODED_ORDER = 1 # Variable c_int '1'
TMP_MAX = 238328 # Variable c_int '238328'
FF_PROFILE_AAC_ELD = 38 # Variable c_int '38'
FF_CMP_W97 = 12 # Variable c_int '12'
SWS_CPU_CAPS_3DNOW = 1073741824 # Variable c_int '1073741824'
DELAYTIMER_MAX = 2147483647 # Variable c_int '2147483647'
_POSIX_RTSIG_MAX = 8 # Variable c_int '8'
FF_BUFFER_TYPE_USER = 2 # Variable c_int '2'
__PRI64_PREFIX = 'l' # Variable STRING '(const char*)"l"'
PTHREAD_STACK_MIN = 16384 # Variable c_int '16384'
FF_PRED_LEFT = 0 # Variable c_int '0'
PRIoLEAST16 = 'o' # Variable STRING '(const char*)"o"'
_IO_STDIO = 16384 # Variable c_int '16384'
FF_INPUT_BUFFER_PADDING_SIZE = 16 # Variable c_int '16'
AVFILTER_FLAG_SUPPORT_TIMELINE_INTERNAL = 131072 # Variable c_int '131072'
FF_IDCT_ALTIVEC = 8 # Variable c_int '8'
SCNdFAST64 = 'ld' # Variable STRING '(const char*)"ld"'
EPROTOTYPE = 91 # Variable c_int '91'
SWS_CPU_CAPS_MMX2 = 536870912 # Variable c_int '536870912'
_IO_NO_READS = 4 # Variable c_int '4'
ENOMEDIUM = 123 # Variable c_int '123'
FF_PROFILE_AAC_LTP = 3 # Variable c_int '3'
SCNx16 = 'hx' # Variable STRING '(const char*)"hx"'
_BITS_WCHAR_H = 1 # Variable c_int '1'
__GLIBC_MINOR__ = 19 # Variable c_int '19'
_IO_CURRENTLY_PUTTING = 2048 # Variable c_int '2048'
FF_BUG_NO_PADDING = 16 # Variable c_int '16'
AV_TIME_BASE = 1000000 # Variable c_int '1000000'
MAX_PROBE_PACKETS = 2500 # Variable c_int '2500'
PP_CPU_CAPS_MMX = 2147483648 # Variable c_uint '2147483648u'
CODEC_FLAG_QSCALE = 2 # Variable c_int '2'
FF_BUFFER_TYPE_COPY = 8 # Variable c_int '8'
_POSIX_CLOCKRES_MIN = 20000000 # Variable c_int '20000000'
LIBAVUTIL_VERSION_MINOR = 48 # Variable c_int '48'
PRIuLEAST16 = 'u' # Variable STRING '(const char*)"u"'
CODEC_FLAG2_IGNORE_CROP = 65536 # Variable c_int '65536'
AVFMT_NOSTREAMS = 4096 # Variable c_int '4096'
AV_PTS_WRAP_SUB_OFFSET = -1 # Variable c_int '-0x00000000000000001'
FF_DTG_AFD_SP_4_3 = 15 # Variable c_int '15'
SCNuLEAST16 = 'hu' # Variable STRING '(const char*)"hu"'
CODEC_CAP_TRUNCATED = 8 # Variable c_int '8'
AV_CODEC_PROP_INTRA_ONLY = 1 # Variable c_int '1'
ELOOP = 40 # Variable c_int '40'
FF_PROFILE_MPEG4_ADVANCED_CORE = 12 # Variable c_int '12'
SCNoLEAST64 = 'lo' # Variable STRING '(const char*)"lo"'
EREMOTE = 66 # Variable c_int '66'
FF_CMP_NSSE = 10 # Variable c_int '10'
FF_PROFILE_H264_EXTENDED = 88 # Variable c_int '88'
PRIxLEAST64 = 'lx' # Variable STRING '(const char*)"lx"'
CODEC_CAP_CHANNEL_CONF = 1024 # Variable c_int '1024'
UINT32_MAX = 4294967295 # Variable c_uint '4294967295u'
AV_EF_AGGRESSIVE = 262144 # Variable c_int '262144'
_SYS_TYPES_H = 1 # Variable c_int '1'
FP_ILOGB0 = -2147483648 # Variable c_int '-0x00000000080000000'
FF_IDCT_SIMPLE = 2 # Variable c_int '2'
PRIdMAX = 'ld' # Variable STRING '(const char*)"ld"'
FF_LEVEL_UNKNOWN = -99 # Variable c_int '-0x00000000000000063'
_IO_ERR_SEEN = 32 # Variable c_int '32'
MB_TYPE_INTERLACED = 128 # Variable c_int '128'
AV_HAVE_INCOMPATIBLE_LIBAV_ABI = 0 # Variable c_int '0'
AV_CH_LAYOUT_7POINT1_WIDE = 1743 # Variable c_int '1743'
FF_LOSS_COLORSPACE = 4 # Variable c_int '4'
FF_PROFILE_JPEG2000_CSTREAM_NO_RESTRICTION = 2 # Variable c_int '2'
__USE_GNU = 1 # Variable c_int '1'
FF_PROFILE_MPEG2_HIGH = 1 # Variable c_int '1'
AV_CH_LAYOUT_STEREO = 3 # Variable c_int '3'
LIBAVFILTER_VERSION_MICRO = 100 # Variable c_int '100'
SWS_CS_ITU601 = 5 # Variable c_int '5'
SCNoLEAST16 = 'ho' # Variable STRING '(const char*)"ho"'
SLICE_FLAG_ALLOW_FIELD = 2 # Variable c_int '2'
PRIiLEAST32 = 'i' # Variable STRING '(const char*)"i"'
AVERROR_PROTOCOL_NOT_FOUND = -1330794744 # Variable c_int '-0x0000000004f5250f8'
XATTR_LIST_MAX = 65536 # Variable c_int '65536'
_G_IO_IO_FILE_VERSION = 131073 # Variable c_int '131073'
ELIBMAX = 82 # Variable c_int '82'
_POSIX_C_SOURCE = 200809 # Variable c_long '200809l'
EMULTIHOP = 72 # Variable c_int '72'
AVFMT_RAWPICTURE = 32 # Variable c_int '32'
AV_CH_LAYOUT_5POINT1_BACK = 63 # Variable c_int '63'
AV_CH_LAYOUT_2POINT1 = 11 # Variable c_int '11'
AV_HAVE_FAST_UNALIGNED = 1 # Variable c_int '1'
SWS_LANCZOS = 512 # Variable c_int '512'
_POSIX2_COLL_WEIGHTS_MAX = 2 # Variable c_int '2'
__SIZEOF_PTHREAD_MUTEXATTR_T = 4 # Variable c_int '4'
__USE_SVID = 1 # Variable c_int '1'
AV_DICT_APPEND = 32 # Variable c_int '32'
FF_DCT_AUTO = 0 # Variable c_int '0'
AV_CH_LAYOUT_7POINT0_FRONT = 1735 # Variable c_int '1735'
FF_PROFILE_MPEG4_ADVANCED_SIMPLE = 15 # Variable c_int '15'
INT_FAST64_MIN = -9223372036854775808 # Variable c_long '-0x08000000000000000l'
__ldiv_t_defined = 1 # Variable c_int '1'
_POSIX_SIGQUEUE_MAX = 32 # Variable c_int '32'
LIBPOSTPROC_VERSION_MAJOR = 52 # Variable c_int '52'
FF_DEBUG_THREADS = 65536 # Variable c_int '65536'
_POSIX_MQ_PRIO_MAX = 32 # Variable c_int '32'
INT8_MIN = -128 # Variable c_int '-0x00000000000000080'
M_LOG2E = 1.4426950408889634 # Variable c_double '1.442695040888963387004650940070860087871551513671875e+0'
PRIiFAST8 = 'i' # Variable STRING '(const char*)"i"'
__W_CONTINUED = 65535 # Variable c_int '65535'
AVPALETTE_COUNT = 256 # Variable c_int '256'
__USE_ISOC99 = 1 # Variable c_int '1'
UINT_LEAST64_MAX = 18446744073709551615 # Variable c_ulong '-1ul'
ECONNABORTED = 103 # Variable c_int '103'
EISNAM = 120 # Variable c_int '120'
L_ctermid = 9 # Variable c_int '9'
EINVAL = 22 # Variable c_int '22'
AVFMT_FLAG_PRIV_OPT = 131072 # Variable c_int '131072'
PRIoFAST8 = 'o' # Variable STRING '(const char*)"o"'
UINT_FAST64_MAX = 18446744073709551615 # Variable c_ulong '-1ul'
FF_IDCT_SIMPLEVIS = 18 # Variable c_int '18'
PRIXLEAST8 = 'X' # Variable STRING '(const char*)"X"'
SCNiFAST8 = 'hhi' # Variable STRING '(const char*)"hhi"'
AV_PERM_ALIGN = 64 # Variable c_int '64'
_POSIX_PATH_MAX = 256 # Variable c_int '256'
AV_CH_LAYOUT_STEREO_DOWNMIX = 1610612736 # Variable c_int '1610612736'
_IO_INTERNAL = 8 # Variable c_int '8'
AVFMT_GENERIC_INDEX = 256 # Variable c_int '256'
AVPROBE_SCORE_RETRY = 25 # Variable c_int '25'
MB_TYPE_DIRECT2 = 256 # Variable c_int '256'
FF_IDCT_XVIDMMX = 14 # Variable c_int '14'
EMEDIUMTYPE = 124 # Variable c_int '124'
AVFILTER_FLAG_DYNAMIC_OUTPUTS = 2 # Variable c_int '2'
FF_MB_DECISION_SIMPLE = 0 # Variable c_int '0'
AV_ERROR_MAX_STRING_SIZE = 64 # Variable c_int '64'
SWS_PRINT_INFO = 4096 # Variable c_int '4096'
_IO_TIED_PUT_GET = 1024 # Variable c_int '1024'
FF_DCT_INT = 2 # Variable c_int '2'
FF_DEBUG_QP = 16 # Variable c_int '16'
FF_SUB_CHARENC_MODE_DO_NOTHING = -1 # Variable c_int '-0x00000000000000001'
SWS_CPU_CAPS_MMXEXT = 536870912 # Variable c_int '536870912'
INT32_MAX = 2147483647 # Variable c_int '2147483647'
INT_LEAST64_MIN = -9223372036854775808 # Variable c_long '-0x08000000000000000l'
__USE_LARGEFILE = 1 # Variable c_int '1'
__USE_EXTERN_INLINES = 1 # Variable c_int '1'
__SIZEOF_PTHREAD_COND_T = 48 # Variable c_int '48'
SWS_PARAM_DEFAULT = 123456 # Variable c_int '123456'
AV_CH_TOP_FRONT_RIGHT = 16384 # Variable c_int '16384'
_FEATURES_H = 1 # Variable c_int '1'
ULONG_MAX = 18446744073709551615 # Variable c_ulong '-1ul'
FF_COMPLIANCE_STRICT = 1 # Variable c_int '1'
PRIdLEAST16 = 'd' # Variable STRING '(const char*)"d"'
FF_PROFILE_MPEG2_SNR_SCALABLE = 3 # Variable c_int '3'
SEEK_DATA = 3 # Variable c_int '3'
_IOS_INPUT = 1 # Variable c_int '1'
MB_TYPE_16x16 = 8 # Variable c_int '8'
EDOM = 33 # Variable c_int '33'
_POSIX_SEM_NSEMS_MAX = 256 # Variable c_int '256'
AV_CPU_FLAG_ALTIVEC = 1 # Variable c_int '1'
FF_IDCT_INT = 1 # Variable c_int '1'
_BITS_TYPES_H = 1 # Variable c_int '1'
SCNiPTR = 'li' # Variable STRING '(const char*)"li"'
AVFMT_NOFILE = 1 # Variable c_int '1'
ENOTCONN = 107 # Variable c_int '107'
CODEC_FLAG2_CHUNKS = 32768 # Variable c_int '32768'
FF_PROFILE_UNKNOWN = -99 # Variable c_int '-0x00000000000000063'
AVFMT_TS_NONSTRICT = 131072 # Variable c_int '131072'
FF_ASPECT_EXTENDED = 15 # Variable c_int '15'
AVFMT_NEEDNUMBER = 2 # Variable c_int '2'
AVFMT_NO_BYTE_SEEK = 32768 # Variable c_int '32768'
AVFMT_FLAG_SORT_DTS = 65536 # Variable c_int '65536'
FP_ZERO = 2 # Variable c_int '2'
SING = 2 # Variable c_int '2'
EPFNOSUPPORT = 96 # Variable c_int '96'
FF_PROFILE_H264_HIGH_422 = 122 # Variable c_int '122'
EFAULT = 14 # Variable c_int '14'
AV_NOPTS_VALUE = -9223372036854775808 # Variable c_long '-0x08000000000000000'
AV_DISPOSITION_FORCED = 64 # Variable c_int '64'
ENOLINK = 67 # Variable c_int '67'
ECHRNG = 44 # Variable c_int '44'
SCNiLEAST64 = 'li' # Variable STRING '(const char*)"li"'
FF_BUFFER_HINTS_READABLE = 2 # Variable c_int '2'
ENOKEY = 126 # Variable c_int '126'
PP_FORMAT_411 = 10 # Variable c_int '10'
FF_BUG_HPEL_CHROMA = 2048 # Variable c_int '2048'
AV_EF_COMPLIANT = 131072 # Variable c_int '131072'
SCNd8 = 'hhd' # Variable STRING '(const char*)"hhd"'
WNOWAIT = 16777216 # Variable c_int '16777216'
AVIO_FLAG_WRITE = 2 # Variable c_int '2'
AV_PERM_WRITE = 2 # Variable c_int '2'
_IO_UNBUFFERED = 2 # Variable c_int '2'
__SIZEOF_PTHREAD_RWLOCK_T = 56 # Variable c_int '56'
ESRCH = 3 # Variable c_int '3'
FF_DEBUG_BUFFERS = 32768 # Variable c_int '32768'
RE_DUP_MAX = 32767 # Variable c_int '32767'
FF_DEBUG_VIS_MV_B_FOR = 2 # Variable c_int '2'
FF_CMP_VSSE = 9 # Variable c_int '9'
FF_PROFILE_H264_MAIN = 77 # Variable c_int '77'
_POSIX_NAME_MAX = 14 # Variable c_int '14'
AVFMT_FLAG_MP4A_LATM = 32768 # Variable c_int '32768'
SWS_FAST_BILINEAR = 1 # Variable c_int '1'
AV_PERM_REUSE2 = 16 # Variable c_int '16'
ENONET = 64 # Variable c_int '64'
EHWPOISON = 133 # Variable c_int '133'
XATTR_NAME_MAX = 255 # Variable c_int '255'
LOGIN_NAME_MAX = 256 # Variable c_int '256'
FF_CMP_DCT = 3 # Variable c_int '3'
HUGE_VALF = 0.0 # Variable c_float '0.0f'
FF_PROFILE_DTS_HD_HRA = 50 # Variable c_int '50'
FF_DEBUG_VIS_MV_B_BACK = 4 # Variable c_int '4'
AV_CPU_FLAG_ARMV6T2 = 4 # Variable c_int '4'
__STDC_CONSTANT_MACROS = 1 # Variable c_int '1'
FF_SUB_CHARENC_MODE_AUTOMATIC = 0 # Variable c_int '0'
INTPTR_MAX = 9223372036854775807 # Variable c_long '9223372036854775807l'
FF_DEBUG_PTS = 512 # Variable c_int '512'
PRIu32 = 'u' # Variable STRING '(const char*)"u"'
SCNxLEAST8 = 'hhx' # Variable STRING '(const char*)"hhx"'
_IO_IS_APPENDING = 4096 # Variable c_int '4096'
AV_LOG_INFO = 32 # Variable c_int '32'
EL2HLT = 51 # Variable c_int '51'
AV_NUM_DATA_POINTERS = 8 # Variable c_int '8'
PATH_MAX = 4096 # Variable c_int '4096'
EL2NSYNC = 45 # Variable c_int '45'
AV_LOG_MAX_OFFSET = 56 # Variable c_int '56'
WINT_MAX = 4294967295 # Variable c_uint '4294967295u'
_BSD_SOURCE = 1 # Variable c_int '1'
AV_CH_BACK_RIGHT = 32 # Variable c_int '32'
ENOMSG = 42 # Variable c_int '42'
FF_DEBUG_VIS_MB_TYPE = 16384 # Variable c_int '16384'
MB_TYPE_INTRA16x16 = 2 # Variable c_int '2'
LIBAVDEVICE_VERSION_MINOR = 5 # Variable c_int '5'
ENOANO = 55 # Variable c_int '55'
AV_OPT_FLAG_ENCODING_PARAM = 1 # Variable c_int '1'
MAX_STD_TIMEBASES = 726 # Variable c_int '726'
LIBAVFILTER_VERSION_MINOR = 90 # Variable c_int '90'
EADDRNOTAVAIL = 99 # Variable c_int '99'
FF_CMP_PSNR = 4 # Variable c_int '4'
AV_CH_FRONT_LEFT_OF_CENTER = 64 # Variable c_int '64'
FF_CMP_VSAD = 8 # Variable c_int '8'
PRIxLEAST32 = 'x' # Variable STRING '(const char*)"x"'
AV_DISPOSITION_CLEAN_EFFECTS = 512 # Variable c_int '512'
__GNU_LIBRARY__ = 6 # Variable c_int '6'
_BITS_TYPESIZES_H = 1 # Variable c_int '1'
SCNo32 = 'o' # Variable STRING '(const char*)"o"'
CODEC_CAP_SMALL_LAST_FRAME = 64 # Variable c_int '64'
_IOS_NOCREATE = 32 # Variable c_int '32'
_IO_USER_BUF = 1 # Variable c_int '1'
__USE_LARGEFILE64 = 1 # Variable c_int '1'
_POSIX_LINK_MAX = 8 # Variable c_int '8'
_POSIX_LOGIN_NAME_MAX = 9 # Variable c_int '9'
FF_PROFILE_MPEG2_SS = 2 # Variable c_int '2'
CHARCLASS_NAME_MAX = 2048 # Variable c_int '2048'
AV_CH_FRONT_RIGHT_OF_CENTER = 128 # Variable c_int '128'
SCNo16 = 'ho' # Variable STRING '(const char*)"ho"'
ECONNRESET = 104 # Variable c_int '104'
LIBAVFORMAT_VERSION_MINOR = 19 # Variable c_int '19'
AV_DISPOSITION_LYRICS = 16 # Variable c_int '16'
PRId16 = 'd' # Variable STRING '(const char*)"d"'
SWS_SRC_V_CHR_DROP_MASK = 196608 # Variable c_int '196608'
_IO_LINE_BUF = 512 # Variable c_int '512'
AV_CH_BACK_LEFT = 16 # Variable c_int '16'
ESHUTDOWN = 108 # Variable c_int '108'
AV_CPU_FLAG_SSE2SLOW = 1073741824 # Variable c_int '1073741824'
FF_QSCALE_TYPE_H264 = 2 # Variable c_int '2'
CODEC_CAP_SUBFRAMES = 256 # Variable c_int '256'
PRIu16 = 'u' # Variable STRING '(const char*)"u"'
FF_COMPLIANCE_VERY_STRICT = 2 # Variable c_int '2'
UINT8_MAX = 255 # Variable c_int '255'
PRIXLEAST16 = 'X' # Variable STRING '(const char*)"X"'
AV_CH_LAYOUT_5POINT1 = 1551 # Variable c_int '1551'
CODEC_FLAG_NORMALIZE_AQP = 131072 # Variable c_int '131072'
_POSIX_SEM_VALUE_MAX = 32767 # Variable c_int '32767'
UINTMAX_MAX = 18446744073709551615 # Variable c_ulong '-1ul'
FF_DECODE_ERROR_INVALID_BITSTREAM = 1 # Variable c_int '1'
PP_CPU_CAPS_MMX2 = 536870912 # Variable c_int '536870912'
AVSEEK_FLAG_FRAME = 8 # Variable c_int '8'
_G_config_h = 1 # Variable c_int '1'
____mbstate_t_defined = 1 # Variable c_int '1'
NZERO = 20 # Variable c_int '20'
FF_DEBUG_MMCO = 2048 # Variable c_int '2048'
M_LN2 = 0.6931471805599453 # Variable c_double '6.9314718055994528622676398299518041312694549560546875e-1'
AVPROBE_SCORE_EXTENSION = 50 # Variable c_int '50'
SCNxLEAST32 = 'x' # Variable STRING '(const char*)"x"'
MB_TYPE_ACPRED = 512 # Variable c_int '512'
__lldiv_t_defined = 1 # Variable c_int '1'
ETIME = 62 # Variable c_int '62'
AV_PERM_PRESERVE = 4 # Variable c_int '4'
SCNuPTR = 'lu' # Variable STRING '(const char*)"lu"'
AVFILTER_ALIGN = 16 # Variable c_int '16'
CODEC_CAP_EXPERIMENTAL = 512 # Variable c_int '512'
FP_NAN = 0 # Variable c_int '0'
__MATH_DECLARE_LDOUBLE = 1 # Variable c_int '1'
FOPEN_MAX = 16 # Variable c_int '16'
PRIoLEAST8 = 'o' # Variable STRING '(const char*)"o"'
_IO_DELETE_DONT_CLOSE = 64 # Variable c_int '64'
MB_TYPE_QUANT = 65536 # Variable c_int '65536'
INTMAX_MAX = 9223372036854775807 # Variable c_long '9223372036854775807l'
AV_HAVE_INCOMPATIBLE_FORK_ABI = 0 # Variable c_int '0'
AV_PTS_WRAP_IGNORE = 0 # Variable c_int '0'
CODEC_CAP_LOSSLESS = 2147483648 # Variable c_uint '2147483648u'
FF_PROFILE_MPEG4_SIMPLE_SCALABLE = 1 # Variable c_int '1'
INT64_MIN = -9223372036854775808 # Variable c_long '-0x08000000000000000l'
ENOTTY = 25 # Variable c_int '25'
FP_INFINITE = 1 # Variable c_int '1'
EKEYEXPIRED = 127 # Variable c_int '127'
AV_CH_SIDE_LEFT = 512 # Variable c_int '512'
AV_LOG_ERROR = 16 # Variable c_int '16'
AV_SUBTITLE_FLAG_FORCED = 1 # Variable c_int '1'
UINT_LEAST8_MAX = 255 # Variable c_int '255'
FF_PROFILE_MPEG4_CORE_SCALABLE = 10 # Variable c_int '10'
_STDLIB_H = 1 # Variable c_int '1'
AVFMT_ALLOW_FLUSH = 65536 # Variable c_int '65536'
PRIXMAX = 'lX' # Variable STRING '(const char*)"lX"'
AVERROR_INVALIDDATA = -1094995529 # Variable c_int '-0x00000000041444e49'
PRIXLEAST64 = 'lX' # Variable STRING '(const char*)"lX"'
FF_CODER_TYPE_AC = 1 # Variable c_int '1'
AVFILTER_THREAD_SLICE = 1 # Variable c_int '1'
__USE_XOPEN = 1 # Variable c_int '1'
UINT_LEAST32_MAX = 4294967295 # Variable c_uint '4294967295u'
ENOTNAM = 118 # Variable c_int '118'
EUNATCH = 49 # Variable c_int '49'
MB_TYPE_L1 = 49152 # Variable c_int '49152'
_POSIX_TZNAME_MAX = 6 # Variable c_int '6'
MB_TYPE_CBP = 131072 # Variable c_int '131072'
CODEC_CAP_DELAY = 32 # Variable c_int '32'
_POSIX_MQ_OPEN_MAX = 8 # Variable c_int '8'
MB_TYPE_L0 = 12288 # Variable c_int '12288'
_IOLBF = 1 # Variable c_int '1'
PRId8 = 'd' # Variable STRING '(const char*)"d"'
AV_CH_LAYOUT_5POINT0 = 1543 # Variable c_int '1543'
FF_PROFILE_MPEG2_AAC_HE = 131 # Variable c_int '131'
AV_CPU_FLAG_AVX = 16384 # Variable c_int '16384'
EL3HLT = 46 # Variable c_int '46'
AVERROR_OPTION_NOT_FOUND = -1414549496 # Variable c_int '-0x00000000054504ff8'
PRIiFAST64 = 'li' # Variable STRING '(const char*)"li"'
MAX_CANON = 255 # Variable c_int '255'
AV_DICT_IGNORE_SUFFIX = 2 # Variable c_int '2'
FF_PROFILE_MPEG4_N_BIT = 4 # Variable c_int '4'
ECHILD = 10 # Variable c_int '10'
FF_DEBUG_ER = 1024 # Variable c_int '1024'
SCNuFAST8 = 'hhu' # Variable STRING '(const char*)"hhu"'
__SIZEOF_PTHREAD_BARRIER_T = 32 # Variable c_int '32'
__USE_XOPEN2K = 1 # Variable c_int '1'
AV_PKT_FLAG_CORRUPT = 2 # Variable c_int '2'
AV_CPU_FLAG_SSE4 = 256 # Variable c_int '256'
MB_TYPE_8x8 = 64 # Variable c_int '64'
FF_CMP_SATD = 2 # Variable c_int '2'
FF_COMPRESSION_DEFAULT = -1 # Variable c_int '-0x00000000000000001'
FF_PROFILE_VC1_ADVANCED = 3 # Variable c_int '3'
AV_OPT_FLAG_FILTERING_PARAM = 65536 # Variable c_int '65536'
SCNxFAST8 = 'hhx' # Variable STRING '(const char*)"hhx"'
LIBAVRESAMPLE_VERSION_MAJOR = 1 # Variable c_int '1'
SCNu16 = 'hu' # Variable STRING '(const char*)"hu"'
PRIo8 = 'o' # Variable STRING '(const char*)"o"'
FF_DEBUG_PICT_INFO = 1 # Variable c_int '1'
MB_TYPE_P1L0 = 8192 # Variable c_int '8192'
ETIMEDOUT = 110 # Variable c_int '110'
AV_LOG_PANIC = 0 # Variable c_int '0'
_IO_LINKED = 128 # Variable c_int '128'
FF_MAX_B_FRAMES = 16 # Variable c_int '16'
SCNuFAST32 = 'lu' # Variable STRING '(const char*)"lu"'
M_SQRT2 = 1.4142135623730951 # Variable c_double '1.4142135623730951454746218587388284504413604736328125e+0'
FF_LOSS_ALPHA = 8 # Variable c_int '8'
__USE_POSIX2 = 1 # Variable c_int '1'
M_SQRT1_2 = 0.7071067811865476 # Variable c_double '7.0710678118654757273731092936941422522068023681640625e-1'
ETOOMANYREFS = 109 # Variable c_int '109'
PLOSS = 6 # Variable c_int '6'
UINTPTR_MAX = 18446744073709551615 # Variable c_ulong '-1ul'
ELIBEXEC = 83 # Variable c_int '83'
FF_PROFILE_H264_HIGH_444_PREDICTIVE = 244 # Variable c_int '244'
EALREADY = 114 # Variable c_int '114'
FF_DEBUG_MB_TYPE = 8 # Variable c_int '8'
__SIZEOF_PTHREAD_BARRIERATTR_T = 4 # Variable c_int '4'
INT16_MIN = -32768 # Variable c_int '-0x00000000000008000'
PRIxFAST16 = 'lx' # Variable STRING '(const char*)"lx"'
AVERROR_BUFFER_TOO_SMALL = -1397118274 # Variable c_int '-0x00000000053465542'
EMFILE = 24 # Variable c_int '24'
CODEC_CAP_HWACCEL_VDPAU = 128 # Variable c_int '128'
FF_LAMBDA_MAX = 32767 # Variable c_int '32767'
AV_CH_LAYOUT_7POINT0 = 1591 # Variable c_int '1591'
AV_CH_LAYOUT_7POINT1 = 1599 # Variable c_int '1599'
__PTHREAD_RWLOCK_INT_FLAGS_SHARED = 1 # Variable c_int '1'
SCNxLEAST64 = 'lx' # Variable STRING '(const char*)"lx"'
AVFMT_SEEK_TO_PTS = 67108864 # Variable c_int '67108864'
INT_LEAST64_MAX = 9223372036854775807 # Variable c_long '9223372036854775807l'
FF_PROFILE_MPEG2_SIMPLE = 5 # Variable c_int '5'
AV_CH_LAYOUT_6POINT1 = 1807 # Variable c_int '1807'
AV_CH_LAYOUT_6POINT0 = 1799 # Variable c_int '1799'
_BITS_POSIX2_LIM_H = 1 # Variable c_int '1'
EBADMSG = 74 # Variable c_int '74'
FF_DTG_AFD_16_9_SP_14_9 = 14 # Variable c_int '14'
__USE_MISC = 1 # Variable c_int '1'
SCNiLEAST8 = 'hhi' # Variable STRING '(const char*)"hhi"'
SCNx32 = 'x' # Variable STRING '(const char*)"x"'
__BIT_TYPES_DEFINED__ = 1 # Variable c_int '1'
AV_PARSER_PTS_NB = 4 # Variable c_int '4'
X_TLOSS = 1.414847550405688e+16 # Variable c_double '1.414847550405688e+16'
SCNiLEAST32 = 'i' # Variable STRING '(const char*)"i"'
PRIXFAST32 = 'lX' # Variable STRING '(const char*)"lX"'
_POSIX_TTY_NAME_MAX = 9 # Variable c_int '9'
_IO_SKIPWS = 1 # Variable c_int '1'
AVERROR_EXTERNAL = -542398533 # Variable c_int '-0x00000000020545845'
AV_BUFFER_FLAG_READONLY = 1 # Variable c_int '1'
AV_CH_BACK_CENTER = 256 # Variable c_int '256'
MB_TYPE_L0L1 = 61440 # Variable c_int '61440'
ENOMEM = 12 # Variable c_int '12'
FP_ILOGBNAN = -2147483648 # Variable c_int '-0x00000000080000000'
FF_IDCT_SIMPLEARMV5TE = 16 # Variable c_int '16'
__PTHREAD_MUTEX_HAVE_ELISION = 1 # Variable c_int '1'
AV_CPU_FLAG_FMA4 = 2048 # Variable c_int '2048'
MB_TYPE_P1L1 = 32768 # Variable c_int '32768'
M_2_SQRTPI = 1.1283791670955126 # Variable c_double '1.1283791670955125585606992899556644260883331298828125e+0'
ELIBSCN = 81 # Variable c_int '81'
_IO_HEX = 64 # Variable c_int '64'
AV_CPU_FLAG_SSSE3 = 128 # Variable c_int '128'
AV_DICT_DONT_STRDUP_KEY = 4 # Variable c_int '4'
FF_QP2LAMBDA = 118 # Variable c_int '118'
_STDINT_H = 1 # Variable c_int '1'
FF_COMPLIANCE_NORMAL = 0 # Variable c_int '0'
P_tmpdir = '/tmp' # Variable STRING '(const char*)"/tmp"'
__OFF_T_MATCHES_OFF64_T = 1 # Variable c_int '1'
EBADSLT = 57 # Variable c_int '57'
AVFMT_FLAG_NONBLOCK = 4 # Variable c_int '4'
FF_PROFILE_JPEG2000_CSTREAM_RESTRICTION_0 = 0 # Variable c_int '0'
FF_PROFILE_JPEG2000_CSTREAM_RESTRICTION_1 = 1 # Variable c_int '1'
FF_DCT_ALTIVEC = 5 # Variable c_int '5'
PRIX16 = 'X' # Variable STRING '(const char*)"X"'
FILENAME_MAX = 4096 # Variable c_int '4096'
L_cuserid = 9 # Variable c_int '9'
_SYS_SYSMACROS_H = 1 # Variable c_int '1'
AV_CODEC_PROP_LOSSLESS = 4 # Variable c_int '4'
UINT16_MAX = 65535 # Variable c_int '65535'
_POSIX_DELAYTIMER_MAX = 32 # Variable c_int '32'
AV_CPU_FLAG_3DNOWEXT = 32 # Variable c_int '32'
EXIT_SUCCESS = 0 # Variable c_int '0'
AVERROR_BUG = -558323010 # Variable c_int '-0x00000000021475542'
AVFILTER_FLAG_SUPPORT_TIMELINE_GENERIC = 65536 # Variable c_int '65536'
PRIi16 = 'i' # Variable STRING '(const char*)"i"'
ULLONG_MAX = 18446744073709551615 # Variable c_ulonglong '-1ull'
ENOLCK = 37 # Variable c_int '37'
PP_FORMAT_444 = 8 # Variable c_int '8'
AVFMT_SHOW_IDS = 8 # Variable c_int '8'
__WCLONE = 2147483648 # Variable c_uint '2147483648u'
FF_CODER_TYPE_DEFLATE = 4 # Variable c_int '4'
UINT_FAST32_MAX = 18446744073709551615 # Variable c_ulong '-1ul'
FF_IDCT_SIMPLEMMX = 3 # Variable c_int '3'
SCNxMAX = 'lx' # Variable STRING '(const char*)"lx"'
DOMAIN = 1 # Variable c_int '1'
_IO_FLAGS2_USER_WBUF = 8 # Variable c_int '8'
CODEC_CAP_NEG_LINESIZES = 2048 # Variable c_int '2048'
SWS_POINT = 16 # Variable c_int '16'
AVFMT_FLAG_NOBUFFER = 64 # Variable c_int '64'
FF_DECODE_ERROR_MISSING_REFERENCE = 2 # Variable c_int '2'
SCNxPTR = 'lx' # Variable STRING '(const char*)"lx"'
SIG_ATOMIC_MIN = -2147483648 # Variable c_int '-0x00000000080000000'
PRIiFAST32 = 'li' # Variable STRING '(const char*)"li"'
PRIdLEAST32 = 'd' # Variable STRING '(const char*)"d"'
CODEC_CAP_INTRA_ONLY = 1073741824 # Variable c_int '1073741824'
PRIo32 = 'o' # Variable STRING '(const char*)"o"'
_STRING_H = 1 # Variable c_int '1'
FF_BUG_MS = 8192 # Variable c_int '8192'
SEEK_HOLE = 4 # Variable c_int '4'
EACCES = 13 # Variable c_int '13'
SCNiMAX = 'li' # Variable STRING '(const char*)"li"'
_POSIX_SYMLOOP_MAX = 8 # Variable c_int '8'
SCNuLEAST8 = 'hhu' # Variable STRING '(const char*)"hhu"'
SCNdMAX = 'ld' # Variable STRING '(const char*)"ld"'
AV_CH_SURROUND_DIRECT_RIGHT = 17179869184 # Variable c_ulonglong '17179869184ull'
SCNd64 = 'ld' # Variable STRING '(const char*)"ld"'
FF_PROFILE_MPEG4_SCALABLE_TEXTURE = 5 # Variable c_int '5'
CODEC_FLAG_PASS2 = 1024 # Variable c_int '1024'
CODEC_FLAG_PASS1 = 512 # Variable c_int '512'
COLL_WEIGHTS_MAX = 255 # Variable c_int '255'
SCNoFAST32 = 'lo' # Variable STRING '(const char*)"lo"'
EISCONN = 106 # Variable c_int '106'
FF_IDCT_SIMPLEALPHA = 23 # Variable c_int '23'
LIBAVFILTER_IDENT = 'Lavfi3.90.100' # Variable STRING '(const char*)"Lavfi3.90.100"'
SCNoLEAST8 = 'hho' # Variable STRING '(const char*)"hho"'
SWS_CPU_CAPS_SSE2 = 33554432 # Variable c_int '33554432'
AV_CH_LAYOUT_OCTAGONAL = 1847 # Variable c_int '1847'
_IO_SHOWPOINT = 256 # Variable c_int '256'
__USE_XOPEN2K8XSI = 1 # Variable c_int '1'
RTSIG_MAX = 32 # Variable c_int '32'
AVERROR_DEMUXER_NOT_FOUND = -1296385272 # Variable c_int '-0x0000000004d4544f8'
AVSEEK_SIZE = 65536 # Variable c_int '65536'
_IO_RIGHT = 4 # Variable c_int '4'
SCNdFAST8 = 'hhd' # Variable STRING '(const char*)"hhd"'
AV_CPU_FLAG_VFP = 8 # Variable c_int '8'
ENOPKG = 65 # Variable c_int '65'
_POSIX_HOST_NAME_MAX = 255 # Variable c_int '255'
LIBAVRESAMPLE_VERSION_MICRO = 0 # Variable c_int '0'
SCNx8 = 'hhx' # Variable STRING '(const char*)"hhx"'
_OLD_STDIO_MAGIC = 4206624768 # Variable c_uint '4206624768u'
FF_DEBUG_MV = 32 # Variable c_int '32'
SWS_SRC_V_CHR_DROP_SHIFT = 16 # Variable c_int '16'
FF_DEBUG_VIS_MV_P_FOR = 1 # Variable c_int '1'
_POSIX_AIO_LISTIO_MAX = 2 # Variable c_int '2'
PP_FORMAT = 8 # Variable c_int '8'
_IO_IS_FILEBUF = 8192 # Variable c_int '8192'
__SIZEOF_PTHREAD_ATTR_T = 56 # Variable c_int '56'
FF_API_R_FRAME_RATE = 1 # Variable c_int '1'
SIZE_MAX = 18446744073709551615 # Variable c_ulong '-1ul'
FF_BUFFER_HINTS_PRESERVE = 4 # Variable c_int '4'
AV_CH_TOP_BACK_RIGHT = 131072 # Variable c_int '131072'
_IOS_OUTPUT = 2 # Variable c_int '2'
AV_DISPOSITION_DUB = 2 # Variable c_int '2'
UINT_LEAST16_MAX = 65535 # Variable c_int '65535'
SCNxFAST64 = 'lx' # Variable STRING '(const char*)"lx"'
CODEC_FLAG_BITEXACT = 8388608 # Variable c_int '8388608'
UINT64_MAX = 18446744073709551615 # Variable c_ulong '-1ul'
PRIXPTR = 'lX' # Variable STRING '(const char*)"lX"'
LIBAVRESAMPLE_VERSION_MINOR = 1 # Variable c_int '1'
_BITS_PTHREADTYPES_H = 1 # Variable c_int '1'
LLONG_MIN = -9223372036854775808 # Variable c_longlong '-0x08000000000000000ll'
AV_LOG_QUIET = -8 # Variable c_int '-0x00000000000000008'
SCNiFAST32 = 'li' # Variable STRING '(const char*)"li"'
FF_PRED_MEDIAN = 2 # Variable c_int '2'
SWS_MAX_REDUCE_CUTOFF = 0.002 # Variable c_double '2.00000000000000004163336342344337026588618755340576171875e-3'
AV_CH_LAYOUT_4POINT0 = 263 # Variable c_int '263'
WCONTINUED = 8 # Variable c_int '8'
AVERROR_STREAM_NOT_FOUND = -1381258232 # Variable c_int '-0x000000000525453f8'
SCNuLEAST64 = 'lu' # Variable STRING '(const char*)"lu"'
NAME_MAX = 255 # Variable c_int '255'
UINT_FAST16_MAX = 18446744073709551615 # Variable c_ulong '-1ul'
_IO_FLAGS2_NOTCANCEL = 2 # Variable c_int '2'
CODEC_FLAG2_NO_OUTPUT = 4 # Variable c_int '4'
CODEC_FLAG2_SHOW_ALL = 4194304 # Variable c_int '4194304'
PP_CPU_CAPS_AUTO = 524288 # Variable c_int '524288'
FF_QSCALE_TYPE_MPEG1 = 0 # Variable c_int '0'
FF_QSCALE_TYPE_MPEG2 = 1 # Variable c_int '1'
FF_PROFILE_MPEG4_HYBRID = 8 # Variable c_int '8'
AVERROR_FILTER_NOT_FOUND = -1279870712 # Variable c_int '-0x0000000004c4946f8'
AV_CPU_FLAG_VFPV3 = 16 # Variable c_int '16'
_POSIX2_RE_DUP_MAX = 255 # Variable c_int '255'
SWS_BICUBLIN = 64 # Variable c_int '64'
E2BIG = 7 # Variable c_int '7'
WSTOPPED = 2 # Variable c_int '2'
_XOPEN_SOURCE_EXTENDED = 1 # Variable c_int '1'
__USE_XOPEN2KXSI = 1 # Variable c_int '1'
PRId32 = 'd' # Variable STRING '(const char*)"d"'
AV_CPU_FLAG_ARMV5TE = 1 # Variable c_int '1'
NAN = 0.0 # Variable c_float '0.0f'
__have_pthread_attr_t = 1 # Variable c_int '1'
ESOCKTNOSUPPORT = 94 # Variable c_int '94'
LIBSWSCALE_VERSION_MINOR = 5 # Variable c_int '5'
AVFMT_FLAG_NOFILLIN = 16 # Variable c_int '16'
PRIoLEAST32 = 'o' # Variable STRING '(const char*)"o"'
AV_CH_SIDE_RIGHT = 1024 # Variable c_int '1024'
FF_PROFILE_MPEG4_CORE = 2 # Variable c_int '2'
AVERROR_DECODER_NOT_FOUND = -1128613112 # Variable c_int '-0x000000000434544f8'
FF_BUG_EDGE = 1024 # Variable c_int '1024'
FF_DEBUG_STARTCODE = 256 # Variable c_int '256'
CODEC_FLAG_GRAY = 8192 # Variable c_int '8192'
INT64_MAX = 9223372036854775807 # Variable c_long '9223372036854775807l'
SCNdLEAST8 = 'hhd' # Variable STRING '(const char*)"hhd"'
_POSIX_RE_DUP_MAX = 255 # Variable c_int '255'
FF_PROFILE_AAC_LOW = 1 # Variable c_int '1'
__USE_XOPEN2K8 = 1 # Variable c_int '1'
AVIO_FLAG_READ_WRITE = 3 # Variable c_int '3'
_STRUCT_TIMEVAL = 1 # Variable c_int '1'
SCNd16 = 'hd' # Variable STRING '(const char*)"hd"'
EISDIR = 21 # Variable c_int '21'
AVFMT_NOGENSEARCH = 16384 # Variable c_int '16384'
CODEC_FLAG_LOOP_FILTER = 2048 # Variable c_int '2048'
FF_BUG_AMV = 32 # Variable c_int '32'
__SIZEOF_PTHREAD_RWLOCKATTR_T = 8 # Variable c_int '8'
AV_CH_STEREO_LEFT = 536870912 # Variable c_int '536870912'
MB_TYPE_GMC = 1024 # Variable c_int '1024'
AVIO_FLAG_NONBLOCK = 8 # Variable c_int '8'
AV_CPU_FLAG_SSE2 = 16 # Variable c_int '16'
AVFMT_FLAG_NOPARSE = 32 # Variable c_int '32'
IOV_MAX = 1024 # Variable c_int '1024'
FF_BUG_AC_VLC = 0 # Variable c_int '0'
LIBPOSTPROC_IDENT = 'postproc52.3.100' # Variable STRING '(const char*)"postproc52.3.100"'
SEEK_SET = 0 # Variable c_int '0'
LIBAVCODEC_VERSION_MINOR = 39 # Variable c_int '39'
SHRT_MIN = -32768 # Variable c_int '-0x00000000000008000'
FF_DEBUG_RC = 2 # Variable c_int '2'
SCNx64 = 'lx' # Variable STRING '(const char*)"lx"'
EBFONT = 59 # Variable c_int '59'
AV_CPU_FLAG_FORCE = 2147483648 # Variable c_uint '2147483648u'
PP_CPU_CAPS_ALTIVEC = 268435456 # Variable c_int '268435456'
FF_BUG_TRUNCATED = 16384 # Variable c_int '16384'
_LIBC_LIMITS_H_ = 1 # Variable c_int '1'
AV_CPU_FLAG_MMX = 1 # Variable c_int '1'
FF_BUFFER_HINTS_VALID = 1 # Variable c_int '1'
INT_FAST16_MAX = 9223372036854775807 # Variable c_long '9223372036854775807l'
CODEC_FLAG_INTERLACED_DCT = 262144 # Variable c_int '262144'
AVERROR_BSF_NOT_FOUND = -1179861752 # Variable c_int '-0x000000000465342f8'
EEXIST = 17 # Variable c_int '17'
FP_NORMAL = 4 # Variable c_int '4'
AVSEEK_FLAG_ANY = 4 # Variable c_int '4'
INTMAX_MIN = -9223372036854775808 # Variable c_long '-0x08000000000000000l'
AVERROR_PATCHWELCOME = -1163346256 # Variable c_int '-0x00000000045574150'
AV_CH_FRONT_RIGHT = 2 # Variable c_int '2'
AV_CPU_FLAG_ATOM = 268435456 # Variable c_int '268435456'
_IOFBF = 0 # Variable c_int '0'
EPROTO = 71 # Variable c_int '71'
AVERROR_EXPERIMENTAL = -733130664 # Variable c_int '-0x0000000002bb2afa8'
_SYS_SELECT_H = 1 # Variable c_int '1'
LIBPOSTPROC_VERSION_MICRO = 100 # Variable c_int '100'
PRIxFAST8 = 'x' # Variable STRING '(const char*)"x"'
ESRMNT = 69 # Variable c_int '69'
FF_PROFILE_MPEG4_ADVANCED_REAL_TIME = 9 # Variable c_int '9'
LIBAVRESAMPLE_IDENT = 'Lavr1.1.0' # Variable STRING '(const char*)"Lavr1.1.0"'
AVFMT_FLAG_DISCARD_CORRUPT = 256 # Variable c_int '256'
FF_PROFILE_AAC_SSR = 2 # Variable c_int '2'
_ISOC99_SOURCE = 1 # Variable c_int '1'
FF_CMP_BIT = 5 # Variable c_int '5'
WUNTRACED = 2 # Variable c_int '2'
PRIiMAX = 'li' # Variable STRING '(const char*)"li"'
SWS_CPU_CAPS_ALTIVEC = 268435456 # Variable c_int '268435456'
TLOSS = 5 # Variable c_int '5'
AV_CH_STEREO_RIGHT = 1073741824 # Variable c_int '1073741824'
SCNoLEAST32 = 'o' # Variable STRING '(const char*)"o"'
ULONG_LONG_MAX = 18446744073709551615 # Variable c_ulonglong '-1ull'
EOWNERDEAD = 130 # Variable c_int '130'
AVFMTCTX_NOHEADER = 1 # Variable c_int '1'
SCNxFAST32 = 'lx' # Variable STRING '(const char*)"lx"'
CODEC_CAP_DR1 = 2 # Variable c_int '2'
AV_DISPOSITION_COMMENT = 8 # Variable c_int '8'
AV_CPU_FLAG_SSE3SLOW = 536870912 # Variable c_int '536870912'
SCNi32 = 'i' # Variable STRING '(const char*)"i"'
AV_EF_CRCCHECK = 1 # Variable c_int '1'
_POSIX_TIMER_MAX = 32 # Variable c_int '32'
PRIdFAST16 = 'ld' # Variable STRING '(const char*)"ld"'
CODEC_FLAG_INPUT_PRESERVED = 256 # Variable c_int '256'
AV_CPU_FLAG_MMXEXT = 2 # Variable c_int '2'
PRIu8 = 'u' # Variable STRING '(const char*)"u"'
_IO_SHOWPOS = 1024 # Variable c_int '1024'
_STDIO_H = 1 # Variable c_int '1'
PRIuFAST16 = 'lu' # Variable STRING '(const char*)"lu"'
MB_TYPE_SKIP = 2048 # Variable c_int '2048'
_ISOC95_SOURCE = 1 # Variable c_int '1'
MATH_ERRNO = 1 # Variable c_int '1'
SCNuMAX = 'lu' # Variable STRING '(const char*)"lu"'
AVFMT_TS_DISCONT = 512 # Variable c_int '512'
AV_HAVE_BIGENDIAN = 0 # Variable c_int '0'
AV_PTS_WRAP_ADD_OFFSET = 1 # Variable c_int '1'
CODEC_FLAG_GMC = 32 # Variable c_int '32'
ELIBBAD = 80 # Variable c_int '80'
__SYSCALL_WORDSIZE = 64 # Variable c_int '64'
PRIxFAST64 = 'lx' # Variable STRING '(const char*)"lx"'
ERANGE = 34 # Variable c_int '34'
_IO_UPPERCASE = 512 # Variable c_int '512'
ESTALE = 116 # Variable c_int '116'
AV_CH_TOP_FRONT_LEFT = 4096 # Variable c_int '4096'
FF_PROFILE_VC1_MAIN = 1 # Variable c_int '1'
AV_DICT_DONT_STRDUP_VAL = 8 # Variable c_int '8'
AV_CH_LAYOUT_6POINT1_FRONT = 1739 # Variable c_int '1739'
FF_IDCT_IPP = 13 # Variable c_int '13'
PRIx64 = 'lx' # Variable STRING '(const char*)"lx"'
PRIi64 = 'li' # Variable STRING '(const char*)"li"'
CODEC_CAP_VARIABLE_FRAME_SIZE = 65536 # Variable c_int '65536'
PRIo16 = 'o' # Variable STRING '(const char*)"o"'
LIBAVFILTER_VERSION_MAJOR = 3 # Variable c_int '3'
AVERROR_ENCODER_NOT_FOUND = -1129203192 # Variable c_int '-0x000000000434e45f8'
_IOS_ATEND = 4 # Variable c_int '4'
CODEC_FLAG2_LOCAL_HEADER = 8 # Variable c_int '8'
AV_CPU_FLAG_XOP = 1024 # Variable c_int '1024'
ENOTRECOVERABLE = 131 # Variable c_int '131'
ENOBUFS = 105 # Variable c_int '105'
AVFMT_FLAG_IGNDTS = 8 # Variable c_int '8'
PRIiLEAST8 = 'i' # Variable STRING '(const char*)"i"'
_BITS_POSIX1_LIM_H = 1 # Variable c_int '1'
__USE_POSIX = 1 # Variable c_int '1'
__WNOTHREAD = 536870912 # Variable c_int '536870912'
FP_SUBNORMAL = 3 # Variable c_int '3'
PRIuMAX = 'lu' # Variable STRING '(const char*)"lu"'
EINTR = 4 # Variable c_int '4'
SWS_BICUBIC = 4 # Variable c_int '4'
PRIuLEAST8 = 'u' # Variable STRING '(const char*)"u"'
FF_IDCT_SIMPLENEON = 22 # Variable c_int '22'
PRIxMAX = 'lx' # Variable STRING '(const char*)"lx"'
AVFMT_FLAG_GENPTS = 1 # Variable c_int '1'
SWS_CPU_CAPS_BFIN = 16777216 # Variable c_int '16777216'
ENOSYS = 38 # Variable c_int '38'
ENOTBLK = 15 # Variable c_int '15'
SWS_CS_ITU709 = 1 # Variable c_int '1'
SCNi8 = 'hhi' # Variable STRING '(const char*)"hhi"'
AV_CH_FRONT_LEFT = 1 # Variable c_int '1'
FF_IDCT_ARM = 7 # Variable c_int '7'
PRIdPTR = 'ld' # Variable STRING '(const char*)"ld"'
AV_DISPOSITION_DESCRIPTIONS = 131072 # Variable c_int '131072'
FF_DEBUG_DCT_COEFF = 64 # Variable c_int '64'
SCNoFAST64 = 'lo' # Variable STRING '(const char*)"lo"'
PRIuFAST64 = 'lu' # Variable STRING '(const char*)"lu"'
AVIO_FLAG_READ = 1 # Variable c_int '1'
FF_PRED_PLANE = 1 # Variable c_int '1'
FF_PROFILE_MPEG4_SIMPLE_STUDIO = 14 # Variable c_int '14'
FF_PROFILE_H264_HIGH_444_INTRA = 2292 # Variable c_int '2292'
AV_OPT_FLAG_DECODING_PARAM = 2 # Variable c_int '2'
EUSERS = 87 # Variable c_int '87'
SCNoMAX = 'lo' # Variable STRING '(const char*)"lo"'
_IO_IN_BACKUP = 256 # Variable c_int '256'
AV_CH_LAYOUT_2_2 = 1539 # Variable c_int '1539'
PP_CPU_CAPS_3DNOW = 1073741824 # Variable c_int '1073741824'
_SIGSET_H_types = 1 # Variable c_int '1'
_ISOC11_SOURCE = 1 # Variable c_int '1'
____FILE_defined = 1 # Variable c_int '1'
INT16_MAX = 32767 # Variable c_int '32767'
_MATH_H_MATHDEF = 1 # Variable c_int '1'
SEEK_CUR = 1 # Variable c_int '1'
_POSIX_CHILD_MAX = 25 # Variable c_int '25'
AV_CPU_FLAG_CMOV = 16781312 # Variable c_int '16781312'
PRId64 = 'ld' # Variable STRING '(const char*)"ld"'
_ERRNO_H = 1 # Variable c_int '1'
AV_DISPOSITION_ATTACHED_PIC = 1024 # Variable c_int '1024'
__USE_UNIX98 = 1 # Variable c_int '1'
SWS_CS_ITU624 = 5 # Variable c_int '5'
AV_OPT_FLAG_SUBTITLE_PARAM = 32 # Variable c_int '32'
OVERFLOW = 3 # Variable c_int '3'
FF_PROFILE_H264_BASELINE = 66 # Variable c_int '66'
SWS_CS_SMPTE170M = 5 # Variable c_int '5'
PRIxLEAST8 = 'x' # Variable STRING '(const char*)"x"'
EPERM = 1 # Variable c_int '1'
AV_CH_LAYOUT_SURROUND = 7 # Variable c_int '7'
errno = (c_int).in_dll(_libraries['/usr/lib/ffmpeg2.8/libavcodec.so'], 'errno')
_XOPEN_LIM_H = 1 # Variable c_int '1'
RAW_PACKET_BUFFER_SIZE = 2500000 # Variable c_int '2500000'
ENOSR = 63 # Variable c_int '63'
_POSIX_AIO_MAX = 1 # Variable c_int '1'
SCNuLEAST32 = 'u' # Variable STRING '(const char*)"u"'
PRIXFAST8 = 'X' # Variable STRING '(const char*)"X"'
_IOS_TRUNC = 16 # Variable c_int '16'
AV_CH_LAYOUT_6POINT1_BACK = 319 # Variable c_int '319'
PRIuLEAST32 = 'u' # Variable STRING '(const char*)"u"'
EKEYREJECTED = 129 # Variable c_int '129'
AVSEEK_FORCE = 131072 # Variable c_int '131072'
CODEC_FLAG_MV0 = 64 # Variable c_int '64'
PARSER_FLAG_FETCHED_OFFSET = 4 # Variable c_int '4'
FF_BUG_DC_CLIP = 4096 # Variable c_int '4096'
PRIX8 = 'X' # Variable STRING '(const char*)"X"'
INT_FAST64_MAX = 9223372036854775807 # Variable c_long '9223372036854775807l'
PRIoFAST32 = 'lo' # Variable STRING '(const char*)"lo"'
PRIoMAX = 'lo' # Variable STRING '(const char*)"lo"'
ENETUNREACH = 101 # Variable c_int '101'
PRIoPTR = 'lo' # Variable STRING '(const char*)"lo"'
AVFMT_FLAG_KEEP_SIDE_DATA = 262144 # Variable c_int '262144'
SWS_FULL_CHR_H_INT = 8192 # Variable c_int '8192'
LIBAVCODEC_IDENT = 'Lavc55.39.101' # Variable STRING '(const char*)"Lavc55.39.101"'
SCNdFAST32 = 'ld' # Variable STRING '(const char*)"ld"'
AVFMT_TS_NEGATIVE = 262144 # Variable c_int '262144'
FF_BUG_AUTODETECT = 1 # Variable c_int '1'
INT_LEAST32_MIN = -2147483648 # Variable c_int '-0x00000000080000000'
AVFILTER_FLAG_SLICE_THREADS = 4 # Variable c_int '4'
LIBAVUTIL_VERSION_MICRO = 101 # Variable c_int '101'
PRIoLEAST64 = 'lo' # Variable STRING '(const char*)"lo"'
SWS_SPLINE = 1024 # Variable c_int '1024'
ESPIPE = 29 # Variable c_int '29'
PRIuPTR = 'lu' # Variable STRING '(const char*)"lu"'
ENOSPC = 28 # Variable c_int '28'
MB_TYPE_INTRA4x4 = 1 # Variable c_int '1'
PP_QUALITY_MAX = 6 # Variable c_int '6'
PRIu64 = 'lu' # Variable STRING '(const char*)"lu"'
_IO_UNIFIED_JUMPTABLES = 1 # Variable c_int '1'
SEM_VALUE_MAX = 2147483647 # Variable c_int '2147483647'
LIBAVDEVICE_VERSION_MICRO = 100 # Variable c_int '100'
WNOHANG = 1 # Variable c_int '1'
INT8_MAX = 127 # Variable c_int '127'
_IO_LEFT = 2 # Variable c_int '2'
SCNiFAST16 = 'li' # Variable STRING '(const char*)"li"'
FF_PROFILE_H264_HIGH_422_INTRA = 2170 # Variable c_int '2170'
SWS_AREA = 32 # Variable c_int '32'
PRIx16 = 'x' # Variable STRING '(const char*)"x"'
FF_DTG_AFD_14_9 = 11 # Variable c_int '11'
EROFS = 30 # Variable c_int '30'
PRIx32 = 'x' # Variable STRING '(const char*)"x"'
AV_CH_LAYOUT_3POINT1 = 15 # Variable c_int '15'
ECONNREFUSED = 111 # Variable c_int '111'
FF_PROFILE_H264_HIGH_10_INTRA = 2158 # Variable c_int '2158'
__USE_ISOC11 = 1 # Variable c_int '1'
PTHREAD_KEYS_MAX = 1024 # Variable c_int '1024'
FF_PROFILE_MPEG4_ADVANCED_SCALABLE_TEXTURE = 13 # Variable c_int '13'
PRIoFAST64 = 'lo' # Variable STRING '(const char*)"lo"'
AV_CPU_FLAG_MMX2 = 2 # Variable c_int '2'
AVFILTER_FLAG_DYNAMIC_INPUTS = 1 # Variable c_int '1'
SIG_ATOMIC_MAX = 2147483647 # Variable c_int '2147483647'
CODEC_FLAG_UNALIGNED = 1 # Variable c_int '1'
AV_EF_BUFFER = 4 # Variable c_int '4'
AVIO_FLAG_DIRECT = 32768 # Variable c_int '32768'
INT_FAST32_MIN = -9223372036854775808 # Variable c_long '-0x08000000000000000l'
LIBAVCODEC_VERSION_MICRO = 101 # Variable c_int '101'
ENETDOWN = 100 # Variable c_int '100'
ENOEXEC = 8 # Variable c_int '8'
FF_LOSS_DEPTH = 2 # Variable c_int '2'
EXIT_FAILURE = 1 # Variable c_int '1'
_ALLOCA_H = 1 # Variable c_int '1'
AVPROBE_PADDING_SIZE = 32 # Variable c_int '32'
PRIxLEAST16 = 'x' # Variable STRING '(const char*)"x"'
M_PI = 3.141592653589793 # Variable c_double '3.141592653589793115997963468544185161590576171875e+0'
_POSIX_QLIMIT = 1 # Variable c_int '1'
EBADF = 9 # Variable c_int '9'
EBADE = 52 # Variable c_int '52'
UCHAR_MAX = 255 # Variable c_int '255'
AV_CH_LAYOUT_4POINT1 = 271 # Variable c_int '271'
PRIoFAST16 = 'lo' # Variable STRING '(const char*)"lo"'
LIBAVUTIL_IDENT = 'Lavu52.48.101' # Variable STRING '(const char*)"Lavu52.48.101"'
AV_LOG_SKIP_REPEATED = 1 # Variable c_int '1'
EDOTDOT = 73 # Variable c_int '73'
EBADFD = 77 # Variable c_int '77'
FF_PROFILE_AAC_MAIN = 0 # Variable c_int '0'
_IO_MAGIC_MASK = 4294901760 # Variable c_uint '4294901760u'
__PTHREAD_MUTEX_HAVE_PREV = 1 # Variable c_int '1'
AV_CPU_FLAG_NEON = 32 # Variable c_int '32'
AVSEEK_FLAG_BYTE = 2 # Variable c_int '2'
EBADR = 53 # Variable c_int '53'
TTY_NAME_MAX = 32 # Variable c_int '32'
FF_MB_DECISION_BITS = 1 # Variable c_int '1'
AV_DISPOSITION_ORIGINAL = 4 # Variable c_int '4'
AV_CH_FRONT_CENTER = 4 # Variable c_int '4'
LONG_BIT = 64 # Variable c_int '64'
AV_OPT_FLAG_METADATA = 4 # Variable c_int '4'
EXDEV = 18 # Variable c_int '18'
_LARGEFILE64_SOURCE = 1 # Variable c_int '1'
ENAVAIL = 119 # Variable c_int '119'
SWS_X = 8 # Variable c_int '8'
_BITS_BYTESWAP_H = 1 # Variable c_int '1'
CODEC_CAP_HWACCEL = 16 # Variable c_int '16'
MATH_ERREXCEPT = 2 # Variable c_int '2'
PP_PICT_TYPE_QP2 = 16 # Variable c_int '16'
_SIGSET_NWORDS = 16 # Variable c_ulong '16ul'
SCNxLEAST16 = 'hx' # Variable STRING '(const char*)"hx"'
FF_BUG_QPEL_CHROMA2 = 256 # Variable c_int '256'
MB_TYPE_INTRA_PCM = 4 # Variable c_int '4'
CODEC_FLAG_TRUNCATED = 65536 # Variable c_int '65536'
INT_FAST32_MAX = 9223372036854775807 # Variable c_long '9223372036854775807l'
PRIx8 = 'x' # Variable STRING '(const char*)"x"'
LONG_LONG_MIN = -9223372036854775808 # Variable c_longlong '-0x08000000000000000ll'
LIBPOSTPROC_VERSION_MINOR = 3 # Variable c_int '3'
FF_CMP_ZERO = 7 # Variable c_int '7'
EIDRM = 43 # Variable c_int '43'
FF_PROFILE_DTS_96_24 = 40 # Variable c_int '40'
INT_MIN = -2147483648 # Variable c_int '-0x00000000080000000'
EOVERFLOW = 75 # Variable c_int '75'
MQ_PRIO_MAX = 32768 # Variable c_int '32768'
FF_IDCT_SH4 = 9 # Variable c_int '9'
AVINDEX_KEYFRAME = 1 # Variable c_int '1'
AV_CODEC_PROP_BITMAP_SUB = 65536 # Variable c_int '65536'
AVERROR_BUG2 = -541545794 # Variable c_int '-0x00000000020475542'
FF_DEBUG_SKIP = 128 # Variable c_int '128'
__FILE_defined = 1 # Variable c_int '1'
FF_DEFAULT_QUANT_BIAS = 999999 # Variable c_int '999999'
SCNoPTR = 'lo' # Variable STRING '(const char*)"lo"'
EKEYREVOKED = 128 # Variable c_int '128'
PRIdLEAST8 = 'd' # Variable STRING '(const char*)"d"'
FF_CODER_TYPE_RAW = 2 # Variable c_int '2'
__errno_location = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].__errno_location
__errno_location.restype = POINTER(c_int)
__errno_location.argtypes = []
acos = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].acos
acos.restype = c_double
acos.argtypes = [c_double]
acosl = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].acosl
acosl.restype = c_longdouble
acosl.argtypes = [c_longdouble]
acosf = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].acosf
acosf.restype = c_float
acosf.argtypes = [c_float]
asinf = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].asinf
asinf.restype = c_float
asinf.argtypes = [c_float]
asin = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].asin
asin.restype = c_double
asin.argtypes = [c_double]
asinl = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].asinl
asinl.restype = c_longdouble
asinl.argtypes = [c_longdouble]
atanf = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].atanf
atanf.restype = c_float
atanf.argtypes = [c_float]
atan = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].atan
atan.restype = c_double
atan.argtypes = [c_double]
atanl = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].atanl
atanl.restype = c_longdouble
atanl.argtypes = [c_longdouble]
atan2f = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].atan2f
atan2f.restype = c_float
atan2f.argtypes = [c_float, c_float]
atan2l = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].atan2l
atan2l.restype = c_longdouble
atan2l.argtypes = [c_longdouble, c_longdouble]
atan2 = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].atan2
atan2.restype = c_double
atan2.argtypes = [c_double, c_double]
cos = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].cos
cos.restype = c_double
cos.argtypes = [c_double]
cosf = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].cosf
cosf.restype = c_float
cosf.argtypes = [c_float]
cosl = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].cosl
cosl.restype = c_longdouble
cosl.argtypes = [c_longdouble]
sinl = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].sinl
sinl.restype = c_longdouble
sinl.argtypes = [c_longdouble]
sin = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].sin
sin.restype = c_double
sin.argtypes = [c_double]
sinf = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].sinf
sinf.restype = c_float
sinf.argtypes = [c_float]
tanf = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].tanf
tanf.restype = c_float
tanf.argtypes = [c_float]
tan = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].tan
tan.restype = c_double
tan.argtypes = [c_double]
tanl = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].tanl
tanl.restype = c_longdouble
tanl.argtypes = [c_longdouble]
coshl = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].coshl
coshl.restype = c_longdouble
coshl.argtypes = [c_longdouble]
coshf = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].coshf
coshf.restype = c_float
coshf.argtypes = [c_float]
cosh = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].cosh
cosh.restype = c_double
cosh.argtypes = [c_double]
sinh = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].sinh
sinh.restype = c_double
sinh.argtypes = [c_double]
sinhf = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].sinhf
sinhf.restype = c_float
sinhf.argtypes = [c_float]
sinhl = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].sinhl
sinhl.restype = c_longdouble
sinhl.argtypes = [c_longdouble]
tanh = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].tanh
tanh.restype = c_double
tanh.argtypes = [c_double]
tanhf = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].tanhf
tanhf.restype = c_float
tanhf.argtypes = [c_float]
tanhl = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].tanhl
tanhl.restype = c_longdouble
tanhl.argtypes = [c_longdouble]
sincosf = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].sincosf
sincosf.restype = None
sincosf.argtypes = [c_float, POINTER(c_float), POINTER(c_float)]
sincosl = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].sincosl
sincosl.restype = None
sincosl.argtypes = [c_longdouble, POINTER(c_longdouble), POINTER(c_longdouble)]
sincos = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].sincos
sincos.restype = None
sincos.argtypes = [c_double, POINTER(c_double), POINTER(c_double)]
acoshf = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].acoshf
acoshf.restype = c_float
acoshf.argtypes = [c_float]
acoshl = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].acoshl
acoshl.restype = c_longdouble
acoshl.argtypes = [c_longdouble]
acosh = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].acosh
acosh.restype = c_double
acosh.argtypes = [c_double]
asinhf = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].asinhf
asinhf.restype = c_float
asinhf.argtypes = [c_float]
asinhl = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].asinhl
asinhl.restype = c_longdouble
asinhl.argtypes = [c_longdouble]
asinh = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].asinh
asinh.restype = c_double
asinh.argtypes = [c_double]
atanhf = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].atanhf
atanhf.restype = c_float
atanhf.argtypes = [c_float]
atanhl = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].atanhl
atanhl.restype = c_longdouble
atanhl.argtypes = [c_longdouble]
atanh = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].atanh
atanh.restype = c_double
atanh.argtypes = [c_double]
expf = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].expf
expf.restype = c_float
expf.argtypes = [c_float]
expl = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].expl
expl.restype = c_longdouble
expl.argtypes = [c_longdouble]
exp = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].exp
exp.restype = c_double
exp.argtypes = [c_double]
frexpl = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].frexpl
frexpl.restype = c_longdouble
frexpl.argtypes = [c_longdouble, POINTER(c_int)]
frexp = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].frexp
frexp.restype = c_double
frexp.argtypes = [c_double, POINTER(c_int)]
frexpf = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].frexpf
frexpf.restype = c_float
frexpf.argtypes = [c_float, POINTER(c_int)]
ldexp = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].ldexp
ldexp.restype = c_double
ldexp.argtypes = [c_double, c_int]
ldexpl = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].ldexpl
ldexpl.restype = c_longdouble
ldexpl.argtypes = [c_longdouble, c_int]
ldexpf = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].ldexpf
ldexpf.restype = c_float
ldexpf.argtypes = [c_float, c_int]
log = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].log
log.restype = c_double
log.argtypes = [c_double]
logf = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].logf
logf.restype = c_float
logf.argtypes = [c_float]
logl = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].logl
logl.restype = c_longdouble
logl.argtypes = [c_longdouble]
log10l = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].log10l
log10l.restype = c_longdouble
log10l.argtypes = [c_longdouble]
log10 = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].log10
log10.restype = c_double
log10.argtypes = [c_double]
log10f = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].log10f
log10f.restype = c_float
log10f.argtypes = [c_float]
modfl = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].modfl
modfl.restype = c_longdouble
modfl.argtypes = [c_longdouble, POINTER(c_longdouble)]
modff = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].modff
modff.restype = c_float
modff.argtypes = [c_float, POINTER(c_float)]
modf = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].modf
modf.restype = c_double
modf.argtypes = [c_double, POINTER(c_double)]
exp10l = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].exp10l
exp10l.restype = c_longdouble
exp10l.argtypes = [c_longdouble]
exp10f = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].exp10f
exp10f.restype = c_float
exp10f.argtypes = [c_float]
exp10 = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].exp10
exp10.restype = c_double
exp10.argtypes = [c_double]
pow10f = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].pow10f
pow10f.restype = c_float
pow10f.argtypes = [c_float]
pow10 = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].pow10
pow10.restype = c_double
pow10.argtypes = [c_double]
pow10l = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].pow10l
pow10l.restype = c_longdouble
pow10l.argtypes = [c_longdouble]
expm1 = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].expm1
expm1.restype = c_double
expm1.argtypes = [c_double]
expm1f = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].expm1f
expm1f.restype = c_float
expm1f.argtypes = [c_float]
expm1l = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].expm1l
expm1l.restype = c_longdouble
expm1l.argtypes = [c_longdouble]
log1pf = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].log1pf
log1pf.restype = c_float
log1pf.argtypes = [c_float]
log1p = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].log1p
log1p.restype = c_double
log1p.argtypes = [c_double]
log1pl = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].log1pl
log1pl.restype = c_longdouble
log1pl.argtypes = [c_longdouble]
logbf = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].logbf
logbf.restype = c_float
logbf.argtypes = [c_float]
logbl = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].logbl
logbl.restype = c_longdouble
logbl.argtypes = [c_longdouble]
logb = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].logb
logb.restype = c_double
logb.argtypes = [c_double]
exp2l = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].exp2l
exp2l.restype = c_longdouble
exp2l.argtypes = [c_longdouble]
exp2 = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].exp2
exp2.restype = c_double
exp2.argtypes = [c_double]
exp2f = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].exp2f
exp2f.restype = c_float
exp2f.argtypes = [c_float]
log2 = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].log2
log2.restype = c_double
log2.argtypes = [c_double]
log2f = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].log2f
log2f.restype = c_float
log2f.argtypes = [c_float]
log2l = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].log2l
log2l.restype = c_longdouble
log2l.argtypes = [c_longdouble]
powl = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].powl
powl.restype = c_longdouble
powl.argtypes = [c_longdouble, c_longdouble]
pow = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].pow
pow.restype = c_double
pow.argtypes = [c_double, c_double]
powf = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].powf
powf.restype = c_float
powf.argtypes = [c_float, c_float]
sqrtl = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].sqrtl
sqrtl.restype = c_longdouble
sqrtl.argtypes = [c_longdouble]
sqrtf = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].sqrtf
sqrtf.restype = c_float
sqrtf.argtypes = [c_float]
sqrt = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].sqrt
sqrt.restype = c_double
sqrt.argtypes = [c_double]
hypotl = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].hypotl
hypotl.restype = c_longdouble
hypotl.argtypes = [c_longdouble, c_longdouble]
hypotf = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].hypotf
hypotf.restype = c_float
hypotf.argtypes = [c_float, c_float]
hypot = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].hypot
hypot.restype = c_double
hypot.argtypes = [c_double, c_double]
cbrtl = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].cbrtl
cbrtl.restype = c_longdouble
cbrtl.argtypes = [c_longdouble]
cbrtf = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].cbrtf
cbrtf.restype = c_float
cbrtf.argtypes = [c_float]
cbrt = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].cbrt
cbrt.restype = c_double
cbrt.argtypes = [c_double]
ceilf = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].ceilf
ceilf.restype = c_float
ceilf.argtypes = [c_float]
ceil = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].ceil
ceil.restype = c_double
ceil.argtypes = [c_double]
ceill = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].ceill
ceill.restype = c_longdouble
ceill.argtypes = [c_longdouble]
fabsf = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].fabsf
fabsf.restype = c_float
fabsf.argtypes = [c_float]
fabsl = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].fabsl
fabsl.restype = c_longdouble
fabsl.argtypes = [c_longdouble]
fabs = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].fabs
fabs.restype = c_double
fabs.argtypes = [c_double]
floor = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].floor
floor.restype = c_double
floor.argtypes = [c_double]
floorf = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].floorf
floorf.restype = c_float
floorf.argtypes = [c_float]
floorl = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].floorl
floorl.restype = c_longdouble
floorl.argtypes = [c_longdouble]
fmodl = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].fmodl
fmodl.restype = c_longdouble
fmodl.argtypes = [c_longdouble, c_longdouble]
fmod = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].fmod
fmod.restype = c_double
fmod.argtypes = [c_double, c_double]
fmodf = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].fmodf
fmodf.restype = c_float
fmodf.argtypes = [c_float, c_float]
__isinfl = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].__isinfl
__isinfl.restype = c_int
__isinfl.argtypes = [c_longdouble]
__isinf = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].__isinf
__isinf.restype = c_int
__isinf.argtypes = [c_double]
__isinff = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].__isinff
__isinff.restype = c_int
__isinff.argtypes = [c_float]
__finitel = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].__finitel
__finitel.restype = c_int
__finitel.argtypes = [c_longdouble]
__finite = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].__finite
__finite.restype = c_int
__finite.argtypes = [c_double]
__finitef = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].__finitef
__finitef.restype = c_int
__finitef.argtypes = [c_float]
isinff = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].isinff
isinff.restype = c_int
isinff.argtypes = [c_float]
isinfl = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].isinfl
isinfl.restype = c_int
isinfl.argtypes = [c_longdouble]
isinf = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].isinf
isinf.restype = c_int
isinf.argtypes = [c_double]
finitel = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].finitel
finitel.restype = c_int
finitel.argtypes = [c_longdouble]
finitef = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].finitef
finitef.restype = c_int
finitef.argtypes = [c_float]
finite = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].finite
finite.restype = c_int
finite.argtypes = [c_double]
drem = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].drem
drem.restype = c_double
drem.argtypes = [c_double, c_double]
dreml = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].dreml
dreml.restype = c_longdouble
dreml.argtypes = [c_longdouble, c_longdouble]
dremf = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].dremf
dremf.restype = c_float
dremf.argtypes = [c_float, c_float]
significandl = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].significandl
significandl.restype = c_longdouble
significandl.argtypes = [c_longdouble]
significand = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].significand
significand.restype = c_double
significand.argtypes = [c_double]
significandf = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].significandf
significandf.restype = c_float
significandf.argtypes = [c_float]
copysignf = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].copysignf
copysignf.restype = c_float
copysignf.argtypes = [c_float, c_float]
copysign = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].copysign
copysign.restype = c_double
copysign.argtypes = [c_double, c_double]
copysignl = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].copysignl
copysignl.restype = c_longdouble
copysignl.argtypes = [c_longdouble, c_longdouble]
nanl = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].nanl
nanl.restype = c_longdouble
nanl.argtypes = [STRING]
nanf = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].nanf
nanf.restype = c_float
nanf.argtypes = [STRING]
nan = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].nan
nan.restype = c_double
nan.argtypes = [STRING]
__isnan = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].__isnan
__isnan.restype = c_int
__isnan.argtypes = [c_double]
__isnanl = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].__isnanl
__isnanl.restype = c_int
__isnanl.argtypes = [c_longdouble]
__isnanf = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].__isnanf
__isnanf.restype = c_int
__isnanf.argtypes = [c_float]
isnanf = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].isnanf
isnanf.restype = c_int
isnanf.argtypes = [c_float]
isnanl = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].isnanl
isnanl.restype = c_int
isnanl.argtypes = [c_longdouble]
isnan = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].isnan
isnan.restype = c_int
isnan.argtypes = [c_double]
j0f = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].j0f
j0f.restype = c_float
j0f.argtypes = [c_float]
j0l = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].j0l
j0l.restype = c_longdouble
j0l.argtypes = [c_longdouble]
j0 = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].j0
j0.restype = c_double
j0.argtypes = [c_double]
j1l = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].j1l
j1l.restype = c_longdouble
j1l.argtypes = [c_longdouble]
j1 = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].j1
j1.restype = c_double
j1.argtypes = [c_double]
j1f = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].j1f
j1f.restype = c_float
j1f.argtypes = [c_float]
jnf = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].jnf
jnf.restype = c_float
jnf.argtypes = [c_int, c_float]
jnl = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].jnl
jnl.restype = c_longdouble
jnl.argtypes = [c_int, c_longdouble]
jn = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].jn
jn.restype = c_double
jn.argtypes = [c_int, c_double]
y0 = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].y0
y0.restype = c_double
y0.argtypes = [c_double]
y0f = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].y0f
y0f.restype = c_float
y0f.argtypes = [c_float]
y0l = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].y0l
y0l.restype = c_longdouble
y0l.argtypes = [c_longdouble]
y1f = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].y1f
y1f.restype = c_float
y1f.argtypes = [c_float]
y1 = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].y1
y1.restype = c_double
y1.argtypes = [c_double]
y1l = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].y1l
y1l.restype = c_longdouble
y1l.argtypes = [c_longdouble]
ynf = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].ynf
ynf.restype = c_float
ynf.argtypes = [c_int, c_float]
yn = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].yn
yn.restype = c_double
yn.argtypes = [c_int, c_double]
ynl = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].ynl
ynl.restype = c_longdouble
ynl.argtypes = [c_int, c_longdouble]
erf = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].erf
erf.restype = c_double
erf.argtypes = [c_double]
erfl = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].erfl
erfl.restype = c_longdouble
erfl.argtypes = [c_longdouble]
erff = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].erff
erff.restype = c_float
erff.argtypes = [c_float]
erfc = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].erfc
erfc.restype = c_double
erfc.argtypes = [c_double]
erfcf = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].erfcf
erfcf.restype = c_float
erfcf.argtypes = [c_float]
erfcl = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].erfcl
erfcl.restype = c_longdouble
erfcl.argtypes = [c_longdouble]
lgammaf = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].lgammaf
lgammaf.restype = c_float
lgammaf.argtypes = [c_float]
lgamma = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].lgamma
lgamma.restype = c_double
lgamma.argtypes = [c_double]
lgammal = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].lgammal
lgammal.restype = c_longdouble
lgammal.argtypes = [c_longdouble]
tgamma = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].tgamma
tgamma.restype = c_double
tgamma.argtypes = [c_double]
tgammaf = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].tgammaf
tgammaf.restype = c_float
tgammaf.argtypes = [c_float]
tgammal = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].tgammal
tgammal.restype = c_longdouble
tgammal.argtypes = [c_longdouble]
gammaf = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].gammaf
gammaf.restype = c_float
gammaf.argtypes = [c_float]
gammal = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].gammal
gammal.restype = c_longdouble
gammal.argtypes = [c_longdouble]
gamma = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].gamma
gamma.restype = c_double
gamma.argtypes = [c_double]
lgamma_r = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].lgamma_r
lgamma_r.restype = c_double
lgamma_r.argtypes = [c_double, POINTER(c_int)]
lgammal_r = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].lgammal_r
lgammal_r.restype = c_longdouble
lgammal_r.argtypes = [c_longdouble, POINTER(c_int)]
lgammaf_r = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].lgammaf_r
lgammaf_r.restype = c_float
lgammaf_r.argtypes = [c_float, POINTER(c_int)]
rint = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].rint
rint.restype = c_double
rint.argtypes = [c_double]
rintl = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].rintl
rintl.restype = c_longdouble
rintl.argtypes = [c_longdouble]
rintf = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].rintf
rintf.restype = c_float
rintf.argtypes = [c_float]
nextafter = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].nextafter
nextafter.restype = c_double
nextafter.argtypes = [c_double, c_double]
nextafterl = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].nextafterl
nextafterl.restype = c_longdouble
nextafterl.argtypes = [c_longdouble, c_longdouble]
nextafterf = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].nextafterf
nextafterf.restype = c_float
nextafterf.argtypes = [c_float, c_float]
nexttowardf = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].nexttowardf
nexttowardf.restype = c_float
nexttowardf.argtypes = [c_float, c_longdouble]
nexttowardl = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].nexttowardl
nexttowardl.restype = c_longdouble
nexttowardl.argtypes = [c_longdouble, c_longdouble]
nexttoward = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].nexttoward
nexttoward.restype = c_double
nexttoward.argtypes = [c_double, c_longdouble]
remainderl = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].remainderl
remainderl.restype = c_longdouble
remainderl.argtypes = [c_longdouble, c_longdouble]
remainderf = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].remainderf
remainderf.restype = c_float
remainderf.argtypes = [c_float, c_float]
remainder = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].remainder
remainder.restype = c_double
remainder.argtypes = [c_double, c_double]
scalbnl = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].scalbnl
scalbnl.restype = c_longdouble
scalbnl.argtypes = [c_longdouble, c_int]
scalbn = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].scalbn
scalbn.restype = c_double
scalbn.argtypes = [c_double, c_int]
scalbnf = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].scalbnf
scalbnf.restype = c_float
scalbnf.argtypes = [c_float, c_int]
ilogb = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].ilogb
ilogb.restype = c_int
ilogb.argtypes = [c_double]
ilogbf = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].ilogbf
ilogbf.restype = c_int
ilogbf.argtypes = [c_float]
ilogbl = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].ilogbl
ilogbl.restype = c_int
ilogbl.argtypes = [c_longdouble]
scalblnf = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].scalblnf
scalblnf.restype = c_float
scalblnf.argtypes = [c_float, c_long]
scalblnl = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].scalblnl
scalblnl.restype = c_longdouble
scalblnl.argtypes = [c_longdouble, c_long]
scalbln = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].scalbln
scalbln.restype = c_double
scalbln.argtypes = [c_double, c_long]
nearbyint = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].nearbyint
nearbyint.restype = c_double
nearbyint.argtypes = [c_double]
nearbyintl = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].nearbyintl
nearbyintl.restype = c_longdouble
nearbyintl.argtypes = [c_longdouble]
nearbyintf = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].nearbyintf
nearbyintf.restype = c_float
nearbyintf.argtypes = [c_float]
roundf = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].roundf
roundf.restype = c_float
roundf.argtypes = [c_float]
round = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].round
round.restype = c_double
round.argtypes = [c_double]
roundl = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].roundl
roundl.restype = c_longdouble
roundl.argtypes = [c_longdouble]
truncl = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].truncl
truncl.restype = c_longdouble
truncl.argtypes = [c_longdouble]
trunc = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].trunc
trunc.restype = c_double
trunc.argtypes = [c_double]
truncf = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].truncf
truncf.restype = c_float
truncf.argtypes = [c_float]
remquol = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].remquol
remquol.restype = c_longdouble
remquol.argtypes = [c_longdouble, c_longdouble, POINTER(c_int)]
remquo = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].remquo
remquo.restype = c_double
remquo.argtypes = [c_double, c_double, POINTER(c_int)]
remquof = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].remquof
remquof.restype = c_float
remquof.argtypes = [c_float, c_float, POINTER(c_int)]
lrint = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].lrint
lrint.restype = c_long
lrint.argtypes = [c_double]
lrintl = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].lrintl
lrintl.restype = c_long
lrintl.argtypes = [c_longdouble]
lrintf = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].lrintf
lrintf.restype = c_long
lrintf.argtypes = [c_float]
llrint = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].llrint
llrint.restype = c_longlong
llrint.argtypes = [c_double]
llrintl = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].llrintl
llrintl.restype = c_longlong
llrintl.argtypes = [c_longdouble]
llrintf = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].llrintf
llrintf.restype = c_longlong
llrintf.argtypes = [c_float]
lround = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].lround
lround.restype = c_long
lround.argtypes = [c_double]
lroundf = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].lroundf
lroundf.restype = c_long
lroundf.argtypes = [c_float]
lroundl = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].lroundl
lroundl.restype = c_long
lroundl.argtypes = [c_longdouble]
llround = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].llround
llround.restype = c_longlong
llround.argtypes = [c_double]
llroundf = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].llroundf
llroundf.restype = c_longlong
llroundf.argtypes = [c_float]
llroundl = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].llroundl
llroundl.restype = c_longlong
llroundl.argtypes = [c_longdouble]
fdimf = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].fdimf
fdimf.restype = c_float
fdimf.argtypes = [c_float, c_float]
fdiml = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].fdiml
fdiml.restype = c_longdouble
fdiml.argtypes = [c_longdouble, c_longdouble]
fdim = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].fdim
fdim.restype = c_double
fdim.argtypes = [c_double, c_double]
fmax = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].fmax
fmax.restype = c_double
fmax.argtypes = [c_double, c_double]
fmaxf = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].fmaxf
fmaxf.restype = c_float
fmaxf.argtypes = [c_float, c_float]
fmaxl = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].fmaxl
fmaxl.restype = c_longdouble
fmaxl.argtypes = [c_longdouble, c_longdouble]
fminf = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].fminf
fminf.restype = c_float
fminf.argtypes = [c_float, c_float]
fmin = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].fmin
fmin.restype = c_double
fmin.argtypes = [c_double, c_double]
fminl = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].fminl
fminl.restype = c_longdouble
fminl.argtypes = [c_longdouble, c_longdouble]
__fpclassify = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].__fpclassify
__fpclassify.restype = c_int
__fpclassify.argtypes = [c_double]
__fpclassifyl = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].__fpclassifyl
__fpclassifyl.restype = c_int
__fpclassifyl.argtypes = [c_longdouble]
__fpclassifyf = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].__fpclassifyf
__fpclassifyf.restype = c_int
__fpclassifyf.argtypes = [c_float]
fma = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].fma
fma.restype = c_double
fma.argtypes = [c_double, c_double, c_double]
fmal = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].fmal
fmal.restype = c_longdouble
fmal.argtypes = [c_longdouble, c_longdouble, c_longdouble]
fmaf = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].fmaf
fmaf.restype = c_float
fmaf.argtypes = [c_float, c_float, c_float]
__issignaling = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].__issignaling
__issignaling.restype = c_int
__issignaling.argtypes = [c_double]
__issignalingl = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].__issignalingl
__issignalingl.restype = c_int
__issignalingl.argtypes = [c_longdouble]
__issignalingf = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].__issignalingf
__issignalingf.restype = c_int
__issignalingf.argtypes = [c_float]
scalbf = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].scalbf
scalbf.restype = c_float
scalbf.argtypes = [c_float, c_float]
scalb = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].scalb
scalb.restype = c_double
scalb.argtypes = [c_double, c_double]
scalbl = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].scalbl
scalbl.restype = c_longdouble
scalbl.argtypes = [c_longdouble, c_longdouble]
float_t = c_float
double_t = c_double
__signbitf = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].__signbitf
__signbitf.restype = c_int
__signbitf.argtypes = [c_float]
__signbit = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].__signbit
__signbit.restype = c_int
__signbit.argtypes = [c_double]
__signbitl = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].__signbitl
__signbitl.restype = c_int
__signbitl.argtypes = [c_longdouble]
pthread_t = c_ulong
class pthread_attr_t(Union):
    pass
pthread_attr_t._fields_ = [
    ('__size', c_char * 56),
    ('__align', c_long),
]
class __pthread_internal_list(Structure):
    pass
__pthread_internal_list._fields_ = [
    ('__prev', POINTER(__pthread_internal_list)),
    ('__next', POINTER(__pthread_internal_list)),
]
__pthread_list_t = __pthread_internal_list
class __pthread_mutex_s(Structure):
    pass
__pthread_mutex_s._fields_ = [
    ('__lock', c_int),
    ('__count', c_uint),
    ('__owner', c_int),
    ('__nusers', c_uint),
    ('__kind', c_int),
    ('__spins', c_short),
    ('__elision', c_short),
    ('__list', __pthread_list_t),
]
class pthread_mutex_t(Union):
    pass
pthread_mutex_t._fields_ = [
    ('__data', __pthread_mutex_s),
    ('__size', c_char * 40),
    ('__align', c_long),
]
class pthread_mutexattr_t(Union):
    pass
pthread_mutexattr_t._fields_ = [
    ('__size', c_char * 4),
    ('__align', c_int),
]
class N14pthread_cond_t4DOT_20E(Structure):
    pass
N14pthread_cond_t4DOT_20E._fields_ = [
    ('__lock', c_int),
    ('__futex', c_uint),
    ('__total_seq', c_ulonglong),
    ('__wakeup_seq', c_ulonglong),
    ('__woken_seq', c_ulonglong),
    ('__mutex', c_void_p),
    ('__nwaiters', c_uint),
    ('__broadcast_seq', c_uint),
]
class pthread_cond_t(Union):
    pass
pthread_cond_t._fields_ = [
    ('__data', N14pthread_cond_t4DOT_20E),
    ('__size', c_char * 48),
    ('__align', c_longlong),
]
class pthread_condattr_t(Union):
    pass
pthread_condattr_t._fields_ = [
    ('__size', c_char * 4),
    ('__align', c_int),
]
pthread_key_t = c_uint
pthread_once_t = c_int
class N16pthread_rwlock_t4DOT_23E(Structure):
    pass
N16pthread_rwlock_t4DOT_23E._fields_ = [
    ('__lock', c_int),
    ('__nr_readers', c_uint),
    ('__readers_wakeup', c_uint),
    ('__writer_wakeup', c_uint),
    ('__nr_readers_queued', c_uint),
    ('__nr_writers_queued', c_uint),
    ('__writer', c_int),
    ('__shared', c_int),
    ('__pad1', c_ulong),
    ('__pad2', c_ulong),
    ('__flags', c_uint),
]
class pthread_rwlock_t(Union):
    pass
pthread_rwlock_t._fields_ = [
    ('__data', N16pthread_rwlock_t4DOT_23E),
    ('__size', c_char * 56),
    ('__align', c_long),
]
class pthread_rwlockattr_t(Union):
    pass
pthread_rwlockattr_t._fields_ = [
    ('__size', c_char * 8),
    ('__align', c_long),
]
pthread_spinlock_t = c_int
class pthread_barrier_t(Union):
    pass
pthread_barrier_t._fields_ = [
    ('__size', c_char * 32),
    ('__align', c_long),
]
class pthread_barrierattr_t(Union):
    pass
pthread_barrierattr_t._fields_ = [
    ('__size', c_char * 4),
    ('__align', c_int),
]
__fdelt_chk = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].__fdelt_chk
__fdelt_chk.restype = c_long
__fdelt_chk.argtypes = [c_long]
__fdelt_warn = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].__fdelt_warn
__fdelt_warn.restype = c_long
__fdelt_warn.argtypes = [c_long]
__sig_atomic_t = c_int
class __sigset_t(Structure):
    pass
__sigset_t._fields_ = [
    ('__val', c_ulong * 16),
]
getchar = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].getchar
getchar.restype = c_int
getchar.argtypes = []
FILE = _IO_FILE
fgetc_unlocked = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].fgetc_unlocked
fgetc_unlocked.restype = c_int
fgetc_unlocked.argtypes = [POINTER(FILE)]
getc_unlocked = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].getc_unlocked
getc_unlocked.restype = c_int
getc_unlocked.argtypes = [POINTER(FILE)]
getchar_unlocked = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].getchar_unlocked
getchar_unlocked.restype = c_int
getchar_unlocked.argtypes = []
putchar = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].putchar
putchar.restype = c_int
putchar.argtypes = [c_int]
fputc_unlocked = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].fputc_unlocked
fputc_unlocked.restype = c_int
fputc_unlocked.argtypes = [c_int, POINTER(FILE)]
putc_unlocked = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].putc_unlocked
putc_unlocked.restype = c_int
putc_unlocked.argtypes = [c_int, POINTER(FILE)]
putchar_unlocked = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].putchar_unlocked
putchar_unlocked.restype = c_int
putchar_unlocked.argtypes = [c_int]
getline = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].getline
getline.restype = __ssize_t
getline.argtypes = [POINTER(STRING), POINTER(size_t), POINTER(FILE)]
feof_unlocked = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].feof_unlocked
feof_unlocked.restype = c_int
feof_unlocked.argtypes = [POINTER(FILE)]
ferror_unlocked = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].ferror_unlocked
ferror_unlocked.restype = c_int
ferror_unlocked.argtypes = [POINTER(FILE)]
__sprintf_chk = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].__sprintf_chk
__sprintf_chk.restype = c_int
__sprintf_chk.argtypes = [STRING, c_int, size_t, STRING]
__vsprintf_chk = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].__vsprintf_chk
__vsprintf_chk.restype = c_int
__vsprintf_chk.argtypes = [STRING, c_int, size_t, STRING, POINTER(__va_list_tag)]
sprintf = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].sprintf
sprintf.restype = c_int
sprintf.argtypes = [STRING, STRING]
vsprintf = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].vsprintf
vsprintf.restype = c_int
vsprintf.argtypes = [STRING, STRING, POINTER(__va_list_tag)]
__snprintf_chk = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].__snprintf_chk
__snprintf_chk.restype = c_int
__snprintf_chk.argtypes = [STRING, size_t, c_int, size_t, STRING]
__vsnprintf_chk = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].__vsnprintf_chk
__vsnprintf_chk.restype = c_int
__vsnprintf_chk.argtypes = [STRING, size_t, c_int, size_t, STRING, POINTER(__va_list_tag)]
snprintf = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].snprintf
snprintf.restype = c_int
snprintf.argtypes = [STRING, size_t, STRING]
vsnprintf = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].vsnprintf
vsnprintf.restype = c_int
vsnprintf.argtypes = [STRING, size_t, STRING, POINTER(__va_list_tag)]
__fprintf_chk = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].__fprintf_chk
__fprintf_chk.restype = c_int
__fprintf_chk.argtypes = [POINTER(FILE), c_int, STRING]
__printf_chk = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].__printf_chk
__printf_chk.restype = c_int
__printf_chk.argtypes = [c_int, STRING]
__vfprintf_chk = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].__vfprintf_chk
__vfprintf_chk.restype = c_int
__vfprintf_chk.argtypes = [POINTER(FILE), c_int, STRING, POINTER(__va_list_tag)]
__vprintf_chk = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].__vprintf_chk
__vprintf_chk.restype = c_int
__vprintf_chk.argtypes = [c_int, STRING, POINTER(__va_list_tag)]
fprintf = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].fprintf
fprintf.restype = c_int
fprintf.argtypes = [POINTER(FILE), STRING]
printf = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].printf
printf.restype = c_int
printf.argtypes = [STRING]
vprintf = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].vprintf
vprintf.restype = c_int
vprintf.argtypes = [STRING, POINTER(__va_list_tag)]
vfprintf = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].vfprintf
vfprintf.restype = c_int
vfprintf.argtypes = [POINTER(FILE), STRING, POINTER(__va_list_tag)]
__dprintf_chk = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].__dprintf_chk
__dprintf_chk.restype = c_int
__dprintf_chk.argtypes = [c_int, c_int, STRING]
__vdprintf_chk = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].__vdprintf_chk
__vdprintf_chk.restype = c_int
__vdprintf_chk.argtypes = [c_int, c_int, STRING, POINTER(__va_list_tag)]
dprintf = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].dprintf
dprintf.restype = c_int
dprintf.argtypes = [c_int, STRING]
vdprintf = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].vdprintf
vdprintf.restype = c_int
vdprintf.argtypes = [c_int, STRING, POINTER(__va_list_tag)]
__asprintf_chk = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].__asprintf_chk
__asprintf_chk.restype = c_int
__asprintf_chk.argtypes = [POINTER(STRING), c_int, STRING]
__vasprintf_chk = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].__vasprintf_chk
__vasprintf_chk.restype = c_int
__vasprintf_chk.argtypes = [POINTER(STRING), c_int, STRING, POINTER(__va_list_tag)]
class obstack(Structure):
    pass
__obstack_printf_chk = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].__obstack_printf_chk
__obstack_printf_chk.restype = c_int
__obstack_printf_chk.argtypes = [POINTER(obstack), c_int, STRING]
__obstack_vprintf_chk = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].__obstack_vprintf_chk
__obstack_vprintf_chk.restype = c_int
__obstack_vprintf_chk.argtypes = [POINTER(obstack), c_int, STRING, POINTER(__va_list_tag)]
asprintf = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].asprintf
asprintf.restype = c_int
asprintf.argtypes = [POINTER(STRING), STRING]
__asprintf = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].__asprintf
__asprintf.restype = c_int
__asprintf.argtypes = [POINTER(STRING), STRING]
obstack_printf = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].obstack_printf
obstack_printf.restype = c_int
obstack_printf.argtypes = [POINTER(obstack), STRING]
vasprintf = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].vasprintf
vasprintf.restype = c_int
vasprintf.argtypes = [POINTER(STRING), STRING, POINTER(__va_list_tag)]
obstack_vprintf = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].obstack_vprintf
obstack_vprintf.restype = c_int
obstack_vprintf.argtypes = [POINTER(obstack), STRING, POINTER(__va_list_tag)]
__fgets_chk = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].__fgets_chk
__fgets_chk.restype = STRING
__fgets_chk.argtypes = [STRING, size_t, c_int, POINTER(FILE)]
fgets = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].fgets
fgets.restype = STRING
fgets.argtypes = [STRING, c_int, POINTER(FILE)]
__fread_chk = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].__fread_chk
__fread_chk.restype = size_t
__fread_chk.argtypes = [c_void_p, size_t, size_t, size_t, POINTER(FILE)]
fread = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].fread
fread.restype = size_t
fread.argtypes = [c_void_p, size_t, size_t, POINTER(FILE)]
__fgets_unlocked_chk = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].__fgets_unlocked_chk
__fgets_unlocked_chk.restype = STRING
__fgets_unlocked_chk.argtypes = [STRING, size_t, c_int, POINTER(FILE)]
fgets_unlocked = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].fgets_unlocked
fgets_unlocked.restype = STRING
fgets_unlocked.argtypes = [STRING, c_int, POINTER(FILE)]
__fread_unlocked_chk = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].__fread_unlocked_chk
__fread_unlocked_chk.restype = size_t
__fread_unlocked_chk.argtypes = [c_void_p, size_t, size_t, size_t, POINTER(FILE)]
fread_unlocked = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].fread_unlocked
fread_unlocked.restype = size_t
fread_unlocked.argtypes = [c_void_p, size_t, size_t, POINTER(FILE)]
__compar_fn_t = CFUNCTYPE(c_int, c_void_p, c_void_p)
bsearch = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].bsearch
bsearch.restype = c_void_p
bsearch.argtypes = [c_void_p, c_void_p, size_t, size_t, __compar_fn_t]
atof = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].atof
atof.restype = c_double
atof.argtypes = [STRING]
__realpath_chk = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].__realpath_chk
__realpath_chk.restype = STRING
__realpath_chk.argtypes = [STRING, STRING, size_t]
realpath = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].realpath
realpath.restype = STRING
realpath.argtypes = [STRING, STRING]
__ptsname_r_chk = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].__ptsname_r_chk
__ptsname_r_chk.restype = c_int
__ptsname_r_chk.argtypes = [c_int, STRING, size_t, size_t]
ptsname_r = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].ptsname_r
ptsname_r.restype = c_int
ptsname_r.argtypes = [c_int, STRING, size_t]
__wctomb_chk = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].__wctomb_chk
__wctomb_chk.restype = c_int
__wctomb_chk.argtypes = [STRING, c_wchar, size_t]
wctomb = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].wctomb
wctomb.restype = c_int
wctomb.argtypes = [STRING, c_wchar]
__mbstowcs_chk = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].__mbstowcs_chk
__mbstowcs_chk.restype = size_t
__mbstowcs_chk.argtypes = [WSTRING, STRING, size_t, size_t]
mbstowcs = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].mbstowcs
mbstowcs.restype = size_t
mbstowcs.argtypes = [WSTRING, STRING, size_t]
__wcstombs_chk = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].__wcstombs_chk
__wcstombs_chk.restype = size_t
__wcstombs_chk.argtypes = [STRING, WSTRING, size_t, size_t]
wcstombs = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].wcstombs
wcstombs.restype = size_t
wcstombs.argtypes = [STRING, WSTRING, size_t]
memcpy = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].memcpy
memcpy.restype = c_void_p
memcpy.argtypes = [c_void_p, c_void_p, size_t]
memmove = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].memmove
memmove.restype = c_void_p
memmove.argtypes = [c_void_p, c_void_p, size_t]
mempcpy = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].mempcpy
mempcpy.restype = c_void_p
mempcpy.argtypes = [c_void_p, c_void_p, size_t]
memset = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].memset
memset.restype = c_void_p
memset.argtypes = [c_void_p, c_int, size_t]
bcopy = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].bcopy
bcopy.restype = None
bcopy.argtypes = [c_void_p, c_void_p, size_t]
bzero = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].bzero
bzero.restype = None
bzero.argtypes = [c_void_p, size_t]
strcpy = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].strcpy
strcpy.restype = STRING
strcpy.argtypes = [STRING, STRING]
stpcpy = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].stpcpy
stpcpy.restype = STRING
stpcpy.argtypes = [STRING, STRING]
strncpy = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].strncpy
strncpy.restype = STRING
strncpy.argtypes = [STRING, STRING, size_t]
__stpncpy_chk = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].__stpncpy_chk
__stpncpy_chk.restype = STRING
__stpncpy_chk.argtypes = [STRING, STRING, size_t, size_t]
stpncpy = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].stpncpy
stpncpy.restype = STRING
stpncpy.argtypes = [STRING, STRING, size_t]
strcat = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].strcat
strcat.restype = STRING
strcat.argtypes = [STRING, STRING]
strncat = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].strncat
strncat.restype = STRING
strncat.argtypes = [STRING, STRING, size_t]
sys_nerr = (c_int).in_dll(_libraries['/usr/lib/ffmpeg2.8/libavcodec.so'], 'sys_nerr')
sys_errlist = (STRING * 0).in_dll(_libraries['/usr/lib/ffmpeg2.8/libavcodec.so'], 'sys_errlist')
_sys_nerr = (c_int).in_dll(_libraries['/usr/lib/ffmpeg2.8/libavcodec.so'], '_sys_nerr')
_sys_errlist = (STRING * 0).in_dll(_libraries['/usr/lib/ffmpeg2.8/libavcodec.so'], '_sys_errlist')
class timeval(Structure):
    pass
__time_t = c_long
__suseconds_t = c_long
timeval._fields_ = [
    ('tv_sec', __time_t),
    ('tv_usec', __suseconds_t),
]
__u_char = c_ubyte
__u_short = c_ushort
__u_int = c_uint
__u_long = c_ulong
__int8_t = c_byte
__uint8_t = c_ubyte
__int16_t = c_short
__uint16_t = c_ushort
__int32_t = c_int
__uint32_t = c_uint
__int64_t = c_long
__uint64_t = c_ulong
__quad_t = c_long
__u_quad_t = c_ulong
__dev_t = c_ulong
__gid_t = c_uint
__ino_t = c_ulong
__ino64_t = c_ulong
__mode_t = c_uint
__nlink_t = c_ulong
class __fsid_t(Structure):
    pass
__fsid_t._fields_ = [
    ('__val', c_int * 2),
]
__clock_t = c_long
__rlim_t = c_ulong
__rlim64_t = c_ulong
__id_t = c_uint
__useconds_t = c_uint
__daddr_t = c_int
__key_t = c_int
__clockid_t = c_int
__timer_t = c_void_p
__blksize_t = c_long
__blkcnt_t = c_long
__blkcnt64_t = c_long
__fsblkcnt_t = c_ulong
__fsblkcnt64_t = c_ulong
__fsfilcnt_t = c_ulong
__fsfilcnt64_t = c_ulong
__fsword_t = c_long
__syscall_slong_t = c_long
__syscall_ulong_t = c_ulong
__loff_t = __off64_t
__qaddr_t = POINTER(__quad_t)
__caddr_t = STRING
__intptr_t = c_long
__socklen_t = c_uint
class wait(Union):
    pass
class N4wait4DOT_10E(Structure):
    pass
N4wait4DOT_10E._fields_ = [
    ('__w_termsig', c_uint, 7),
    ('__w_coredump', c_uint, 1),
    ('__w_retcode', c_uint, 8),
    ('', c_uint, 16),
]
class N4wait4DOT_11E(Structure):
    pass
N4wait4DOT_11E._fields_ = [
    ('__w_stopval', c_uint, 8),
    ('__w_stopsig', c_uint, 8),
    ('', c_uint, 16),
]
wait._fields_ = [
    ('w_status', c_int),
    ('__wait_terminated', N4wait4DOT_10E),
    ('__wait_stopped', N4wait4DOT_11E),
]
program_invocation_name = (STRING).in_dll(_libraries['/usr/lib/ffmpeg2.8/libavcodec.so'], 'program_invocation_name')
program_invocation_short_name = (STRING).in_dll(_libraries['/usr/lib/ffmpeg2.8/libavcodec.so'], 'program_invocation_short_name')
error_t = c_int
class imaxdiv_t(Structure):
    pass
imaxdiv_t._fields_ = [
    ('quot', c_long),
    ('rem', c_long),
]
intmax_t = c_long
imaxabs = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].imaxabs
imaxabs.restype = intmax_t
imaxabs.argtypes = [intmax_t]
imaxdiv = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].imaxdiv
imaxdiv.restype = imaxdiv_t
imaxdiv.argtypes = [intmax_t, intmax_t]
__strtol_internal = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].__strtol_internal
__strtol_internal.restype = c_long
__strtol_internal.argtypes = [STRING, POINTER(STRING), c_int, c_int]
strtoimax = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].strtoimax
strtoimax.restype = intmax_t
strtoimax.argtypes = [STRING, POINTER(STRING), c_int]
__strtoul_internal = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].__strtoul_internal
__strtoul_internal.restype = c_ulong
__strtoul_internal.argtypes = [STRING, POINTER(STRING), c_int, c_int]
uintmax_t = c_ulong
strtoumax = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].strtoumax
strtoumax.restype = uintmax_t
strtoumax.argtypes = [STRING, POINTER(STRING), c_int]
__wcstol_internal = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].__wcstol_internal
__wcstol_internal.restype = c_long
__wcstol_internal.argtypes = [WSTRING, POINTER(WSTRING), c_int, c_int]
wcstoimax = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].wcstoimax
wcstoimax.restype = intmax_t
wcstoimax.argtypes = [WSTRING, POINTER(WSTRING), c_int]
__wcstoul_internal = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].__wcstoul_internal
__wcstoul_internal.restype = c_ulong
__wcstoul_internal.argtypes = [WSTRING, POINTER(WSTRING), c_int, c_int]
wcstoumax = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].wcstoumax
wcstoumax.restype = uintmax_t
wcstoumax.argtypes = [WSTRING, POINTER(WSTRING), c_int]

# values for enumeration 'AVCodecID'
AVCodecID = c_int # enum
class AVCodecDescriptor(Structure):
    pass

# values for enumeration 'AVMediaType'
AVMediaType = c_int # enum
AVCodecDescriptor._fields_ = [
    ('id', AVCodecID),
    ('type', AVMediaType),
    ('name', STRING),
    ('long_name', STRING),
    ('props', c_int),
]

# values for enumeration 'Motion_Est_ID'
Motion_Est_ID = c_int # enum

# values for enumeration 'AVDiscard'
AVDiscard = c_int # enum

# values for enumeration 'AVColorPrimaries'
AVColorPrimaries = c_int # enum

# values for enumeration 'AVColorTransferCharacteristic'
AVColorTransferCharacteristic = c_int # enum

# values for enumeration 'AVChromaLocation'
AVChromaLocation = c_int # enum

# values for enumeration 'AVAudioServiceType'
AVAudioServiceType = c_int # enum
class RcOverride(Structure):
    pass
RcOverride._fields_ = [
    ('start_frame', c_int),
    ('end_frame', c_int),
    ('qscale', c_int),
    ('quality_factor', c_float),
]
class AVPanScan(Structure):
    pass
int16_t = c_int16
AVPanScan._fields_ = [
    ('id', c_int),
    ('width', c_int),
    ('height', c_int),
    ('position', int16_t * 2 * 3),
]

# values for enumeration 'AVPacketSideDataType'
AVPacketSideDataType = c_int # enum
class AVPacket(Structure):
    pass
class AVBufferRef(Structure):
    pass
int64_t = c_int64
uint8_t = c_uint8
class N8AVPacket4DOT_28E(Structure):
    pass
AVPacket._fields_ = [
    ('buf', POINTER(AVBufferRef)),
    ('pts', int64_t),
    ('dts', int64_t),
    ('data', POINTER(uint8_t)),
    ('size', c_int),
    ('stream_index', c_int),
    ('flags', c_int),
    ('side_data', POINTER(N8AVPacket4DOT_28E)),
    ('side_data_elems', c_int),
    ('duration', c_int),
    ('destruct', CFUNCTYPE(None, POINTER(AVPacket))),
    ('priv', c_void_p),
    ('pos', int64_t),
    ('convergence_duration', int64_t),
]
N8AVPacket4DOT_28E._fields_ = [
    ('data', POINTER(uint8_t)),
    ('size', c_int),
    ('type', AVPacketSideDataType),
]

# values for enumeration 'AVSideDataParamChangeFlags'
AVSideDataParamChangeFlags = c_int # enum
class AVCodecInternal(Structure):
    pass
AVCodecInternal._fields_ = [
]

# values for enumeration 'AVFieldOrder'
AVFieldOrder = c_int # enum
class AVCodecContext(Structure):
    pass
class AVClass(Structure):
    pass
class AVCodec(Structure):
    pass
class AVRational(Structure):
    pass

# values for enumeration 'AVSampleFormat'
AVSampleFormat = c_int # enum
uint64_t = c_uint64
class AVProfile(Structure):
    pass
class AVCodecDefault(Structure):
    pass
class AVSubtitle(Structure):
    pass
uint16_t = c_uint16
uint32_t = c_uint32
class AVSubtitleRect(Structure):
    pass
AVSubtitle._fields_ = [
    ('format', uint16_t),
    ('start_display_time', uint32_t),
    ('end_display_time', uint32_t),
    ('num_rects', c_uint),
    ('rects', POINTER(POINTER(AVSubtitleRect))),
    ('pts', int64_t),
]
class AVFrame(Structure):
    pass
AVCodec._fields_ = [
    ('name', STRING),
    ('long_name', STRING),
    ('type', AVMediaType),
    ('id', AVCodecID),
    ('capabilities', c_int),
    ('supported_framerates', POINTER(AVRational)),
    ('pix_fmts', POINTER(AVPixelFormat)),
    ('supported_samplerates', POINTER(c_int)),
    ('sample_fmts', POINTER(AVSampleFormat)),
    ('channel_layouts', POINTER(uint64_t)),
    ('max_lowres', uint8_t),
    ('priv_class', POINTER(AVClass)),
    ('profiles', POINTER(AVProfile)),
    ('priv_data_size', c_int),
    ('next', POINTER(AVCodec)),
    ('init_thread_copy', CFUNCTYPE(c_int, POINTER(AVCodecContext))),
    ('update_thread_context', CFUNCTYPE(c_int, POINTER(AVCodecContext), POINTER(AVCodecContext))),
    ('defaults', POINTER(AVCodecDefault)),
    ('init_static_data', CFUNCTYPE(None, POINTER(AVCodec))),
    ('init', CFUNCTYPE(c_int, POINTER(AVCodecContext))),
    ('encode_sub', CFUNCTYPE(c_int, POINTER(AVCodecContext), POINTER(uint8_t), c_int, POINTER(AVSubtitle))),
    ('encode2', CFUNCTYPE(c_int, POINTER(AVCodecContext), POINTER(AVPacket), POINTER(AVFrame), POINTER(c_int))),
    ('decode', CFUNCTYPE(c_int, POINTER(AVCodecContext), c_void_p, POINTER(c_int), POINTER(AVPacket))),
    ('close', CFUNCTYPE(c_int, POINTER(AVCodecContext))),
    ('flush', CFUNCTYPE(None, POINTER(AVCodecContext))),
]
AVRational._fields_ = [
    ('num', c_int),
    ('den', c_int),
]

# values for enumeration 'AVColorSpace'
AVColorSpace = c_int # enum

# values for enumeration 'AVColorRange'
AVColorRange = c_int # enum
class AVHWAccel(Structure):
    pass
AVCodecContext._fields_ = [
    ('av_class', POINTER(AVClass)),
    ('log_level_offset', c_int),
    ('codec_type', AVMediaType),
    ('codec', POINTER(AVCodec)),
    ('codec_name', c_char * 32),
    ('codec_id', AVCodecID),
    ('codec_tag', c_uint),
    ('stream_codec_tag', c_uint),
    ('priv_data', c_void_p),
    ('internal', POINTER(AVCodecInternal)),
    ('opaque', c_void_p),
    ('bit_rate', c_int),
    ('bit_rate_tolerance', c_int),
    ('global_quality', c_int),
    ('compression_level', c_int),
    ('flags', c_int),
    ('flags2', c_int),
    ('extradata', POINTER(uint8_t)),
    ('extradata_size', c_int),
    ('time_base', AVRational),
    ('ticks_per_frame', c_int),
    ('delay', c_int),
    ('width', c_int),
    ('height', c_int),
    ('coded_width', c_int),
    ('coded_height', c_int),
    ('gop_size', c_int),
    ('pix_fmt', AVPixelFormat),
    ('me_method', c_int),
    ('draw_horiz_band', CFUNCTYPE(None, POINTER(AVCodecContext), POINTER(AVFrame), POINTER(c_int), c_int, c_int, c_int)),
    ('get_format', CFUNCTYPE(AVPixelFormat, POINTER(AVCodecContext), POINTER(AVPixelFormat))),
    ('max_b_frames', c_int),
    ('b_quant_factor', c_float),
    ('rc_strategy', c_int),
    ('b_frame_strategy', c_int),
    ('b_quant_offset', c_float),
    ('has_b_frames', c_int),
    ('mpeg_quant', c_int),
    ('i_quant_factor', c_float),
    ('i_quant_offset', c_float),
    ('lumi_masking', c_float),
    ('temporal_cplx_masking', c_float),
    ('spatial_cplx_masking', c_float),
    ('p_masking', c_float),
    ('dark_masking', c_float),
    ('slice_count', c_int),
    ('prediction_method', c_int),
    ('slice_offset', POINTER(c_int)),
    ('sample_aspect_ratio', AVRational),
    ('me_cmp', c_int),
    ('me_sub_cmp', c_int),
    ('mb_cmp', c_int),
    ('ildct_cmp', c_int),
    ('dia_size', c_int),
    ('last_predictor_count', c_int),
    ('pre_me', c_int),
    ('me_pre_cmp', c_int),
    ('pre_dia_size', c_int),
    ('me_subpel_quality', c_int),
    ('dtg_active_format', c_int),
    ('me_range', c_int),
    ('intra_quant_bias', c_int),
    ('inter_quant_bias', c_int),
    ('slice_flags', c_int),
    ('xvmc_acceleration', c_int),
    ('mb_decision', c_int),
    ('intra_matrix', POINTER(uint16_t)),
    ('inter_matrix', POINTER(uint16_t)),
    ('scenechange_threshold', c_int),
    ('noise_reduction', c_int),
    ('me_threshold', c_int),
    ('mb_threshold', c_int),
    ('intra_dc_precision', c_int),
    ('skip_top', c_int),
    ('skip_bottom', c_int),
    ('border_masking', c_float),
    ('mb_lmin', c_int),
    ('mb_lmax', c_int),
    ('me_penalty_compensation', c_int),
    ('bidir_refine', c_int),
    ('brd_scale', c_int),
    ('keyint_min', c_int),
    ('refs', c_int),
    ('chromaoffset', c_int),
    ('scenechange_factor', c_int),
    ('mv0_threshold', c_int),
    ('b_sensitivity', c_int),
    ('color_primaries', AVColorPrimaries),
    ('color_trc', AVColorTransferCharacteristic),
    ('colorspace', AVColorSpace),
    ('color_range', AVColorRange),
    ('chroma_sample_location', AVChromaLocation),
    ('slices', c_int),
    ('field_order', AVFieldOrder),
    ('sample_rate', c_int),
    ('channels', c_int),
    ('sample_fmt', AVSampleFormat),
    ('frame_size', c_int),
    ('frame_number', c_int),
    ('block_align', c_int),
    ('cutoff', c_int),
    ('request_channels', c_int),
    ('channel_layout', uint64_t),
    ('request_channel_layout', uint64_t),
    ('audio_service_type', AVAudioServiceType),
    ('request_sample_fmt', AVSampleFormat),
    ('get_buffer', CFUNCTYPE(c_int, POINTER(AVCodecContext), POINTER(AVFrame))),
    ('release_buffer', CFUNCTYPE(None, POINTER(AVCodecContext), POINTER(AVFrame))),
    ('reget_buffer', CFUNCTYPE(c_int, POINTER(AVCodecContext), POINTER(AVFrame))),
    ('get_buffer2', CFUNCTYPE(c_int, POINTER(AVCodecContext), POINTER(AVFrame), c_int)),
    ('refcounted_frames', c_int),
    ('qcompress', c_float),
    ('qblur', c_float),
    ('qmin', c_int),
    ('qmax', c_int),
    ('max_qdiff', c_int),
    ('rc_qsquish', c_float),
    ('rc_qmod_amp', c_float),
    ('rc_qmod_freq', c_int),
    ('rc_buffer_size', c_int),
    ('rc_override_count', c_int),
    ('rc_override', POINTER(RcOverride)),
    ('rc_eq', STRING),
    ('rc_max_rate', c_int),
    ('rc_min_rate', c_int),
    ('rc_buffer_aggressivity', c_float),
    ('rc_initial_cplx', c_float),
    ('rc_max_available_vbv_use', c_float),
    ('rc_min_vbv_overflow_use', c_float),
    ('rc_initial_buffer_occupancy', c_int),
    ('coder_type', c_int),
    ('context_model', c_int),
    ('lmin', c_int),
    ('lmax', c_int),
    ('frame_skip_threshold', c_int),
    ('frame_skip_factor', c_int),
    ('frame_skip_exp', c_int),
    ('frame_skip_cmp', c_int),
    ('trellis', c_int),
    ('min_prediction_order', c_int),
    ('max_prediction_order', c_int),
    ('timecode_frame_start', int64_t),
    ('rtp_callback', CFUNCTYPE(None, POINTER(AVCodecContext), c_void_p, c_int, c_int)),
    ('rtp_payload_size', c_int),
    ('mv_bits', c_int),
    ('header_bits', c_int),
    ('i_tex_bits', c_int),
    ('p_tex_bits', c_int),
    ('i_count', c_int),
    ('p_count', c_int),
    ('skip_count', c_int),
    ('misc_bits', c_int),
    ('frame_bits', c_int),
    ('stats_out', STRING),
    ('stats_in', STRING),
    ('workaround_bugs', c_int),
    ('strict_std_compliance', c_int),
    ('error_concealment', c_int),
    ('debug', c_int),
    ('debug_mv', c_int),
    ('err_recognition', c_int),
    ('reordered_opaque', int64_t),
    ('hwaccel', POINTER(AVHWAccel)),
    ('hwaccel_context', c_void_p),
    ('error', uint64_t * 8),
    ('dct_algo', c_int),
    ('idct_algo', c_int),
    ('bits_per_coded_sample', c_int),
    ('bits_per_raw_sample', c_int),
    ('lowres', c_int),
    ('coded_frame', POINTER(AVFrame)),
    ('thread_count', c_int),
    ('thread_type', c_int),
    ('active_thread_type', c_int),
    ('thread_safe_callbacks', c_int),
    ('execute', CFUNCTYPE(c_int, POINTER(AVCodecContext), CFUNCTYPE(c_int, POINTER(AVCodecContext), c_void_p), c_void_p, POINTER(c_int), c_int, c_int)),
    ('execute2', CFUNCTYPE(c_int, POINTER(AVCodecContext), CFUNCTYPE(c_int, POINTER(AVCodecContext), c_void_p, c_int, c_int), c_void_p, POINTER(c_int), c_int)),
    ('thread_opaque', c_void_p),
    ('nsse_weight', c_int),
    ('profile', c_int),
    ('level', c_int),
    ('skip_loop_filter', AVDiscard),
    ('skip_idct', AVDiscard),
    ('skip_frame', AVDiscard),
    ('subtitle_header', POINTER(uint8_t)),
    ('subtitle_header_size', c_int),
    ('error_rate', c_int),
    ('pkt', POINTER(AVPacket)),
    ('vbv_delay', uint64_t),
    ('pkt_timebase', AVRational),
    ('codec_descriptor', POINTER(AVCodecDescriptor)),
    ('pts_correction_num_faulty_pts', int64_t),
    ('pts_correction_num_faulty_dts', int64_t),
    ('pts_correction_last_pts', int64_t),
    ('pts_correction_last_dts', int64_t),
    ('sub_charenc', STRING),
    ('sub_charenc_mode', c_int),
    ('skip_alpha', c_int),
    ('seek_preroll', c_int),
]
av_codec_get_pkt_timebase = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_codec_get_pkt_timebase
av_codec_get_pkt_timebase.restype = AVRational
av_codec_get_pkt_timebase.argtypes = [POINTER(AVCodecContext)]
av_codec_set_pkt_timebase = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_codec_set_pkt_timebase
av_codec_set_pkt_timebase.restype = None
av_codec_set_pkt_timebase.argtypes = [POINTER(AVCodecContext), AVRational]
av_codec_get_codec_descriptor = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_codec_get_codec_descriptor
av_codec_get_codec_descriptor.restype = POINTER(AVCodecDescriptor)
av_codec_get_codec_descriptor.argtypes = [POINTER(AVCodecContext)]
av_codec_set_codec_descriptor = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_codec_set_codec_descriptor
av_codec_set_codec_descriptor.restype = None
av_codec_set_codec_descriptor.argtypes = [POINTER(AVCodecContext), POINTER(AVCodecDescriptor)]
av_codec_get_lowres = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_codec_get_lowres
av_codec_get_lowres.restype = c_int
av_codec_get_lowres.argtypes = [POINTER(AVCodecContext)]
av_codec_set_lowres = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_codec_set_lowres
av_codec_set_lowres.restype = None
av_codec_set_lowres.argtypes = [POINTER(AVCodecContext), c_int]
av_codec_get_seek_preroll = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_codec_get_seek_preroll
av_codec_get_seek_preroll.restype = c_int
av_codec_get_seek_preroll.argtypes = [POINTER(AVCodecContext)]
av_codec_set_seek_preroll = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_codec_set_seek_preroll
av_codec_set_seek_preroll.restype = None
av_codec_set_seek_preroll.argtypes = [POINTER(AVCodecContext), c_int]
AVProfile._fields_ = [
    ('profile', c_int),
    ('name', STRING),
]
AVCodecDefault._fields_ = [
]
av_codec_get_max_lowres = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_codec_get_max_lowres
av_codec_get_max_lowres.restype = c_int
av_codec_get_max_lowres.argtypes = [POINTER(AVCodec)]
AVHWAccel._fields_ = [
    ('name', STRING),
    ('type', AVMediaType),
    ('id', AVCodecID),
    ('pix_fmt', AVPixelFormat),
    ('capabilities', c_int),
    ('next', POINTER(AVHWAccel)),
    ('start_frame', CFUNCTYPE(c_int, POINTER(AVCodecContext), POINTER(uint8_t), uint32_t)),
    ('decode_slice', CFUNCTYPE(c_int, POINTER(AVCodecContext), POINTER(uint8_t), uint32_t)),
    ('end_frame', CFUNCTYPE(c_int, POINTER(AVCodecContext))),
    ('priv_data_size', c_int),
]
class AVPicture(Structure):
    pass
AVPicture._fields_ = [
    ('data', POINTER(uint8_t) * 8),
    ('linesize', c_int * 8),
]

# values for enumeration 'AVSubtitleType'
AVSubtitleType = c_int # enum
AVSubtitleRect._fields_ = [
    ('x', c_int),
    ('y', c_int),
    ('w', c_int),
    ('h', c_int),
    ('nb_colors', c_int),
    ('pict', AVPicture),
    ('type', AVSubtitleType),
    ('text', STRING),
    ('ass', STRING),
    ('flags', c_int),
]
av_codec_next = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_codec_next
av_codec_next.restype = POINTER(AVCodec)
av_codec_next.argtypes = [POINTER(AVCodec)]
avcodec_version = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].avcodec_version
avcodec_version.restype = c_uint
avcodec_version.argtypes = []
avcodec_configuration = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].avcodec_configuration
avcodec_configuration.restype = STRING
avcodec_configuration.argtypes = []
avcodec_license = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].avcodec_license
avcodec_license.restype = STRING
avcodec_license.argtypes = []
avcodec_register = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].avcodec_register
avcodec_register.restype = None
avcodec_register.argtypes = [POINTER(AVCodec)]
avcodec_register_all = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].avcodec_register_all
avcodec_register_all.restype = None
avcodec_register_all.argtypes = []
avcodec_alloc_context3 = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].avcodec_alloc_context3
avcodec_alloc_context3.restype = POINTER(AVCodecContext)
avcodec_alloc_context3.argtypes = [POINTER(AVCodec)]
avcodec_get_context_defaults3 = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].avcodec_get_context_defaults3
avcodec_get_context_defaults3.restype = c_int
avcodec_get_context_defaults3.argtypes = [POINTER(AVCodecContext), POINTER(AVCodec)]
avcodec_get_class = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].avcodec_get_class
avcodec_get_class.restype = POINTER(AVClass)
avcodec_get_class.argtypes = []
avcodec_get_frame_class = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].avcodec_get_frame_class
avcodec_get_frame_class.restype = POINTER(AVClass)
avcodec_get_frame_class.argtypes = []
avcodec_get_subtitle_rect_class = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].avcodec_get_subtitle_rect_class
avcodec_get_subtitle_rect_class.restype = POINTER(AVClass)
avcodec_get_subtitle_rect_class.argtypes = []
avcodec_copy_context = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].avcodec_copy_context
avcodec_copy_context.restype = c_int
avcodec_copy_context.argtypes = [POINTER(AVCodecContext), POINTER(AVCodecContext)]
avcodec_alloc_frame = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].avcodec_alloc_frame
avcodec_alloc_frame.restype = POINTER(AVFrame)
avcodec_alloc_frame.argtypes = []
avcodec_get_frame_defaults = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].avcodec_get_frame_defaults
avcodec_get_frame_defaults.restype = None
avcodec_get_frame_defaults.argtypes = [POINTER(AVFrame)]
avcodec_free_frame = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].avcodec_free_frame
avcodec_free_frame.restype = None
avcodec_free_frame.argtypes = [POINTER(POINTER(AVFrame))]
class AVDictionary(Structure):
    pass
avcodec_open2 = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].avcodec_open2
avcodec_open2.restype = c_int
avcodec_open2.argtypes = [POINTER(AVCodecContext), POINTER(AVCodec), POINTER(POINTER(AVDictionary))]
avcodec_close = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].avcodec_close
avcodec_close.restype = c_int
avcodec_close.argtypes = [POINTER(AVCodecContext)]
avsubtitle_free = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].avsubtitle_free
avsubtitle_free.restype = None
avsubtitle_free.argtypes = [POINTER(AVSubtitle)]
av_destruct_packet = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_destruct_packet
av_destruct_packet.restype = None
av_destruct_packet.argtypes = [POINTER(AVPacket)]
av_init_packet = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_init_packet
av_init_packet.restype = None
av_init_packet.argtypes = [POINTER(AVPacket)]
av_new_packet = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_new_packet
av_new_packet.restype = c_int
av_new_packet.argtypes = [POINTER(AVPacket), c_int]
av_shrink_packet = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_shrink_packet
av_shrink_packet.restype = None
av_shrink_packet.argtypes = [POINTER(AVPacket), c_int]
av_grow_packet = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_grow_packet
av_grow_packet.restype = c_int
av_grow_packet.argtypes = [POINTER(AVPacket), c_int]
av_packet_from_data = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_packet_from_data
av_packet_from_data.restype = c_int
av_packet_from_data.argtypes = [POINTER(AVPacket), POINTER(uint8_t), c_int]
av_dup_packet = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_dup_packet
av_dup_packet.restype = c_int
av_dup_packet.argtypes = [POINTER(AVPacket)]
av_copy_packet = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_copy_packet
av_copy_packet.restype = c_int
av_copy_packet.argtypes = [POINTER(AVPacket), POINTER(AVPacket)]
av_copy_packet_side_data = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_copy_packet_side_data
av_copy_packet_side_data.restype = c_int
av_copy_packet_side_data.argtypes = [POINTER(AVPacket), POINTER(AVPacket)]
av_free_packet = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_free_packet
av_free_packet.restype = None
av_free_packet.argtypes = [POINTER(AVPacket)]
av_packet_new_side_data = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_packet_new_side_data
av_packet_new_side_data.restype = POINTER(uint8_t)
av_packet_new_side_data.argtypes = [POINTER(AVPacket), AVPacketSideDataType, c_int]
av_packet_shrink_side_data = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_packet_shrink_side_data
av_packet_shrink_side_data.restype = c_int
av_packet_shrink_side_data.argtypes = [POINTER(AVPacket), AVPacketSideDataType, c_int]
av_packet_get_side_data = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_packet_get_side_data
av_packet_get_side_data.restype = POINTER(uint8_t)
av_packet_get_side_data.argtypes = [POINTER(AVPacket), AVPacketSideDataType, POINTER(c_int)]
av_packet_merge_side_data = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_packet_merge_side_data
av_packet_merge_side_data.restype = c_int
av_packet_merge_side_data.argtypes = [POINTER(AVPacket)]
av_packet_split_side_data = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_packet_split_side_data
av_packet_split_side_data.restype = c_int
av_packet_split_side_data.argtypes = [POINTER(AVPacket)]
av_packet_free_side_data = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_packet_free_side_data
av_packet_free_side_data.restype = None
av_packet_free_side_data.argtypes = [POINTER(AVPacket)]
av_packet_ref = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_packet_ref
av_packet_ref.restype = c_int
av_packet_ref.argtypes = [POINTER(AVPacket), POINTER(AVPacket)]
av_packet_unref = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_packet_unref
av_packet_unref.restype = None
av_packet_unref.argtypes = [POINTER(AVPacket)]
av_packet_move_ref = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_packet_move_ref
av_packet_move_ref.restype = None
av_packet_move_ref.argtypes = [POINTER(AVPacket), POINTER(AVPacket)]
av_packet_copy_props = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_packet_copy_props
av_packet_copy_props.restype = c_int
av_packet_copy_props.argtypes = [POINTER(AVPacket), POINTER(AVPacket)]
avcodec_find_decoder = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].avcodec_find_decoder
avcodec_find_decoder.restype = POINTER(AVCodec)
avcodec_find_decoder.argtypes = [AVCodecID]
avcodec_find_decoder_by_name = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].avcodec_find_decoder_by_name
avcodec_find_decoder_by_name.restype = POINTER(AVCodec)
avcodec_find_decoder_by_name.argtypes = [STRING]
avcodec_default_get_buffer = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].avcodec_default_get_buffer
avcodec_default_get_buffer.restype = c_int
avcodec_default_get_buffer.argtypes = [POINTER(AVCodecContext), POINTER(AVFrame)]
avcodec_default_release_buffer = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].avcodec_default_release_buffer
avcodec_default_release_buffer.restype = None
avcodec_default_release_buffer.argtypes = [POINTER(AVCodecContext), POINTER(AVFrame)]
avcodec_default_reget_buffer = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].avcodec_default_reget_buffer
avcodec_default_reget_buffer.restype = c_int
avcodec_default_reget_buffer.argtypes = [POINTER(AVCodecContext), POINTER(AVFrame)]
avcodec_default_get_buffer2 = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].avcodec_default_get_buffer2
avcodec_default_get_buffer2.restype = c_int
avcodec_default_get_buffer2.argtypes = [POINTER(AVCodecContext), POINTER(AVFrame), c_int]
avcodec_get_edge_width = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].avcodec_get_edge_width
avcodec_get_edge_width.restype = c_uint
avcodec_get_edge_width.argtypes = []
avcodec_align_dimensions = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].avcodec_align_dimensions
avcodec_align_dimensions.restype = None
avcodec_align_dimensions.argtypes = [POINTER(AVCodecContext), POINTER(c_int), POINTER(c_int)]
avcodec_align_dimensions2 = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].avcodec_align_dimensions2
avcodec_align_dimensions2.restype = None
avcodec_align_dimensions2.argtypes = [POINTER(AVCodecContext), POINTER(c_int), POINTER(c_int), POINTER(c_int)]
avcodec_enum_to_chroma_pos = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].avcodec_enum_to_chroma_pos
avcodec_enum_to_chroma_pos.restype = c_int
avcodec_enum_to_chroma_pos.argtypes = [POINTER(c_int), POINTER(c_int), AVChromaLocation]
avcodec_chroma_pos_to_enum = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].avcodec_chroma_pos_to_enum
avcodec_chroma_pos_to_enum.restype = AVChromaLocation
avcodec_chroma_pos_to_enum.argtypes = [c_int, c_int]
avcodec_decode_audio3 = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].avcodec_decode_audio3
avcodec_decode_audio3.restype = c_int
avcodec_decode_audio3.argtypes = [POINTER(AVCodecContext), POINTER(int16_t), POINTER(c_int), POINTER(AVPacket)]
avcodec_decode_audio4 = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].avcodec_decode_audio4
avcodec_decode_audio4.restype = c_int
avcodec_decode_audio4.argtypes = [POINTER(AVCodecContext), POINTER(AVFrame), POINTER(c_int), POINTER(AVPacket)]
avcodec_decode_video2 = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].avcodec_decode_video2
avcodec_decode_video2.restype = c_int
avcodec_decode_video2.argtypes = [POINTER(AVCodecContext), POINTER(AVFrame), POINTER(c_int), POINTER(AVPacket)]
avcodec_decode_subtitle2 = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].avcodec_decode_subtitle2
avcodec_decode_subtitle2.restype = c_int
avcodec_decode_subtitle2.argtypes = [POINTER(AVCodecContext), POINTER(AVSubtitle), POINTER(c_int), POINTER(AVPacket)]

# values for enumeration 'AVPictureStructure'
AVPictureStructure = c_int # enum
class AVCodecParserContext(Structure):
    pass
class AVCodecParser(Structure):
    pass
AVCodecParserContext._fields_ = [
    ('priv_data', c_void_p),
    ('parser', POINTER(AVCodecParser)),
    ('frame_offset', int64_t),
    ('cur_offset', int64_t),
    ('next_frame_offset', int64_t),
    ('pict_type', c_int),
    ('repeat_pict', c_int),
    ('pts', int64_t),
    ('dts', int64_t),
    ('last_pts', int64_t),
    ('last_dts', int64_t),
    ('fetch_timestamp', c_int),
    ('cur_frame_start_index', c_int),
    ('cur_frame_offset', int64_t * 4),
    ('cur_frame_pts', int64_t * 4),
    ('cur_frame_dts', int64_t * 4),
    ('flags', c_int),
    ('offset', int64_t),
    ('cur_frame_end', int64_t * 4),
    ('key_frame', c_int),
    ('convergence_duration', int64_t),
    ('dts_sync_point', c_int),
    ('dts_ref_dts_delta', c_int),
    ('pts_dts_delta', c_int),
    ('cur_frame_pos', int64_t * 4),
    ('pos', int64_t),
    ('last_pos', int64_t),
    ('duration', c_int),
    ('field_order', AVFieldOrder),
    ('picture_structure', AVPictureStructure),
    ('output_picture_number', c_int),
]
AVCodecParser._fields_ = [
    ('codec_ids', c_int * 5),
    ('priv_data_size', c_int),
    ('parser_init', CFUNCTYPE(c_int, POINTER(AVCodecParserContext))),
    ('parser_parse', CFUNCTYPE(c_int, POINTER(AVCodecParserContext), POINTER(AVCodecContext), POINTER(POINTER(uint8_t)), POINTER(c_int), POINTER(uint8_t), c_int)),
    ('parser_close', CFUNCTYPE(None, POINTER(AVCodecParserContext))),
    ('split', CFUNCTYPE(c_int, POINTER(AVCodecContext), POINTER(uint8_t), c_int)),
    ('next', POINTER(AVCodecParser)),
]
av_parser_next = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_parser_next
av_parser_next.restype = POINTER(AVCodecParser)
av_parser_next.argtypes = [POINTER(AVCodecParser)]
av_register_codec_parser = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_register_codec_parser
av_register_codec_parser.restype = None
av_register_codec_parser.argtypes = [POINTER(AVCodecParser)]
av_parser_init = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_parser_init
av_parser_init.restype = POINTER(AVCodecParserContext)
av_parser_init.argtypes = [c_int]
av_parser_parse2 = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_parser_parse2
av_parser_parse2.restype = c_int
av_parser_parse2.argtypes = [POINTER(AVCodecParserContext), POINTER(AVCodecContext), POINTER(POINTER(uint8_t)), POINTER(c_int), POINTER(uint8_t), c_int, int64_t, int64_t, int64_t]
av_parser_change = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_parser_change
av_parser_change.restype = c_int
av_parser_change.argtypes = [POINTER(AVCodecParserContext), POINTER(AVCodecContext), POINTER(POINTER(uint8_t)), POINTER(c_int), POINTER(uint8_t), c_int, c_int]
av_parser_close = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_parser_close
av_parser_close.restype = None
av_parser_close.argtypes = [POINTER(AVCodecParserContext)]
avcodec_find_encoder = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].avcodec_find_encoder
avcodec_find_encoder.restype = POINTER(AVCodec)
avcodec_find_encoder.argtypes = [AVCodecID]
avcodec_find_encoder_by_name = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].avcodec_find_encoder_by_name
avcodec_find_encoder_by_name.restype = POINTER(AVCodec)
avcodec_find_encoder_by_name.argtypes = [STRING]
avcodec_encode_audio = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].avcodec_encode_audio
avcodec_encode_audio.restype = c_int
avcodec_encode_audio.argtypes = [POINTER(AVCodecContext), POINTER(uint8_t), c_int, POINTER(c_short)]
avcodec_encode_audio2 = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].avcodec_encode_audio2
avcodec_encode_audio2.restype = c_int
avcodec_encode_audio2.argtypes = [POINTER(AVCodecContext), POINTER(AVPacket), POINTER(AVFrame), POINTER(c_int)]
avcodec_encode_video = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].avcodec_encode_video
avcodec_encode_video.restype = c_int
avcodec_encode_video.argtypes = [POINTER(AVCodecContext), POINTER(uint8_t), c_int, POINTER(AVFrame)]
avcodec_encode_video2 = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].avcodec_encode_video2
avcodec_encode_video2.restype = c_int
avcodec_encode_video2.argtypes = [POINTER(AVCodecContext), POINTER(AVPacket), POINTER(AVFrame), POINTER(c_int)]
avcodec_encode_subtitle = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].avcodec_encode_subtitle
avcodec_encode_subtitle.restype = c_int
avcodec_encode_subtitle.argtypes = [POINTER(AVCodecContext), POINTER(uint8_t), c_int, POINTER(AVSubtitle)]
class ReSampleContext(Structure):
    pass
ReSampleContext._fields_ = [
]
class AVResampleContext(Structure):
    pass
AVResampleContext._fields_ = [
]
av_audio_resample_init = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_audio_resample_init
av_audio_resample_init.restype = POINTER(ReSampleContext)
av_audio_resample_init.argtypes = [c_int, c_int, c_int, c_int, AVSampleFormat, AVSampleFormat, c_int, c_int, c_int, c_double]
audio_resample = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].audio_resample
audio_resample.restype = c_int
audio_resample.argtypes = [POINTER(ReSampleContext), POINTER(c_short), POINTER(c_short), c_int]
audio_resample_close = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].audio_resample_close
audio_resample_close.restype = None
audio_resample_close.argtypes = [POINTER(ReSampleContext)]
av_resample_init = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_resample_init
av_resample_init.restype = POINTER(AVResampleContext)
av_resample_init.argtypes = [c_int, c_int, c_int, c_int, c_int, c_double]
av_resample = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_resample
av_resample.restype = c_int
av_resample.argtypes = [POINTER(AVResampleContext), POINTER(c_short), POINTER(c_short), POINTER(c_int), c_int, c_int, c_int]
av_resample_compensate = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_resample_compensate
av_resample_compensate.restype = None
av_resample_compensate.argtypes = [POINTER(AVResampleContext), c_int, c_int]
av_resample_close = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_resample_close
av_resample_close.restype = None
av_resample_close.argtypes = [POINTER(AVResampleContext)]
avpicture_alloc = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].avpicture_alloc
avpicture_alloc.restype = c_int
avpicture_alloc.argtypes = [POINTER(AVPicture), AVPixelFormat, c_int, c_int]
avpicture_free = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].avpicture_free
avpicture_free.restype = None
avpicture_free.argtypes = [POINTER(AVPicture)]
avpicture_fill = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].avpicture_fill
avpicture_fill.restype = c_int
avpicture_fill.argtypes = [POINTER(AVPicture), POINTER(uint8_t), AVPixelFormat, c_int, c_int]
avpicture_layout = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].avpicture_layout
avpicture_layout.restype = c_int
avpicture_layout.argtypes = [POINTER(AVPicture), AVPixelFormat, c_int, c_int, POINTER(c_ubyte), c_int]
avpicture_get_size = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].avpicture_get_size
avpicture_get_size.restype = c_int
avpicture_get_size.argtypes = [AVPixelFormat, c_int, c_int]
avpicture_deinterlace = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].avpicture_deinterlace
avpicture_deinterlace.restype = c_int
avpicture_deinterlace.argtypes = [POINTER(AVPicture), POINTER(AVPicture), AVPixelFormat, c_int, c_int]
av_picture_copy = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_picture_copy
av_picture_copy.restype = None
av_picture_copy.argtypes = [POINTER(AVPicture), POINTER(AVPicture), AVPixelFormat, c_int, c_int]
av_picture_crop = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_picture_crop
av_picture_crop.restype = c_int
av_picture_crop.argtypes = [POINTER(AVPicture), POINTER(AVPicture), AVPixelFormat, c_int, c_int]
av_picture_pad = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_picture_pad
av_picture_pad.restype = c_int
av_picture_pad.argtypes = [POINTER(AVPicture), POINTER(AVPicture), c_int, c_int, AVPixelFormat, c_int, c_int, c_int, c_int, POINTER(c_int)]
avcodec_get_chroma_sub_sample = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].avcodec_get_chroma_sub_sample
avcodec_get_chroma_sub_sample.restype = None
avcodec_get_chroma_sub_sample.argtypes = [AVPixelFormat, POINTER(c_int), POINTER(c_int)]
avcodec_pix_fmt_to_codec_tag = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].avcodec_pix_fmt_to_codec_tag
avcodec_pix_fmt_to_codec_tag.restype = c_uint
avcodec_pix_fmt_to_codec_tag.argtypes = [AVPixelFormat]
avcodec_get_pix_fmt_loss = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].avcodec_get_pix_fmt_loss
avcodec_get_pix_fmt_loss.restype = c_int
avcodec_get_pix_fmt_loss.argtypes = [AVPixelFormat, AVPixelFormat, c_int]
avcodec_find_best_pix_fmt_of_list = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].avcodec_find_best_pix_fmt_of_list
avcodec_find_best_pix_fmt_of_list.restype = AVPixelFormat
avcodec_find_best_pix_fmt_of_list.argtypes = [POINTER(AVPixelFormat), AVPixelFormat, c_int, POINTER(c_int)]
avcodec_find_best_pix_fmt_of_2 = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].avcodec_find_best_pix_fmt_of_2
avcodec_find_best_pix_fmt_of_2.restype = AVPixelFormat
avcodec_find_best_pix_fmt_of_2.argtypes = [AVPixelFormat, AVPixelFormat, AVPixelFormat, c_int, POINTER(c_int)]
avcodec_find_best_pix_fmt2 = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].avcodec_find_best_pix_fmt2
avcodec_find_best_pix_fmt2.restype = AVPixelFormat
avcodec_find_best_pix_fmt2.argtypes = [AVPixelFormat, AVPixelFormat, AVPixelFormat, c_int, POINTER(c_int)]
avcodec_default_get_format = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].avcodec_default_get_format
avcodec_default_get_format.restype = AVPixelFormat
avcodec_default_get_format.argtypes = [POINTER(AVCodecContext), POINTER(AVPixelFormat)]
avcodec_set_dimensions = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].avcodec_set_dimensions
avcodec_set_dimensions.restype = None
avcodec_set_dimensions.argtypes = [POINTER(AVCodecContext), c_int, c_int]
av_get_codec_tag_string = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_get_codec_tag_string
av_get_codec_tag_string.restype = size_t
av_get_codec_tag_string.argtypes = [STRING, size_t, c_uint]
avcodec_string = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].avcodec_string
avcodec_string.restype = None
avcodec_string.argtypes = [STRING, c_int, POINTER(AVCodecContext), c_int]
av_get_profile_name = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_get_profile_name
av_get_profile_name.restype = STRING
av_get_profile_name.argtypes = [POINTER(AVCodec), c_int]
avcodec_default_execute = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].avcodec_default_execute
avcodec_default_execute.restype = c_int
avcodec_default_execute.argtypes = [POINTER(AVCodecContext), CFUNCTYPE(c_int, POINTER(AVCodecContext), c_void_p), c_void_p, POINTER(c_int), c_int, c_int]
avcodec_default_execute2 = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].avcodec_default_execute2
avcodec_default_execute2.restype = c_int
avcodec_default_execute2.argtypes = [POINTER(AVCodecContext), CFUNCTYPE(c_int, POINTER(AVCodecContext), c_void_p, c_int, c_int), c_void_p, POINTER(c_int), c_int]
avcodec_fill_audio_frame = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].avcodec_fill_audio_frame
avcodec_fill_audio_frame.restype = c_int
avcodec_fill_audio_frame.argtypes = [POINTER(AVFrame), c_int, AVSampleFormat, POINTER(uint8_t), c_int, c_int]
avcodec_flush_buffers = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].avcodec_flush_buffers
avcodec_flush_buffers.restype = None
avcodec_flush_buffers.argtypes = [POINTER(AVCodecContext)]
av_get_bits_per_sample = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_get_bits_per_sample
av_get_bits_per_sample.restype = c_int
av_get_bits_per_sample.argtypes = [AVCodecID]
av_get_pcm_codec = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_get_pcm_codec
av_get_pcm_codec.restype = AVCodecID
av_get_pcm_codec.argtypes = [AVSampleFormat, c_int]
av_get_exact_bits_per_sample = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_get_exact_bits_per_sample
av_get_exact_bits_per_sample.restype = c_int
av_get_exact_bits_per_sample.argtypes = [AVCodecID]
av_get_audio_frame_duration = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_get_audio_frame_duration
av_get_audio_frame_duration.restype = c_int
av_get_audio_frame_duration.argtypes = [POINTER(AVCodecContext), c_int]
class AVBitStreamFilterContext(Structure):
    pass
class AVBitStreamFilter(Structure):
    pass
AVBitStreamFilterContext._fields_ = [
    ('priv_data', c_void_p),
    ('filter', POINTER(AVBitStreamFilter)),
    ('parser', POINTER(AVCodecParserContext)),
    ('next', POINTER(AVBitStreamFilterContext)),
]
AVBitStreamFilter._fields_ = [
    ('name', STRING),
    ('priv_data_size', c_int),
    ('filter', CFUNCTYPE(c_int, POINTER(AVBitStreamFilterContext), POINTER(AVCodecContext), STRING, POINTER(POINTER(uint8_t)), POINTER(c_int), POINTER(uint8_t), c_int, c_int)),
    ('close', CFUNCTYPE(None, POINTER(AVBitStreamFilterContext))),
    ('next', POINTER(AVBitStreamFilter)),
]
av_register_bitstream_filter = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_register_bitstream_filter
av_register_bitstream_filter.restype = None
av_register_bitstream_filter.argtypes = [POINTER(AVBitStreamFilter)]
av_bitstream_filter_init = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_bitstream_filter_init
av_bitstream_filter_init.restype = POINTER(AVBitStreamFilterContext)
av_bitstream_filter_init.argtypes = [STRING]
av_bitstream_filter_filter = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_bitstream_filter_filter
av_bitstream_filter_filter.restype = c_int
av_bitstream_filter_filter.argtypes = [POINTER(AVBitStreamFilterContext), POINTER(AVCodecContext), STRING, POINTER(POINTER(uint8_t)), POINTER(c_int), POINTER(uint8_t), c_int, c_int]
av_bitstream_filter_close = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_bitstream_filter_close
av_bitstream_filter_close.restype = None
av_bitstream_filter_close.argtypes = [POINTER(AVBitStreamFilterContext)]
av_bitstream_filter_next = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_bitstream_filter_next
av_bitstream_filter_next.restype = POINTER(AVBitStreamFilter)
av_bitstream_filter_next.argtypes = [POINTER(AVBitStreamFilter)]
av_fast_realloc = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_fast_realloc
av_fast_realloc.restype = c_void_p
av_fast_realloc.argtypes = [c_void_p, POINTER(c_uint), size_t]
av_fast_malloc = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_fast_malloc
av_fast_malloc.restype = None
av_fast_malloc.argtypes = [c_void_p, POINTER(c_uint), size_t]
av_fast_padded_malloc = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_fast_padded_malloc
av_fast_padded_malloc.restype = None
av_fast_padded_malloc.argtypes = [c_void_p, POINTER(c_uint), size_t]
av_fast_padded_mallocz = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_fast_padded_mallocz
av_fast_padded_mallocz.restype = None
av_fast_padded_mallocz.argtypes = [c_void_p, POINTER(c_uint), size_t]
av_xiphlacing = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_xiphlacing
av_xiphlacing.restype = c_uint
av_xiphlacing.argtypes = [POINTER(c_ubyte), c_uint]
av_log_missing_feature = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_log_missing_feature
av_log_missing_feature.restype = None
av_log_missing_feature.argtypes = [c_void_p, STRING, c_int]
av_log_ask_for_sample = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_log_ask_for_sample
av_log_ask_for_sample.restype = None
av_log_ask_for_sample.argtypes = [c_void_p, STRING]
av_register_hwaccel = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_register_hwaccel
av_register_hwaccel.restype = None
av_register_hwaccel.argtypes = [POINTER(AVHWAccel)]
av_hwaccel_next = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_hwaccel_next
av_hwaccel_next.restype = POINTER(AVHWAccel)
av_hwaccel_next.argtypes = [POINTER(AVHWAccel)]

# values for enumeration 'AVLockOp'
AVLockOp = c_int # enum
av_lockmgr_register = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_lockmgr_register
av_lockmgr_register.restype = c_int
av_lockmgr_register.argtypes = [CFUNCTYPE(c_int, POINTER(c_void_p), AVLockOp)]
avcodec_get_type = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].avcodec_get_type
avcodec_get_type.restype = AVMediaType
avcodec_get_type.argtypes = [AVCodecID]
avcodec_get_name = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].avcodec_get_name
avcodec_get_name.restype = STRING
avcodec_get_name.argtypes = [AVCodecID]
avcodec_is_open = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].avcodec_is_open
avcodec_is_open.restype = c_int
avcodec_is_open.argtypes = [POINTER(AVCodecContext)]
av_codec_is_encoder = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_codec_is_encoder
av_codec_is_encoder.restype = c_int
av_codec_is_encoder.argtypes = [POINTER(AVCodec)]
av_codec_is_decoder = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_codec_is_decoder
av_codec_is_decoder.restype = c_int
av_codec_is_decoder.argtypes = [POINTER(AVCodec)]
avcodec_descriptor_get = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].avcodec_descriptor_get
avcodec_descriptor_get.restype = POINTER(AVCodecDescriptor)
avcodec_descriptor_get.argtypes = [AVCodecID]
avcodec_descriptor_next = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].avcodec_descriptor_next
avcodec_descriptor_next.restype = POINTER(AVCodecDescriptor)
avcodec_descriptor_next.argtypes = [POINTER(AVCodecDescriptor)]
avcodec_descriptor_get_by_name = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].avcodec_descriptor_get_by_name
avcodec_descriptor_get_by_name.restype = POINTER(AVCodecDescriptor)
avcodec_descriptor_get_by_name.argtypes = [STRING]
avdevice_version = _libraries['/usr/lib/ffmpeg2.8/libavdevice.so'].avdevice_version
avdevice_version.restype = c_uint
avdevice_version.argtypes = []
avdevice_configuration = _libraries['/usr/lib/ffmpeg2.8/libavdevice.so'].avdevice_configuration
avdevice_configuration.restype = STRING
avdevice_configuration.argtypes = []
avdevice_license = _libraries['/usr/lib/ffmpeg2.8/libavdevice.so'].avdevice_license
avdevice_license.restype = STRING
avdevice_license.argtypes = []
avdevice_register_all = _libraries['/usr/lib/ffmpeg2.8/libavdevice.so'].avdevice_register_all
avdevice_register_all.restype = None
avdevice_register_all.argtypes = []
avfilter_version = _libraries['/usr/lib/ffmpeg2.8/libavdevice.so'].avfilter_version
avfilter_version.restype = c_uint
avfilter_version.argtypes = []
avfilter_configuration = _libraries['/usr/lib/ffmpeg2.8/libavdevice.so'].avfilter_configuration
avfilter_configuration.restype = STRING
avfilter_configuration.argtypes = []
avfilter_license = _libraries['/usr/lib/ffmpeg2.8/libavdevice.so'].avfilter_license
avfilter_license.restype = STRING
avfilter_license.argtypes = []
class AVFilterContext(Structure):
    pass
class AVFilterLink(Structure):
    pass
class AVFilterPad(Structure):
    pass
class AVFilterFormats(Structure):
    pass
AVFilterFormats._fields_ = [
]
class AVFilterBuffer(Structure):
    pass
AVFilterBuffer._fields_ = [
    ('data', POINTER(uint8_t) * 8),
    ('extended_data', POINTER(POINTER(uint8_t))),
    ('linesize', c_int * 8),
    ('priv', c_void_p),
    ('free', CFUNCTYPE(None, POINTER(AVFilterBuffer))),
    ('format', c_int),
    ('w', c_int),
    ('h', c_int),
    ('refcount', c_uint),
]
class AVFilterBufferRefAudioProps(Structure):
    pass
AVFilterBufferRefAudioProps._fields_ = [
    ('channel_layout', uint64_t),
    ('nb_samples', c_int),
    ('sample_rate', c_int),
    ('channels', c_int),
]
class AVFilterBufferRefVideoProps(Structure):
    pass

# values for enumeration 'AVPictureType'
AVPictureType = c_int # enum
AVFilterBufferRefVideoProps._fields_ = [
    ('w', c_int),
    ('h', c_int),
    ('sample_aspect_ratio', AVRational),
    ('interlaced', c_int),
    ('top_field_first', c_int),
    ('pict_type', AVPictureType),
    ('key_frame', c_int),
    ('qp_table_linesize', c_int),
    ('qp_table_size', c_int),
    ('qp_table', POINTER(int8_t)),
]
class AVFilterBufferRef(Structure):
    pass
AVFilterBufferRef._fields_ = [
    ('buf', POINTER(AVFilterBuffer)),
    ('data', POINTER(uint8_t) * 8),
    ('extended_data', POINTER(POINTER(uint8_t))),
    ('linesize', c_int * 8),
    ('video', POINTER(AVFilterBufferRefVideoProps)),
    ('audio', POINTER(AVFilterBufferRefAudioProps)),
    ('pts', int64_t),
    ('pos', int64_t),
    ('format', c_int),
    ('perms', c_int),
    ('type', AVMediaType),
    ('metadata', POINTER(AVDictionary)),
]
avfilter_copy_buffer_ref_props = _libraries['/usr/lib/ffmpeg2.8/libavdevice.so'].avfilter_copy_buffer_ref_props
avfilter_copy_buffer_ref_props.restype = None
avfilter_copy_buffer_ref_props.argtypes = [POINTER(AVFilterBufferRef), POINTER(AVFilterBufferRef)]
avfilter_ref_buffer = _libraries['/usr/lib/ffmpeg2.8/libavdevice.so'].avfilter_ref_buffer
avfilter_ref_buffer.restype = POINTER(AVFilterBufferRef)
avfilter_ref_buffer.argtypes = [POINTER(AVFilterBufferRef), c_int]
avfilter_unref_buffer = _libraries['/usr/lib/ffmpeg2.8/libavdevice.so'].avfilter_unref_buffer
avfilter_unref_buffer.restype = None
avfilter_unref_buffer.argtypes = [POINTER(AVFilterBufferRef)]
avfilter_unref_bufferp = _libraries['/usr/lib/ffmpeg2.8/libavdevice.so'].avfilter_unref_bufferp
avfilter_unref_bufferp.restype = None
avfilter_unref_bufferp.argtypes = [POINTER(POINTER(AVFilterBufferRef))]
avfilter_ref_get_channels = _libraries['/usr/lib/ffmpeg2.8/libavdevice.so'].avfilter_ref_get_channels
avfilter_ref_get_channels.restype = c_int
avfilter_ref_get_channels.argtypes = [POINTER(AVFilterBufferRef)]
AVFilterPad._fields_ = [
    ('name', STRING),
    ('type', AVMediaType),
    ('min_perms', c_int),
    ('rej_perms', c_int),
    ('start_frame', CFUNCTYPE(c_int, POINTER(AVFilterLink), POINTER(AVFilterBufferRef))),
    ('get_video_buffer', CFUNCTYPE(POINTER(AVFrame), POINTER(AVFilterLink), c_int, c_int)),
    ('get_audio_buffer', CFUNCTYPE(POINTER(AVFrame), POINTER(AVFilterLink), c_int)),
    ('end_frame', CFUNCTYPE(c_int, POINTER(AVFilterLink))),
    ('draw_slice', CFUNCTYPE(c_int, POINTER(AVFilterLink), c_int, c_int, c_int)),
    ('filter_frame', CFUNCTYPE(c_int, POINTER(AVFilterLink), POINTER(AVFrame))),
    ('poll_frame', CFUNCTYPE(c_int, POINTER(AVFilterLink))),
    ('request_frame', CFUNCTYPE(c_int, POINTER(AVFilterLink))),
    ('config_props', CFUNCTYPE(c_int, POINTER(AVFilterLink))),
    ('needs_fifo', c_int),
    ('needs_writable', c_int),
]
avfilter_pad_count = _libraries['/usr/lib/ffmpeg2.8/libavdevice.so'].avfilter_pad_count
avfilter_pad_count.restype = c_int
avfilter_pad_count.argtypes = [POINTER(AVFilterPad)]
avfilter_pad_get_name = _libraries['/usr/lib/ffmpeg2.8/libavdevice.so'].avfilter_pad_get_name
avfilter_pad_get_name.restype = STRING
avfilter_pad_get_name.argtypes = [POINTER(AVFilterPad), c_int]
avfilter_pad_get_type = _libraries['/usr/lib/ffmpeg2.8/libavdevice.so'].avfilter_pad_get_type
avfilter_pad_get_type.restype = AVMediaType
avfilter_pad_get_type.argtypes = [POINTER(AVFilterPad), c_int]
class AVFilter(Structure):
    pass
AVFilter._fields_ = [
    ('name', STRING),
    ('description', STRING),
    ('inputs', POINTER(AVFilterPad)),
    ('outputs', POINTER(AVFilterPad)),
    ('priv_class', POINTER(AVClass)),
    ('flags', c_int),
    ('init', CFUNCTYPE(c_int, POINTER(AVFilterContext))),
    ('init_dict', CFUNCTYPE(c_int, POINTER(AVFilterContext), POINTER(POINTER(AVDictionary)))),
    ('uninit', CFUNCTYPE(None, POINTER(AVFilterContext))),
    ('query_formats', CFUNCTYPE(c_int, POINTER(AVFilterContext))),
    ('priv_size', c_int),
    ('next', POINTER(AVFilter)),
    ('process_command', CFUNCTYPE(c_int, POINTER(AVFilterContext), STRING, STRING, STRING, c_int, c_int)),
    ('init_opaque', CFUNCTYPE(c_int, POINTER(AVFilterContext), c_void_p)),
]
class AVFilterInternal(Structure):
    pass
AVFilterInternal._fields_ = [
]
class AVFilterGraph(Structure):
    pass
class AVFilterCommand(Structure):
    pass
AVFilterContext._fields_ = [
    ('av_class', POINTER(AVClass)),
    ('filter', POINTER(AVFilter)),
    ('name', STRING),
    ('input_pads', POINTER(AVFilterPad)),
    ('inputs', POINTER(POINTER(AVFilterLink))),
    ('input_count', c_uint),
    ('nb_inputs', c_uint),
    ('output_pads', POINTER(AVFilterPad)),
    ('outputs', POINTER(POINTER(AVFilterLink))),
    ('output_count', c_uint),
    ('nb_outputs', c_uint),
    ('priv', c_void_p),
    ('graph', POINTER(AVFilterGraph)),
    ('thread_type', c_int),
    ('internal', POINTER(AVFilterInternal)),
    ('command_queue', POINTER(AVFilterCommand)),
    ('enable_str', STRING),
    ('enable', c_void_p),
    ('var_values', POINTER(c_double)),
    ('is_disabled', c_int),
]
AVFilterCommand._fields_ = [
]
class AVFilterChannelLayouts(Structure):
    pass

# values for unnamed enumeration
class AVFilterPool(Structure):
    pass
AVFilterLink._fields_ = [
    ('src', POINTER(AVFilterContext)),
    ('srcpad', POINTER(AVFilterPad)),
    ('dst', POINTER(AVFilterContext)),
    ('dstpad', POINTER(AVFilterPad)),
    ('type', AVMediaType),
    ('w', c_int),
    ('h', c_int),
    ('sample_aspect_ratio', AVRational),
    ('channel_layout', uint64_t),
    ('sample_rate', c_int),
    ('format', c_int),
    ('time_base', AVRational),
    ('in_formats', POINTER(AVFilterFormats)),
    ('out_formats', POINTER(AVFilterFormats)),
    ('in_samplerates', POINTER(AVFilterFormats)),
    ('out_samplerates', POINTER(AVFilterFormats)),
    ('in_channel_layouts', POINTER(AVFilterChannelLayouts)),
    ('out_channel_layouts', POINTER(AVFilterChannelLayouts)),
    ('request_samples', c_int),
    ('init_state', c_int),
    ('pool', POINTER(AVFilterPool)),
    ('graph', POINTER(AVFilterGraph)),
    ('current_pts', int64_t),
    ('age_index', c_int),
    ('frame_rate', AVRational),
    ('partial_buf', POINTER(AVFrame)),
    ('partial_buf_size', c_int),
    ('min_samples', c_int),
    ('max_samples', c_int),
    ('cur_buf_copy', POINTER(AVFilterBufferRef)),
    ('closed', c_int),
    ('channels', c_int),
    ('frame_requested', c_uint),
    ('flags', c_uint),
    ('frame_count', int64_t),
]
AVFilterChannelLayouts._fields_ = [
]
AVFilterPool._fields_ = [
]
avfilter_link = _libraries['/usr/lib/ffmpeg2.8/libavdevice.so'].avfilter_link
avfilter_link.restype = c_int
avfilter_link.argtypes = [POINTER(AVFilterContext), c_uint, POINTER(AVFilterContext), c_uint]
avfilter_link_free = _libraries['/usr/lib/ffmpeg2.8/libavdevice.so'].avfilter_link_free
avfilter_link_free.restype = None
avfilter_link_free.argtypes = [POINTER(POINTER(AVFilterLink))]
avfilter_link_get_channels = _libraries['/usr/lib/ffmpeg2.8/libavdevice.so'].avfilter_link_get_channels
avfilter_link_get_channels.restype = c_int
avfilter_link_get_channels.argtypes = [POINTER(AVFilterLink)]
avfilter_link_set_closed = _libraries['/usr/lib/ffmpeg2.8/libavdevice.so'].avfilter_link_set_closed
avfilter_link_set_closed.restype = None
avfilter_link_set_closed.argtypes = [POINTER(AVFilterLink), c_int]
avfilter_config_links = _libraries['/usr/lib/ffmpeg2.8/libavdevice.so'].avfilter_config_links
avfilter_config_links.restype = c_int
avfilter_config_links.argtypes = [POINTER(AVFilterContext)]
avfilter_get_video_buffer_ref_from_arrays = _libraries['/usr/lib/ffmpeg2.8/libavdevice.so'].avfilter_get_video_buffer_ref_from_arrays
avfilter_get_video_buffer_ref_from_arrays.restype = POINTER(AVFilterBufferRef)
avfilter_get_video_buffer_ref_from_arrays.argtypes = [POINTER(POINTER(uint8_t)), POINTER(c_int), c_int, c_int, c_int, AVPixelFormat]
avfilter_get_audio_buffer_ref_from_arrays = _libraries['/usr/lib/ffmpeg2.8/libavdevice.so'].avfilter_get_audio_buffer_ref_from_arrays
avfilter_get_audio_buffer_ref_from_arrays.restype = POINTER(AVFilterBufferRef)
avfilter_get_audio_buffer_ref_from_arrays.argtypes = [POINTER(POINTER(uint8_t)), c_int, c_int, c_int, AVSampleFormat, uint64_t]
avfilter_get_audio_buffer_ref_from_arrays_channels = _libraries['/usr/lib/ffmpeg2.8/libavdevice.so'].avfilter_get_audio_buffer_ref_from_arrays_channels
avfilter_get_audio_buffer_ref_from_arrays_channels.restype = POINTER(AVFilterBufferRef)
avfilter_get_audio_buffer_ref_from_arrays_channels.argtypes = [POINTER(POINTER(uint8_t)), c_int, c_int, c_int, AVSampleFormat, c_int, uint64_t]
avfilter_process_command = _libraries['/usr/lib/ffmpeg2.8/libavdevice.so'].avfilter_process_command
avfilter_process_command.restype = c_int
avfilter_process_command.argtypes = [POINTER(AVFilterContext), STRING, STRING, STRING, c_int, c_int]
avfilter_register_all = _libraries['/usr/lib/ffmpeg2.8/libavdevice.so'].avfilter_register_all
avfilter_register_all.restype = None
avfilter_register_all.argtypes = []
avfilter_uninit = _libraries['/usr/lib/ffmpeg2.8/libavdevice.so'].avfilter_uninit
avfilter_uninit.restype = None
avfilter_uninit.argtypes = []
avfilter_register = _libraries['/usr/lib/ffmpeg2.8/libavdevice.so'].avfilter_register
avfilter_register.restype = c_int
avfilter_register.argtypes = [POINTER(AVFilter)]
avfilter_get_by_name = _libraries['/usr/lib/ffmpeg2.8/libavdevice.so'].avfilter_get_by_name
avfilter_get_by_name.restype = POINTER(AVFilter)
avfilter_get_by_name.argtypes = [STRING]
avfilter_next = _libraries['/usr/lib/ffmpeg2.8/libavdevice.so'].avfilter_next
avfilter_next.restype = POINTER(AVFilter)
avfilter_next.argtypes = [POINTER(AVFilter)]
av_filter_next = _libraries['/usr/lib/ffmpeg2.8/libavdevice.so'].av_filter_next
av_filter_next.restype = POINTER(POINTER(AVFilter))
av_filter_next.argtypes = [POINTER(POINTER(AVFilter))]
avfilter_open = _libraries['/usr/lib/ffmpeg2.8/libavdevice.so'].avfilter_open
avfilter_open.restype = c_int
avfilter_open.argtypes = [POINTER(POINTER(AVFilterContext)), POINTER(AVFilter), STRING]
avfilter_init_filter = _libraries['/usr/lib/ffmpeg2.8/libavdevice.so'].avfilter_init_filter
avfilter_init_filter.restype = c_int
avfilter_init_filter.argtypes = [POINTER(AVFilterContext), STRING, c_void_p]
avfilter_init_str = _libraries['/usr/lib/ffmpeg2.8/libavdevice.so'].avfilter_init_str
avfilter_init_str.restype = c_int
avfilter_init_str.argtypes = [POINTER(AVFilterContext), STRING]
avfilter_init_dict = _libraries['/usr/lib/ffmpeg2.8/libavdevice.so'].avfilter_init_dict
avfilter_init_dict.restype = c_int
avfilter_init_dict.argtypes = [POINTER(AVFilterContext), POINTER(POINTER(AVDictionary))]
avfilter_free = _libraries['/usr/lib/ffmpeg2.8/libavdevice.so'].avfilter_free
avfilter_free.restype = None
avfilter_free.argtypes = [POINTER(AVFilterContext)]
avfilter_insert_filter = _libraries['/usr/lib/ffmpeg2.8/libavdevice.so'].avfilter_insert_filter
avfilter_insert_filter.restype = c_int
avfilter_insert_filter.argtypes = [POINTER(AVFilterLink), POINTER(AVFilterContext), c_uint, c_uint]
avfilter_copy_frame_props = _libraries['/usr/lib/ffmpeg2.8/libavdevice.so'].avfilter_copy_frame_props
avfilter_copy_frame_props.restype = c_int
avfilter_copy_frame_props.argtypes = [POINTER(AVFilterBufferRef), POINTER(AVFrame)]
avfilter_copy_buf_props = _libraries['/usr/lib/ffmpeg2.8/libavdevice.so'].avfilter_copy_buf_props
avfilter_copy_buf_props.restype = c_int
avfilter_copy_buf_props.argtypes = [POINTER(AVFrame), POINTER(AVFilterBufferRef)]
avfilter_get_class = _libraries['/usr/lib/ffmpeg2.8/libavdevice.so'].avfilter_get_class
avfilter_get_class.restype = POINTER(AVClass)
avfilter_get_class.argtypes = []
class AVFilterGraphInternal(Structure):
    pass
AVFilterGraphInternal._fields_ = [
]
avfilter_action_func = CFUNCTYPE(c_int, POINTER(AVFilterContext), c_void_p, c_int, c_int)
avfilter_execute_func = CFUNCTYPE(c_int, POINTER(AVFilterContext), POINTER(avfilter_action_func), c_void_p, POINTER(c_int), c_int)
AVFilterGraph._fields_ = [
    ('av_class', POINTER(AVClass)),
    ('filter_count_unused', c_uint),
    ('filters', POINTER(POINTER(AVFilterContext))),
    ('scale_sws_opts', STRING),
    ('resample_lavr_opts', STRING),
    ('nb_filters', c_uint),
    ('thread_type', c_int),
    ('nb_threads', c_int),
    ('internal', POINTER(AVFilterGraphInternal)),
    ('opaque', c_void_p),
    ('execute', POINTER(avfilter_execute_func)),
    ('aresample_swr_opts', STRING),
    ('sink_links', POINTER(POINTER(AVFilterLink))),
    ('sink_links_count', c_int),
    ('disable_auto_convert', c_uint),
]
avfilter_graph_alloc = _libraries['/usr/lib/ffmpeg2.8/libavdevice.so'].avfilter_graph_alloc
avfilter_graph_alloc.restype = POINTER(AVFilterGraph)
avfilter_graph_alloc.argtypes = []
avfilter_graph_alloc_filter = _libraries['/usr/lib/ffmpeg2.8/libavdevice.so'].avfilter_graph_alloc_filter
avfilter_graph_alloc_filter.restype = POINTER(AVFilterContext)
avfilter_graph_alloc_filter.argtypes = [POINTER(AVFilterGraph), POINTER(AVFilter), STRING]
avfilter_graph_get_filter = _libraries['/usr/lib/ffmpeg2.8/libavdevice.so'].avfilter_graph_get_filter
avfilter_graph_get_filter.restype = POINTER(AVFilterContext)
avfilter_graph_get_filter.argtypes = [POINTER(AVFilterGraph), STRING]
avfilter_graph_add_filter = _libraries['/usr/lib/ffmpeg2.8/libavdevice.so'].avfilter_graph_add_filter
avfilter_graph_add_filter.restype = c_int
avfilter_graph_add_filter.argtypes = [POINTER(AVFilterGraph), POINTER(AVFilterContext)]
avfilter_graph_create_filter = _libraries['/usr/lib/ffmpeg2.8/libavdevice.so'].avfilter_graph_create_filter
avfilter_graph_create_filter.restype = c_int
avfilter_graph_create_filter.argtypes = [POINTER(POINTER(AVFilterContext)), POINTER(AVFilter), STRING, STRING, c_void_p, POINTER(AVFilterGraph)]
avfilter_graph_set_auto_convert = _libraries['/usr/lib/ffmpeg2.8/libavdevice.so'].avfilter_graph_set_auto_convert
avfilter_graph_set_auto_convert.restype = None
avfilter_graph_set_auto_convert.argtypes = [POINTER(AVFilterGraph), c_uint]

# values for unnamed enumeration
avfilter_graph_config = _libraries['/usr/lib/ffmpeg2.8/libavdevice.so'].avfilter_graph_config
avfilter_graph_config.restype = c_int
avfilter_graph_config.argtypes = [POINTER(AVFilterGraph), c_void_p]
avfilter_graph_free = _libraries['/usr/lib/ffmpeg2.8/libavdevice.so'].avfilter_graph_free
avfilter_graph_free.restype = None
avfilter_graph_free.argtypes = [POINTER(POINTER(AVFilterGraph))]
class AVFilterInOut(Structure):
    pass
AVFilterInOut._fields_ = [
    ('name', STRING),
    ('filter_ctx', POINTER(AVFilterContext)),
    ('pad_idx', c_int),
    ('next', POINTER(AVFilterInOut)),
]
avfilter_inout_alloc = _libraries['/usr/lib/ffmpeg2.8/libavdevice.so'].avfilter_inout_alloc
avfilter_inout_alloc.restype = POINTER(AVFilterInOut)
avfilter_inout_alloc.argtypes = []
avfilter_inout_free = _libraries['/usr/lib/ffmpeg2.8/libavdevice.so'].avfilter_inout_free
avfilter_inout_free.restype = None
avfilter_inout_free.argtypes = [POINTER(POINTER(AVFilterInOut))]
avfilter_graph_parse = _libraries['/usr/lib/ffmpeg2.8/libavdevice.so'].avfilter_graph_parse
avfilter_graph_parse.restype = c_int
avfilter_graph_parse.argtypes = [POINTER(AVFilterGraph), STRING, POINTER(POINTER(AVFilterInOut)), POINTER(POINTER(AVFilterInOut)), c_void_p]
avfilter_graph_parse_ptr = _libraries['/usr/lib/ffmpeg2.8/libavdevice.so'].avfilter_graph_parse_ptr
avfilter_graph_parse_ptr.restype = c_int
avfilter_graph_parse_ptr.argtypes = [POINTER(AVFilterGraph), STRING, POINTER(POINTER(AVFilterInOut)), POINTER(POINTER(AVFilterInOut)), c_void_p]
avfilter_graph_parse2 = _libraries['/usr/lib/ffmpeg2.8/libavdevice.so'].avfilter_graph_parse2
avfilter_graph_parse2.restype = c_int
avfilter_graph_parse2.argtypes = [POINTER(AVFilterGraph), STRING, POINTER(POINTER(AVFilterInOut)), POINTER(POINTER(AVFilterInOut))]
avfilter_graph_send_command = _libraries['/usr/lib/ffmpeg2.8/libavdevice.so'].avfilter_graph_send_command
avfilter_graph_send_command.restype = c_int
avfilter_graph_send_command.argtypes = [POINTER(AVFilterGraph), STRING, STRING, STRING, STRING, c_int, c_int]
avfilter_graph_queue_command = _libraries['/usr/lib/ffmpeg2.8/libavdevice.so'].avfilter_graph_queue_command
avfilter_graph_queue_command.restype = c_int
avfilter_graph_queue_command.argtypes = [POINTER(AVFilterGraph), STRING, STRING, STRING, c_int, c_double]
avfilter_graph_dump = _libraries['/usr/lib/ffmpeg2.8/libavdevice.so'].avfilter_graph_dump
avfilter_graph_dump.restype = STRING
avfilter_graph_dump.argtypes = [POINTER(AVFilterGraph), STRING]
avfilter_graph_request_oldest = _libraries['/usr/lib/ffmpeg2.8/libavdevice.so'].avfilter_graph_request_oldest
avfilter_graph_request_oldest.restype = c_int
avfilter_graph_request_oldest.argtypes = [POINTER(AVFilterGraph)]
class AVIOContext(Structure):
    pass
av_get_packet = _libraries['/usr/lib/ffmpeg2.8/libavformat.so'].av_get_packet
av_get_packet.restype = c_int
av_get_packet.argtypes = [POINTER(AVIOContext), POINTER(AVPacket), c_int]
av_append_packet = _libraries['/usr/lib/ffmpeg2.8/libavformat.so'].av_append_packet
av_append_packet.restype = c_int
av_append_packet.argtypes = [POINTER(AVIOContext), POINTER(AVPacket), c_int]
class AVFrac(Structure):
    pass
AVFrac._fields_ = [
    ('val', int64_t),
    ('num', int64_t),
    ('den', int64_t),
]
class AVCodecTag(Structure):
    pass
AVCodecTag._fields_ = [
]
class AVProbeData(Structure):
    pass
AVProbeData._fields_ = [
    ('filename', STRING),
    ('buf', POINTER(c_ubyte)),
    ('buf_size', c_int),
]
class AVOutputFormat(Structure):
    pass
class AVFormatContext(Structure):
    pass
AVOutputFormat._fields_ = [
    ('name', STRING),
    ('long_name', STRING),
    ('mime_type', STRING),
    ('extensions', STRING),
    ('audio_codec', AVCodecID),
    ('video_codec', AVCodecID),
    ('subtitle_codec', AVCodecID),
    ('flags', c_int),
    ('codec_tag', POINTER(POINTER(AVCodecTag))),
    ('priv_class', POINTER(AVClass)),
    ('next', POINTER(AVOutputFormat)),
    ('priv_data_size', c_int),
    ('write_header', CFUNCTYPE(c_int, POINTER(AVFormatContext))),
    ('write_packet', CFUNCTYPE(c_int, POINTER(AVFormatContext), POINTER(AVPacket))),
    ('write_trailer', CFUNCTYPE(c_int, POINTER(AVFormatContext))),
    ('interleave_packet', CFUNCTYPE(c_int, POINTER(AVFormatContext), POINTER(AVPacket), POINTER(AVPacket), c_int)),
    ('query_codec', CFUNCTYPE(c_int, AVCodecID, c_int)),
    ('get_output_timestamp', CFUNCTYPE(None, POINTER(AVFormatContext), c_int, POINTER(int64_t), POINTER(int64_t))),
]
class AVInputFormat(Structure):
    pass
AVInputFormat._fields_ = [
    ('name', STRING),
    ('long_name', STRING),
    ('flags', c_int),
    ('extensions', STRING),
    ('codec_tag', POINTER(POINTER(AVCodecTag))),
    ('priv_class', POINTER(AVClass)),
    ('next', POINTER(AVInputFormat)),
    ('raw_codec_id', c_int),
    ('priv_data_size', c_int),
    ('read_probe', CFUNCTYPE(c_int, POINTER(AVProbeData))),
    ('read_header', CFUNCTYPE(c_int, POINTER(AVFormatContext))),
    ('read_packet', CFUNCTYPE(c_int, POINTER(AVFormatContext), POINTER(AVPacket))),
    ('read_close', CFUNCTYPE(c_int, POINTER(AVFormatContext))),
    ('read_seek', CFUNCTYPE(c_int, POINTER(AVFormatContext), c_int, int64_t, c_int)),
    ('read_timestamp', CFUNCTYPE(int64_t, POINTER(AVFormatContext), c_int, POINTER(int64_t), int64_t)),
    ('read_play', CFUNCTYPE(c_int, POINTER(AVFormatContext))),
    ('read_pause', CFUNCTYPE(c_int, POINTER(AVFormatContext))),
    ('read_seek2', CFUNCTYPE(c_int, POINTER(AVFormatContext), c_int, int64_t, int64_t, int64_t, c_int)),
]

# values for enumeration 'AVStreamParseType'
AVStreamParseType = c_int # enum
class AVIndexEntry(Structure):
    pass
AVIndexEntry._fields_ = [
    ('pos', int64_t),
    ('timestamp', int64_t),
    ('flags', c_int, 2),
    ('size', c_int, 30),
    ('min_distance', c_int),
]
class AVStream(Structure):
    pass
class N8AVStream4DOT_29E(Structure):
    pass
class AVPacketList(Structure):
    pass
AVStream._fields_ = [
    ('index', c_int),
    ('id', c_int),
    ('codec', POINTER(AVCodecContext)),
    ('priv_data', c_void_p),
    ('pts', AVFrac),
    ('time_base', AVRational),
    ('start_time', int64_t),
    ('duration', int64_t),
    ('nb_frames', int64_t),
    ('disposition', c_int),
    ('discard', AVDiscard),
    ('sample_aspect_ratio', AVRational),
    ('metadata', POINTER(AVDictionary)),
    ('avg_frame_rate', AVRational),
    ('attached_pic', AVPacket),
    ('info', POINTER(N8AVStream4DOT_29E)),
    ('pts_wrap_bits', c_int),
    ('reference_dts', int64_t),
    ('first_dts', int64_t),
    ('cur_dts', int64_t),
    ('last_IP_pts', int64_t),
    ('last_IP_duration', c_int),
    ('probe_packets', c_int),
    ('codec_info_nb_frames', c_int),
    ('need_parsing', AVStreamParseType),
    ('parser', POINTER(AVCodecParserContext)),
    ('last_in_packet_buffer', POINTER(AVPacketList)),
    ('probe_data', AVProbeData),
    ('pts_buffer', int64_t * 17),
    ('index_entries', POINTER(AVIndexEntry)),
    ('nb_index_entries', c_int),
    ('index_entries_allocated_size', c_uint),
    ('r_frame_rate', AVRational),
    ('stream_identifier', c_int),
    ('interleaver_chunk_size', int64_t),
    ('interleaver_chunk_duration', int64_t),
    ('request_probe', c_int),
    ('skip_to_keyframe', c_int),
    ('skip_samples', c_int),
    ('nb_decoded_frames', c_int),
    ('mux_ts_offset', int64_t),
    ('pts_wrap_reference', int64_t),
    ('pts_wrap_behavior', c_int),
]
N8AVStream4DOT_29E._fields_ = [
    ('last_dts', int64_t),
    ('duration_gcd', int64_t),
    ('duration_count', c_int),
    ('duration_error', POINTER(c_double * 726 * 2)),
    ('codec_info_duration', int64_t),
    ('codec_info_duration_fields', int64_t),
    ('found_decoder', c_int),
    ('last_duration', int64_t),
    ('fps_first_dts', int64_t),
    ('fps_first_dts_idx', c_int),
    ('fps_last_dts', int64_t),
    ('fps_last_dts_idx', c_int),
]
av_stream_get_r_frame_rate = _libraries['/usr/lib/ffmpeg2.8/libavformat.so'].av_stream_get_r_frame_rate
av_stream_get_r_frame_rate.restype = AVRational
av_stream_get_r_frame_rate.argtypes = [POINTER(AVStream)]
av_stream_set_r_frame_rate = _libraries['/usr/lib/ffmpeg2.8/libavformat.so'].av_stream_set_r_frame_rate
av_stream_set_r_frame_rate.restype = None
av_stream_set_r_frame_rate.argtypes = [POINTER(AVStream), AVRational]
class AVProgram(Structure):
    pass
AVProgram._fields_ = [
    ('id', c_int),
    ('flags', c_int),
    ('discard', AVDiscard),
    ('stream_index', POINTER(c_uint)),
    ('nb_stream_indexes', c_uint),
    ('metadata', POINTER(AVDictionary)),
    ('program_num', c_int),
    ('pmt_pid', c_int),
    ('pcr_pid', c_int),
    ('start_time', int64_t),
    ('end_time', int64_t),
    ('pts_wrap_reference', int64_t),
    ('pts_wrap_behavior', c_int),
]
class AVChapter(Structure):
    pass
AVChapter._fields_ = [
    ('id', c_int),
    ('time_base', AVRational),
    ('start', int64_t),
    ('end', int64_t),
    ('metadata', POINTER(AVDictionary)),
]

# values for enumeration 'AVDurationEstimationMethod'
AVDurationEstimationMethod = c_int # enum
class AVIOInterruptCB(Structure):
    pass
AVIOInterruptCB._fields_ = [
    ('callback', CFUNCTYPE(c_int, c_void_p)),
    ('opaque', c_void_p),
]
AVFormatContext._fields_ = [
    ('av_class', POINTER(AVClass)),
    ('iformat', POINTER(AVInputFormat)),
    ('oformat', POINTER(AVOutputFormat)),
    ('priv_data', c_void_p),
    ('pb', POINTER(AVIOContext)),
    ('ctx_flags', c_int),
    ('nb_streams', c_uint),
    ('streams', POINTER(POINTER(AVStream))),
    ('filename', c_char * 1024),
    ('start_time', int64_t),
    ('duration', int64_t),
    ('bit_rate', c_int),
    ('packet_size', c_uint),
    ('max_delay', c_int),
    ('flags', c_int),
    ('probesize', c_uint),
    ('max_analyze_duration', c_int),
    ('key', POINTER(uint8_t)),
    ('keylen', c_int),
    ('nb_programs', c_uint),
    ('programs', POINTER(POINTER(AVProgram))),
    ('video_codec_id', AVCodecID),
    ('audio_codec_id', AVCodecID),
    ('subtitle_codec_id', AVCodecID),
    ('max_index_size', c_uint),
    ('max_picture_buffer', c_uint),
    ('nb_chapters', c_uint),
    ('chapters', POINTER(POINTER(AVChapter))),
    ('metadata', POINTER(AVDictionary)),
    ('start_time_realtime', int64_t),
    ('fps_probe_size', c_int),
    ('error_recognition', c_int),
    ('interrupt_callback', AVIOInterruptCB),
    ('debug', c_int),
    ('ts_id', c_int),
    ('audio_preload', c_int),
    ('max_chunk_duration', c_int),
    ('max_chunk_size', c_int),
    ('use_wallclock_as_timestamps', c_int),
    ('avoid_negative_ts', c_int),
    ('avio_flags', c_int),
    ('duration_estimation_method', AVDurationEstimationMethod),
    ('skip_initial_bytes', c_uint),
    ('correct_ts_overflow', c_uint),
    ('seek2any', c_int),
    ('flush_packets', c_int),
    ('probe_score', c_int),
    ('packet_buffer', POINTER(AVPacketList)),
    ('packet_buffer_end', POINTER(AVPacketList)),
    ('data_offset', int64_t),
    ('raw_packet_buffer', POINTER(AVPacketList)),
    ('raw_packet_buffer_end', POINTER(AVPacketList)),
    ('parse_queue', POINTER(AVPacketList)),
    ('parse_queue_end', POINTER(AVPacketList)),
    ('raw_packet_buffer_remaining_size', c_int),
    ('offset', int64_t),
    ('offset_timebase', AVRational),
    ('io_repositioned', c_int),
    ('video_codec', POINTER(AVCodec)),
    ('audio_codec', POINTER(AVCodec)),
    ('subtitle_codec', POINTER(AVCodec)),
]
av_format_get_probe_score = _libraries['/usr/lib/ffmpeg2.8/libavformat.so'].av_format_get_probe_score
av_format_get_probe_score.restype = c_int
av_format_get_probe_score.argtypes = [POINTER(AVFormatContext)]
av_format_get_video_codec = _libraries['/usr/lib/ffmpeg2.8/libavformat.so'].av_format_get_video_codec
av_format_get_video_codec.restype = POINTER(AVCodec)
av_format_get_video_codec.argtypes = [POINTER(AVFormatContext)]
av_format_set_video_codec = _libraries['/usr/lib/ffmpeg2.8/libavformat.so'].av_format_set_video_codec
av_format_set_video_codec.restype = None
av_format_set_video_codec.argtypes = [POINTER(AVFormatContext), POINTER(AVCodec)]
av_format_get_audio_codec = _libraries['/usr/lib/ffmpeg2.8/libavformat.so'].av_format_get_audio_codec
av_format_get_audio_codec.restype = POINTER(AVCodec)
av_format_get_audio_codec.argtypes = [POINTER(AVFormatContext)]
av_format_set_audio_codec = _libraries['/usr/lib/ffmpeg2.8/libavformat.so'].av_format_set_audio_codec
av_format_set_audio_codec.restype = None
av_format_set_audio_codec.argtypes = [POINTER(AVFormatContext), POINTER(AVCodec)]
av_format_get_subtitle_codec = _libraries['/usr/lib/ffmpeg2.8/libavformat.so'].av_format_get_subtitle_codec
av_format_get_subtitle_codec.restype = POINTER(AVCodec)
av_format_get_subtitle_codec.argtypes = [POINTER(AVFormatContext)]
av_format_set_subtitle_codec = _libraries['/usr/lib/ffmpeg2.8/libavformat.so'].av_format_set_subtitle_codec
av_format_set_subtitle_codec.restype = None
av_format_set_subtitle_codec.argtypes = [POINTER(AVFormatContext), POINTER(AVCodec)]
av_fmt_ctx_get_duration_estimation_method = _libraries['/usr/lib/ffmpeg2.8/libavformat.so'].av_fmt_ctx_get_duration_estimation_method
av_fmt_ctx_get_duration_estimation_method.restype = AVDurationEstimationMethod
av_fmt_ctx_get_duration_estimation_method.argtypes = [POINTER(AVFormatContext)]
AVPacketList._fields_ = [
    ('pkt', AVPacket),
    ('next', POINTER(AVPacketList)),
]
avformat_version = _libraries['/usr/lib/ffmpeg2.8/libavformat.so'].avformat_version
avformat_version.restype = c_uint
avformat_version.argtypes = []
avformat_configuration = _libraries['/usr/lib/ffmpeg2.8/libavformat.so'].avformat_configuration
avformat_configuration.restype = STRING
avformat_configuration.argtypes = []
avformat_license = _libraries['/usr/lib/ffmpeg2.8/libavformat.so'].avformat_license
avformat_license.restype = STRING
avformat_license.argtypes = []
av_register_all = _libraries['/usr/lib/ffmpeg2.8/libavformat.so'].av_register_all
av_register_all.restype = None
av_register_all.argtypes = []
av_register_input_format = _libraries['/usr/lib/ffmpeg2.8/libavformat.so'].av_register_input_format
av_register_input_format.restype = None
av_register_input_format.argtypes = [POINTER(AVInputFormat)]
av_register_output_format = _libraries['/usr/lib/ffmpeg2.8/libavformat.so'].av_register_output_format
av_register_output_format.restype = None
av_register_output_format.argtypes = [POINTER(AVOutputFormat)]
avformat_network_init = _libraries['/usr/lib/ffmpeg2.8/libavformat.so'].avformat_network_init
avformat_network_init.restype = c_int
avformat_network_init.argtypes = []
avformat_network_deinit = _libraries['/usr/lib/ffmpeg2.8/libavformat.so'].avformat_network_deinit
avformat_network_deinit.restype = c_int
avformat_network_deinit.argtypes = []
av_iformat_next = _libraries['/usr/lib/ffmpeg2.8/libavformat.so'].av_iformat_next
av_iformat_next.restype = POINTER(AVInputFormat)
av_iformat_next.argtypes = [POINTER(AVInputFormat)]
av_oformat_next = _libraries['/usr/lib/ffmpeg2.8/libavformat.so'].av_oformat_next
av_oformat_next.restype = POINTER(AVOutputFormat)
av_oformat_next.argtypes = [POINTER(AVOutputFormat)]
avformat_alloc_context = _libraries['/usr/lib/ffmpeg2.8/libavformat.so'].avformat_alloc_context
avformat_alloc_context.restype = POINTER(AVFormatContext)
avformat_alloc_context.argtypes = []
avformat_free_context = _libraries['/usr/lib/ffmpeg2.8/libavformat.so'].avformat_free_context
avformat_free_context.restype = None
avformat_free_context.argtypes = [POINTER(AVFormatContext)]
avformat_get_class = _libraries['/usr/lib/ffmpeg2.8/libavformat.so'].avformat_get_class
avformat_get_class.restype = POINTER(AVClass)
avformat_get_class.argtypes = []
avformat_new_stream = _libraries['/usr/lib/ffmpeg2.8/libavformat.so'].avformat_new_stream
avformat_new_stream.restype = POINTER(AVStream)
avformat_new_stream.argtypes = [POINTER(AVFormatContext), POINTER(AVCodec)]
av_new_program = _libraries['/usr/lib/ffmpeg2.8/libavformat.so'].av_new_program
av_new_program.restype = POINTER(AVProgram)
av_new_program.argtypes = [POINTER(AVFormatContext), c_int]
avformat_alloc_output_context2 = _libraries['/usr/lib/ffmpeg2.8/libavformat.so'].avformat_alloc_output_context2
avformat_alloc_output_context2.restype = c_int
avformat_alloc_output_context2.argtypes = [POINTER(POINTER(AVFormatContext)), POINTER(AVOutputFormat), STRING, STRING]
av_find_input_format = _libraries['/usr/lib/ffmpeg2.8/libavformat.so'].av_find_input_format
av_find_input_format.restype = POINTER(AVInputFormat)
av_find_input_format.argtypes = [STRING]
av_probe_input_format = _libraries['/usr/lib/ffmpeg2.8/libavformat.so'].av_probe_input_format
av_probe_input_format.restype = POINTER(AVInputFormat)
av_probe_input_format.argtypes = [POINTER(AVProbeData), c_int]
av_probe_input_format2 = _libraries['/usr/lib/ffmpeg2.8/libavformat.so'].av_probe_input_format2
av_probe_input_format2.restype = POINTER(AVInputFormat)
av_probe_input_format2.argtypes = [POINTER(AVProbeData), c_int, POINTER(c_int)]
av_probe_input_format3 = _libraries['/usr/lib/ffmpeg2.8/libavformat.so'].av_probe_input_format3
av_probe_input_format3.restype = POINTER(AVInputFormat)
av_probe_input_format3.argtypes = [POINTER(AVProbeData), c_int, POINTER(c_int)]
av_probe_input_buffer2 = _libraries['/usr/lib/ffmpeg2.8/libavformat.so'].av_probe_input_buffer2
av_probe_input_buffer2.restype = c_int
av_probe_input_buffer2.argtypes = [POINTER(AVIOContext), POINTER(POINTER(AVInputFormat)), STRING, c_void_p, c_uint, c_uint]
av_probe_input_buffer = _libraries['/usr/lib/ffmpeg2.8/libavformat.so'].av_probe_input_buffer
av_probe_input_buffer.restype = c_int
av_probe_input_buffer.argtypes = [POINTER(AVIOContext), POINTER(POINTER(AVInputFormat)), STRING, c_void_p, c_uint, c_uint]
avformat_open_input = _libraries['/usr/lib/ffmpeg2.8/libavformat.so'].avformat_open_input
avformat_open_input.restype = c_int
avformat_open_input.argtypes = [POINTER(POINTER(AVFormatContext)), STRING, POINTER(AVInputFormat), POINTER(POINTER(AVDictionary))]
av_demuxer_open = _libraries['/usr/lib/ffmpeg2.8/libavformat.so'].av_demuxer_open
av_demuxer_open.restype = c_int
av_demuxer_open.argtypes = [POINTER(AVFormatContext)]
avformat_find_stream_info = _libraries['/usr/lib/ffmpeg2.8/libavformat.so'].avformat_find_stream_info
avformat_find_stream_info.restype = c_int
avformat_find_stream_info.argtypes = [POINTER(AVFormatContext), POINTER(POINTER(AVDictionary))]
av_find_program_from_stream = _libraries['/usr/lib/ffmpeg2.8/libavformat.so'].av_find_program_from_stream
av_find_program_from_stream.restype = POINTER(AVProgram)
av_find_program_from_stream.argtypes = [POINTER(AVFormatContext), POINTER(AVProgram), c_int]
av_find_best_stream = _libraries['/usr/lib/ffmpeg2.8/libavformat.so'].av_find_best_stream
av_find_best_stream.restype = c_int
av_find_best_stream.argtypes = [POINTER(AVFormatContext), AVMediaType, c_int, c_int, POINTER(POINTER(AVCodec)), c_int]
av_read_frame = _libraries['/usr/lib/ffmpeg2.8/libavformat.so'].av_read_frame
av_read_frame.restype = c_int
av_read_frame.argtypes = [POINTER(AVFormatContext), POINTER(AVPacket)]
av_seek_frame = _libraries['/usr/lib/ffmpeg2.8/libavformat.so'].av_seek_frame
av_seek_frame.restype = c_int
av_seek_frame.argtypes = [POINTER(AVFormatContext), c_int, int64_t, c_int]
avformat_seek_file = _libraries['/usr/lib/ffmpeg2.8/libavformat.so'].avformat_seek_file
avformat_seek_file.restype = c_int
avformat_seek_file.argtypes = [POINTER(AVFormatContext), c_int, int64_t, int64_t, int64_t, c_int]
av_read_play = _libraries['/usr/lib/ffmpeg2.8/libavformat.so'].av_read_play
av_read_play.restype = c_int
av_read_play.argtypes = [POINTER(AVFormatContext)]
av_read_pause = _libraries['/usr/lib/ffmpeg2.8/libavformat.so'].av_read_pause
av_read_pause.restype = c_int
av_read_pause.argtypes = [POINTER(AVFormatContext)]
avformat_close_input = _libraries['/usr/lib/ffmpeg2.8/libavformat.so'].avformat_close_input
avformat_close_input.restype = None
avformat_close_input.argtypes = [POINTER(POINTER(AVFormatContext))]
avformat_write_header = _libraries['/usr/lib/ffmpeg2.8/libavformat.so'].avformat_write_header
avformat_write_header.restype = c_int
avformat_write_header.argtypes = [POINTER(AVFormatContext), POINTER(POINTER(AVDictionary))]
av_write_frame = _libraries['/usr/lib/ffmpeg2.8/libavformat.so'].av_write_frame
av_write_frame.restype = c_int
av_write_frame.argtypes = [POINTER(AVFormatContext), POINTER(AVPacket)]
av_interleaved_write_frame = _libraries['/usr/lib/ffmpeg2.8/libavformat.so'].av_interleaved_write_frame
av_interleaved_write_frame.restype = c_int
av_interleaved_write_frame.argtypes = [POINTER(AVFormatContext), POINTER(AVPacket)]
av_write_trailer = _libraries['/usr/lib/ffmpeg2.8/libavformat.so'].av_write_trailer
av_write_trailer.restype = c_int
av_write_trailer.argtypes = [POINTER(AVFormatContext)]
av_guess_format = _libraries['/usr/lib/ffmpeg2.8/libavformat.so'].av_guess_format
av_guess_format.restype = POINTER(AVOutputFormat)
av_guess_format.argtypes = [STRING, STRING, STRING]
av_guess_codec = _libraries['/usr/lib/ffmpeg2.8/libavformat.so'].av_guess_codec
av_guess_codec.restype = AVCodecID
av_guess_codec.argtypes = [POINTER(AVOutputFormat), STRING, STRING, STRING, AVMediaType]
av_get_output_timestamp = _libraries['/usr/lib/ffmpeg2.8/libavformat.so'].av_get_output_timestamp
av_get_output_timestamp.restype = c_int
av_get_output_timestamp.argtypes = [POINTER(AVFormatContext), c_int, POINTER(int64_t), POINTER(int64_t)]
av_hex_dump = _libraries['/usr/lib/ffmpeg2.8/libavformat.so'].av_hex_dump
av_hex_dump.restype = None
av_hex_dump.argtypes = [POINTER(FILE), POINTER(uint8_t), c_int]
av_hex_dump_log = _libraries['/usr/lib/ffmpeg2.8/libavformat.so'].av_hex_dump_log
av_hex_dump_log.restype = None
av_hex_dump_log.argtypes = [c_void_p, c_int, POINTER(uint8_t), c_int]
av_pkt_dump2 = _libraries['/usr/lib/ffmpeg2.8/libavformat.so'].av_pkt_dump2
av_pkt_dump2.restype = None
av_pkt_dump2.argtypes = [POINTER(FILE), POINTER(AVPacket), c_int, POINTER(AVStream)]
av_pkt_dump_log2 = _libraries['/usr/lib/ffmpeg2.8/libavformat.so'].av_pkt_dump_log2
av_pkt_dump_log2.restype = None
av_pkt_dump_log2.argtypes = [c_void_p, c_int, POINTER(AVPacket), c_int, POINTER(AVStream)]
av_codec_get_id = _libraries['/usr/lib/ffmpeg2.8/libavformat.so'].av_codec_get_id
av_codec_get_id.restype = AVCodecID
av_codec_get_id.argtypes = [POINTER(POINTER(AVCodecTag)), c_uint]
av_codec_get_tag = _libraries['/usr/lib/ffmpeg2.8/libavformat.so'].av_codec_get_tag
av_codec_get_tag.restype = c_uint
av_codec_get_tag.argtypes = [POINTER(POINTER(AVCodecTag)), AVCodecID]
av_codec_get_tag2 = _libraries['/usr/lib/ffmpeg2.8/libavformat.so'].av_codec_get_tag2
av_codec_get_tag2.restype = c_int
av_codec_get_tag2.argtypes = [POINTER(POINTER(AVCodecTag)), AVCodecID, POINTER(c_uint)]
av_find_default_stream_index = _libraries['/usr/lib/ffmpeg2.8/libavformat.so'].av_find_default_stream_index
av_find_default_stream_index.restype = c_int
av_find_default_stream_index.argtypes = [POINTER(AVFormatContext)]
av_index_search_timestamp = _libraries['/usr/lib/ffmpeg2.8/libavformat.so'].av_index_search_timestamp
av_index_search_timestamp.restype = c_int
av_index_search_timestamp.argtypes = [POINTER(AVStream), int64_t, c_int]
av_add_index_entry = _libraries['/usr/lib/ffmpeg2.8/libavformat.so'].av_add_index_entry
av_add_index_entry.restype = c_int
av_add_index_entry.argtypes = [POINTER(AVStream), int64_t, int64_t, c_int, c_int, c_int]
av_url_split = _libraries['/usr/lib/ffmpeg2.8/libavformat.so'].av_url_split
av_url_split.restype = None
av_url_split.argtypes = [STRING, c_int, STRING, c_int, STRING, c_int, POINTER(c_int), STRING, c_int, STRING]
av_dump_format = _libraries['/usr/lib/ffmpeg2.8/libavformat.so'].av_dump_format
av_dump_format.restype = None
av_dump_format.argtypes = [POINTER(AVFormatContext), c_int, STRING, c_int]
av_get_frame_filename = _libraries['/usr/lib/ffmpeg2.8/libavformat.so'].av_get_frame_filename
av_get_frame_filename.restype = c_int
av_get_frame_filename.argtypes = [STRING, c_int, STRING, c_int]
av_filename_number_test = _libraries['/usr/lib/ffmpeg2.8/libavformat.so'].av_filename_number_test
av_filename_number_test.restype = c_int
av_filename_number_test.argtypes = [STRING]
av_sdp_create = _libraries['/usr/lib/ffmpeg2.8/libavformat.so'].av_sdp_create
av_sdp_create.restype = c_int
av_sdp_create.argtypes = [POINTER(POINTER(AVFormatContext)), c_int, STRING, c_int]
av_match_ext = _libraries['/usr/lib/ffmpeg2.8/libavformat.so'].av_match_ext
av_match_ext.restype = c_int
av_match_ext.argtypes = [STRING, STRING]
avformat_query_codec = _libraries['/usr/lib/ffmpeg2.8/libavformat.so'].avformat_query_codec
avformat_query_codec.restype = c_int
avformat_query_codec.argtypes = [POINTER(AVOutputFormat), AVCodecID, c_int]
avformat_get_riff_video_tags = _libraries['/usr/lib/ffmpeg2.8/libavformat.so'].avformat_get_riff_video_tags
avformat_get_riff_video_tags.restype = POINTER(AVCodecTag)
avformat_get_riff_video_tags.argtypes = []
avformat_get_riff_audio_tags = _libraries['/usr/lib/ffmpeg2.8/libavformat.so'].avformat_get_riff_audio_tags
avformat_get_riff_audio_tags.restype = POINTER(AVCodecTag)
avformat_get_riff_audio_tags.argtypes = []
av_guess_sample_aspect_ratio = _libraries['/usr/lib/ffmpeg2.8/libavformat.so'].av_guess_sample_aspect_ratio
av_guess_sample_aspect_ratio.restype = AVRational
av_guess_sample_aspect_ratio.argtypes = [POINTER(AVFormatContext), POINTER(AVStream), POINTER(AVFrame)]
av_guess_frame_rate = _libraries['/usr/lib/ffmpeg2.8/libavformat.so'].av_guess_frame_rate
av_guess_frame_rate.restype = AVRational
av_guess_frame_rate.argtypes = [POINTER(AVFormatContext), POINTER(AVStream), POINTER(AVFrame)]
avformat_match_stream_specifier = _libraries['/usr/lib/ffmpeg2.8/libavformat.so'].avformat_match_stream_specifier
avformat_match_stream_specifier.restype = c_int
avformat_match_stream_specifier.argtypes = [POINTER(AVFormatContext), POINTER(AVStream), STRING]
avformat_queue_attached_pictures = _libraries['/usr/lib/ffmpeg2.8/libavformat.so'].avformat_queue_attached_pictures
avformat_queue_attached_pictures.restype = c_int
avformat_queue_attached_pictures.argtypes = [POINTER(AVFormatContext)]
AVIOContext._fields_ = [
    ('av_class', POINTER(AVClass)),
    ('buffer', POINTER(c_ubyte)),
    ('buffer_size', c_int),
    ('buf_ptr', POINTER(c_ubyte)),
    ('buf_end', POINTER(c_ubyte)),
    ('opaque', c_void_p),
    ('read_packet', CFUNCTYPE(c_int, c_void_p, POINTER(uint8_t), c_int)),
    ('write_packet', CFUNCTYPE(c_int, c_void_p, POINTER(uint8_t), c_int)),
    ('seek', CFUNCTYPE(int64_t, c_void_p, int64_t, c_int)),
    ('pos', int64_t),
    ('must_flush', c_int),
    ('eof_reached', c_int),
    ('write_flag', c_int),
    ('max_packet_size', c_int),
    ('checksum', c_ulong),
    ('checksum_ptr', POINTER(c_ubyte)),
    ('update_checksum', CFUNCTYPE(c_ulong, c_ulong, POINTER(uint8_t), c_uint)),
    ('error', c_int),
    ('read_pause', CFUNCTYPE(c_int, c_void_p, c_int)),
    ('read_seek', CFUNCTYPE(int64_t, c_void_p, c_int, int64_t, c_int)),
    ('seekable', c_int),
    ('maxsize', int64_t),
    ('direct', c_int),
    ('bytes_read', int64_t),
    ('seek_count', c_int),
    ('writeout_count', c_int),
]
avio_check = _libraries['/usr/lib/ffmpeg2.8/libavformat.so'].avio_check
avio_check.restype = c_int
avio_check.argtypes = [STRING, c_int]
avio_alloc_context = _libraries['/usr/lib/ffmpeg2.8/libavformat.so'].avio_alloc_context
avio_alloc_context.restype = POINTER(AVIOContext)
avio_alloc_context.argtypes = [POINTER(c_ubyte), c_int, c_int, c_void_p, CFUNCTYPE(c_int, c_void_p, POINTER(uint8_t), c_int), CFUNCTYPE(c_int, c_void_p, POINTER(uint8_t), c_int), CFUNCTYPE(int64_t, c_void_p, int64_t, c_int)]
avio_w8 = _libraries['/usr/lib/ffmpeg2.8/libavformat.so'].avio_w8
avio_w8.restype = None
avio_w8.argtypes = [POINTER(AVIOContext), c_int]
avio_write = _libraries['/usr/lib/ffmpeg2.8/libavformat.so'].avio_write
avio_write.restype = None
avio_write.argtypes = [POINTER(AVIOContext), POINTER(c_ubyte), c_int]
avio_wl64 = _libraries['/usr/lib/ffmpeg2.8/libavformat.so'].avio_wl64
avio_wl64.restype = None
avio_wl64.argtypes = [POINTER(AVIOContext), uint64_t]
avio_wb64 = _libraries['/usr/lib/ffmpeg2.8/libavformat.so'].avio_wb64
avio_wb64.restype = None
avio_wb64.argtypes = [POINTER(AVIOContext), uint64_t]
avio_wl32 = _libraries['/usr/lib/ffmpeg2.8/libavformat.so'].avio_wl32
avio_wl32.restype = None
avio_wl32.argtypes = [POINTER(AVIOContext), c_uint]
avio_wb32 = _libraries['/usr/lib/ffmpeg2.8/libavformat.so'].avio_wb32
avio_wb32.restype = None
avio_wb32.argtypes = [POINTER(AVIOContext), c_uint]
avio_wl24 = _libraries['/usr/lib/ffmpeg2.8/libavformat.so'].avio_wl24
avio_wl24.restype = None
avio_wl24.argtypes = [POINTER(AVIOContext), c_uint]
avio_wb24 = _libraries['/usr/lib/ffmpeg2.8/libavformat.so'].avio_wb24
avio_wb24.restype = None
avio_wb24.argtypes = [POINTER(AVIOContext), c_uint]
avio_wl16 = _libraries['/usr/lib/ffmpeg2.8/libavformat.so'].avio_wl16
avio_wl16.restype = None
avio_wl16.argtypes = [POINTER(AVIOContext), c_uint]
avio_wb16 = _libraries['/usr/lib/ffmpeg2.8/libavformat.so'].avio_wb16
avio_wb16.restype = None
avio_wb16.argtypes = [POINTER(AVIOContext), c_uint]
avio_put_str = _libraries['/usr/lib/ffmpeg2.8/libavformat.so'].avio_put_str
avio_put_str.restype = c_int
avio_put_str.argtypes = [POINTER(AVIOContext), STRING]
avio_put_str16le = _libraries['/usr/lib/ffmpeg2.8/libavformat.so'].avio_put_str16le
avio_put_str16le.restype = c_int
avio_put_str16le.argtypes = [POINTER(AVIOContext), STRING]
avio_seek = _libraries['/usr/lib/ffmpeg2.8/libavformat.so'].avio_seek
avio_seek.restype = int64_t
avio_seek.argtypes = [POINTER(AVIOContext), int64_t, c_int]
avio_skip = _libraries['/usr/lib/ffmpeg2.8/libavformat.so'].avio_skip
avio_skip.restype = int64_t
avio_skip.argtypes = [POINTER(AVIOContext), int64_t]
avio_size = _libraries['/usr/lib/ffmpeg2.8/libavformat.so'].avio_size
avio_size.restype = int64_t
avio_size.argtypes = [POINTER(AVIOContext)]
url_feof = _libraries['/usr/lib/ffmpeg2.8/libavformat.so'].url_feof
url_feof.restype = c_int
url_feof.argtypes = [POINTER(AVIOContext)]
avio_printf = _libraries['/usr/lib/ffmpeg2.8/libavformat.so'].avio_printf
avio_printf.restype = c_int
avio_printf.argtypes = [POINTER(AVIOContext), STRING]
avio_flush = _libraries['/usr/lib/ffmpeg2.8/libavformat.so'].avio_flush
avio_flush.restype = None
avio_flush.argtypes = [POINTER(AVIOContext)]
avio_read = _libraries['/usr/lib/ffmpeg2.8/libavformat.so'].avio_read
avio_read.restype = c_int
avio_read.argtypes = [POINTER(AVIOContext), POINTER(c_ubyte), c_int]
avio_r8 = _libraries['/usr/lib/ffmpeg2.8/libavformat.so'].avio_r8
avio_r8.restype = c_int
avio_r8.argtypes = [POINTER(AVIOContext)]
avio_rl16 = _libraries['/usr/lib/ffmpeg2.8/libavformat.so'].avio_rl16
avio_rl16.restype = c_uint
avio_rl16.argtypes = [POINTER(AVIOContext)]
avio_rl24 = _libraries['/usr/lib/ffmpeg2.8/libavformat.so'].avio_rl24
avio_rl24.restype = c_uint
avio_rl24.argtypes = [POINTER(AVIOContext)]
avio_rl32 = _libraries['/usr/lib/ffmpeg2.8/libavformat.so'].avio_rl32
avio_rl32.restype = c_uint
avio_rl32.argtypes = [POINTER(AVIOContext)]
avio_rl64 = _libraries['/usr/lib/ffmpeg2.8/libavformat.so'].avio_rl64
avio_rl64.restype = uint64_t
avio_rl64.argtypes = [POINTER(AVIOContext)]
avio_rb16 = _libraries['/usr/lib/ffmpeg2.8/libavformat.so'].avio_rb16
avio_rb16.restype = c_uint
avio_rb16.argtypes = [POINTER(AVIOContext)]
avio_rb24 = _libraries['/usr/lib/ffmpeg2.8/libavformat.so'].avio_rb24
avio_rb24.restype = c_uint
avio_rb24.argtypes = [POINTER(AVIOContext)]
avio_rb32 = _libraries['/usr/lib/ffmpeg2.8/libavformat.so'].avio_rb32
avio_rb32.restype = c_uint
avio_rb32.argtypes = [POINTER(AVIOContext)]
avio_rb64 = _libraries['/usr/lib/ffmpeg2.8/libavformat.so'].avio_rb64
avio_rb64.restype = uint64_t
avio_rb64.argtypes = [POINTER(AVIOContext)]
avio_get_str = _libraries['/usr/lib/ffmpeg2.8/libavformat.so'].avio_get_str
avio_get_str.restype = c_int
avio_get_str.argtypes = [POINTER(AVIOContext), c_int, STRING, c_int]
avio_get_str16le = _libraries['/usr/lib/ffmpeg2.8/libavformat.so'].avio_get_str16le
avio_get_str16le.restype = c_int
avio_get_str16le.argtypes = [POINTER(AVIOContext), c_int, STRING, c_int]
avio_get_str16be = _libraries['/usr/lib/ffmpeg2.8/libavformat.so'].avio_get_str16be
avio_get_str16be.restype = c_int
avio_get_str16be.argtypes = [POINTER(AVIOContext), c_int, STRING, c_int]
avio_open = _libraries['/usr/lib/ffmpeg2.8/libavformat.so'].avio_open
avio_open.restype = c_int
avio_open.argtypes = [POINTER(POINTER(AVIOContext)), STRING, c_int]
avio_open2 = _libraries['/usr/lib/ffmpeg2.8/libavformat.so'].avio_open2
avio_open2.restype = c_int
avio_open2.argtypes = [POINTER(POINTER(AVIOContext)), STRING, c_int, POINTER(AVIOInterruptCB), POINTER(POINTER(AVDictionary))]
avio_close = _libraries['/usr/lib/ffmpeg2.8/libavformat.so'].avio_close
avio_close.restype = c_int
avio_close.argtypes = [POINTER(AVIOContext)]
avio_closep = _libraries['/usr/lib/ffmpeg2.8/libavformat.so'].avio_closep
avio_closep.restype = c_int
avio_closep.argtypes = [POINTER(POINTER(AVIOContext))]
avio_open_dyn_buf = _libraries['/usr/lib/ffmpeg2.8/libavformat.so'].avio_open_dyn_buf
avio_open_dyn_buf.restype = c_int
avio_open_dyn_buf.argtypes = [POINTER(POINTER(AVIOContext))]
avio_close_dyn_buf = _libraries['/usr/lib/ffmpeg2.8/libavformat.so'].avio_close_dyn_buf
avio_close_dyn_buf.restype = c_int
avio_close_dyn_buf.argtypes = [POINTER(AVIOContext), POINTER(POINTER(uint8_t))]
avio_enum_protocols = _libraries['/usr/lib/ffmpeg2.8/libavformat.so'].avio_enum_protocols
avio_enum_protocols.restype = STRING
avio_enum_protocols.argtypes = [POINTER(c_void_p), c_int]
avio_pause = _libraries['/usr/lib/ffmpeg2.8/libavformat.so'].avio_pause
avio_pause.restype = c_int
avio_pause.argtypes = [POINTER(AVIOContext), c_int]
avio_seek_time = _libraries['/usr/lib/ffmpeg2.8/libavformat.so'].avio_seek_time
avio_seek_time.restype = int64_t
avio_seek_time.argtypes = [POINTER(AVIOContext), c_int, int64_t, c_int]
class AVAudioResampleContext(Structure):
    pass
AVAudioResampleContext._fields_ = [
]

# values for enumeration 'AVMixCoeffType'
AVMixCoeffType = c_int # enum

# values for enumeration 'AVResampleFilterType'
AVResampleFilterType = c_int # enum

# values for enumeration 'AVResampleDitherMethod'
AVResampleDitherMethod = c_int # enum
avresample_version = _libraries['/usr/lib/ffmpeg2.8/libavdevice.so'].avresample_version
avresample_version.restype = c_uint
avresample_version.argtypes = []
avresample_configuration = _libraries['/usr/lib/ffmpeg2.8/libavdevice.so'].avresample_configuration
avresample_configuration.restype = STRING
avresample_configuration.argtypes = []
avresample_license = _libraries['/usr/lib/ffmpeg2.8/libavdevice.so'].avresample_license
avresample_license.restype = STRING
avresample_license.argtypes = []
avresample_get_class = _libraries['/usr/lib/ffmpeg2.8/libavdevice.so'].avresample_get_class
avresample_get_class.restype = POINTER(AVClass)
avresample_get_class.argtypes = []
avresample_alloc_context = _libraries['/usr/lib/ffmpeg2.8/libavdevice.so'].avresample_alloc_context
avresample_alloc_context.restype = POINTER(AVAudioResampleContext)
avresample_alloc_context.argtypes = []
avresample_open = _libraries['/usr/lib/ffmpeg2.8/libavdevice.so'].avresample_open
avresample_open.restype = c_int
avresample_open.argtypes = [POINTER(AVAudioResampleContext)]
avresample_close = _libraries['/usr/lib/ffmpeg2.8/libavdevice.so'].avresample_close
avresample_close.restype = None
avresample_close.argtypes = [POINTER(AVAudioResampleContext)]
avresample_free = _libraries['/usr/lib/ffmpeg2.8/libavdevice.so'].avresample_free
avresample_free.restype = None
avresample_free.argtypes = [POINTER(POINTER(AVAudioResampleContext))]

# values for enumeration 'AVMatrixEncoding'
AVMatrixEncoding = c_int # enum
avresample_build_matrix = _libraries['/usr/lib/ffmpeg2.8/libavdevice.so'].avresample_build_matrix
avresample_build_matrix.restype = c_int
avresample_build_matrix.argtypes = [uint64_t, uint64_t, c_double, c_double, c_double, c_int, POINTER(c_double), c_int, AVMatrixEncoding]
avresample_get_matrix = _libraries['/usr/lib/ffmpeg2.8/libavdevice.so'].avresample_get_matrix
avresample_get_matrix.restype = c_int
avresample_get_matrix.argtypes = [POINTER(AVAudioResampleContext), POINTER(c_double), c_int]
avresample_set_matrix = _libraries['/usr/lib/ffmpeg2.8/libavdevice.so'].avresample_set_matrix
avresample_set_matrix.restype = c_int
avresample_set_matrix.argtypes = [POINTER(AVAudioResampleContext), POINTER(c_double), c_int]
avresample_set_channel_mapping = _libraries['/usr/lib/ffmpeg2.8/libavdevice.so'].avresample_set_channel_mapping
avresample_set_channel_mapping.restype = c_int
avresample_set_channel_mapping.argtypes = [POINTER(AVAudioResampleContext), POINTER(c_int)]
avresample_set_compensation = _libraries['/usr/lib/ffmpeg2.8/libavdevice.so'].avresample_set_compensation
avresample_set_compensation.restype = c_int
avresample_set_compensation.argtypes = [POINTER(AVAudioResampleContext), c_int, c_int]
avresample_convert = _libraries['/usr/lib/ffmpeg2.8/libavdevice.so'].avresample_convert
avresample_convert.restype = c_int
avresample_convert.argtypes = [POINTER(AVAudioResampleContext), POINTER(POINTER(uint8_t)), c_int, c_int, POINTER(POINTER(uint8_t)), c_int, c_int]
avresample_get_delay = _libraries['/usr/lib/ffmpeg2.8/libavdevice.so'].avresample_get_delay
avresample_get_delay.restype = c_int
avresample_get_delay.argtypes = [POINTER(AVAudioResampleContext)]
avresample_available = _libraries['/usr/lib/ffmpeg2.8/libavdevice.so'].avresample_available
avresample_available.restype = c_int
avresample_available.argtypes = [POINTER(AVAudioResampleContext)]
avresample_read = _libraries['/usr/lib/ffmpeg2.8/libavdevice.so'].avresample_read
avresample_read.restype = c_int
avresample_read.argtypes = [POINTER(AVAudioResampleContext), POINTER(POINTER(uint8_t)), c_int]
avutil_version = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].avutil_version
avutil_version.restype = c_uint
avutil_version.argtypes = []
avutil_configuration = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].avutil_configuration
avutil_configuration.restype = STRING
avutil_configuration.argtypes = []
avutil_license = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].avutil_license
avutil_license.restype = STRING
avutil_license.argtypes = []
av_get_media_type_string = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_get_media_type_string
av_get_media_type_string.restype = STRING
av_get_media_type_string.argtypes = [AVMediaType]
av_get_picture_type_char = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_get_picture_type_char
av_get_picture_type_char.restype = c_char
av_get_picture_type_char.argtypes = [AVPictureType]
av_int_list_length_for_size = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_int_list_length_for_size
av_int_list_length_for_size.restype = c_uint
av_int_list_length_for_size.argtypes = [c_uint, c_void_p, uint64_t]
class AVBuffer(Structure):
    pass
AVBuffer._fields_ = [
]
AVBufferRef._fields_ = [
    ('buffer', POINTER(AVBuffer)),
    ('data', POINTER(uint8_t)),
    ('size', c_int),
]
av_buffer_alloc = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_buffer_alloc
av_buffer_alloc.restype = POINTER(AVBufferRef)
av_buffer_alloc.argtypes = [c_int]
av_buffer_allocz = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_buffer_allocz
av_buffer_allocz.restype = POINTER(AVBufferRef)
av_buffer_allocz.argtypes = [c_int]
av_buffer_create = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_buffer_create
av_buffer_create.restype = POINTER(AVBufferRef)
av_buffer_create.argtypes = [POINTER(uint8_t), c_int, CFUNCTYPE(None, c_void_p, POINTER(uint8_t)), c_void_p, c_int]
av_buffer_default_free = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_buffer_default_free
av_buffer_default_free.restype = None
av_buffer_default_free.argtypes = [c_void_p, POINTER(uint8_t)]
av_buffer_ref = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_buffer_ref
av_buffer_ref.restype = POINTER(AVBufferRef)
av_buffer_ref.argtypes = [POINTER(AVBufferRef)]
av_buffer_unref = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_buffer_unref
av_buffer_unref.restype = None
av_buffer_unref.argtypes = [POINTER(POINTER(AVBufferRef))]
av_buffer_is_writable = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_buffer_is_writable
av_buffer_is_writable.restype = c_int
av_buffer_is_writable.argtypes = [POINTER(AVBufferRef)]
av_buffer_get_opaque = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_buffer_get_opaque
av_buffer_get_opaque.restype = c_void_p
av_buffer_get_opaque.argtypes = [POINTER(AVBufferRef)]
av_buffer_get_ref_count = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_buffer_get_ref_count
av_buffer_get_ref_count.restype = c_int
av_buffer_get_ref_count.argtypes = [POINTER(AVBufferRef)]
av_buffer_make_writable = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_buffer_make_writable
av_buffer_make_writable.restype = c_int
av_buffer_make_writable.argtypes = [POINTER(POINTER(AVBufferRef))]
av_buffer_realloc = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_buffer_realloc
av_buffer_realloc.restype = c_int
av_buffer_realloc.argtypes = [POINTER(POINTER(AVBufferRef)), c_int]
class AVBufferPool(Structure):
    pass
AVBufferPool._fields_ = [
]
av_buffer_pool_init = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_buffer_pool_init
av_buffer_pool_init.restype = POINTER(AVBufferPool)
av_buffer_pool_init.argtypes = [c_int, CFUNCTYPE(POINTER(AVBufferRef), c_int)]
av_buffer_pool_uninit = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_buffer_pool_uninit
av_buffer_pool_uninit.restype = None
av_buffer_pool_uninit.argtypes = [POINTER(POINTER(AVBufferPool))]
av_buffer_pool_get = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_buffer_pool_get
av_buffer_pool_get.restype = POINTER(AVBufferRef)
av_buffer_pool_get.argtypes = [POINTER(AVBufferPool)]
av_get_channel_layout = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_get_channel_layout
av_get_channel_layout.restype = uint64_t
av_get_channel_layout.argtypes = [STRING]
av_get_channel_layout_string = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_get_channel_layout_string
av_get_channel_layout_string.restype = None
av_get_channel_layout_string.argtypes = [STRING, c_int, c_int, uint64_t]
class AVBPrint(Structure):
    pass
AVBPrint._fields_ = [
]
av_bprint_channel_layout = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_bprint_channel_layout
av_bprint_channel_layout.restype = None
av_bprint_channel_layout.argtypes = [POINTER(AVBPrint), c_int, uint64_t]
av_get_channel_layout_nb_channels = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_get_channel_layout_nb_channels
av_get_channel_layout_nb_channels.restype = c_int
av_get_channel_layout_nb_channels.argtypes = [uint64_t]
av_get_default_channel_layout = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_get_default_channel_layout
av_get_default_channel_layout.restype = int64_t
av_get_default_channel_layout.argtypes = [c_int]
av_get_channel_layout_channel_index = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_get_channel_layout_channel_index
av_get_channel_layout_channel_index.restype = c_int
av_get_channel_layout_channel_index.argtypes = [uint64_t, uint64_t]
av_channel_layout_extract_channel = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_channel_layout_extract_channel
av_channel_layout_extract_channel.restype = uint64_t
av_channel_layout_extract_channel.argtypes = [uint64_t, c_int]
av_get_channel_name = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_get_channel_name
av_get_channel_name.restype = STRING
av_get_channel_name.argtypes = [uint64_t]
av_get_channel_description = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_get_channel_description
av_get_channel_description.restype = STRING
av_get_channel_description.argtypes = [uint64_t]
av_get_standard_channel_layout = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_get_standard_channel_layout
av_get_standard_channel_layout.restype = c_int
av_get_standard_channel_layout.argtypes = [c_uint, POINTER(uint64_t), POINTER(STRING)]
av_reverse = (uint8_t * 256).in_dll(_libraries['/usr/lib/ffmpeg2.8/libavcodec.so'], 'av_reverse')
av_log2 = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_log2
av_log2.restype = c_int
av_log2.argtypes = [c_uint]
av_log2_16bit = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_log2_16bit
av_log2_16bit.restype = c_int
av_log2_16bit.argtypes = [c_uint]
av_get_cpu_flags = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_get_cpu_flags
av_get_cpu_flags.restype = c_int
av_get_cpu_flags.argtypes = []
av_force_cpu_flags = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_force_cpu_flags
av_force_cpu_flags.restype = None
av_force_cpu_flags.argtypes = [c_int]
av_set_cpu_flags_mask = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_set_cpu_flags_mask
av_set_cpu_flags_mask.restype = None
av_set_cpu_flags_mask.argtypes = [c_int]
av_parse_cpu_flags = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_parse_cpu_flags
av_parse_cpu_flags.restype = c_int
av_parse_cpu_flags.argtypes = [STRING]
av_parse_cpu_caps = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_parse_cpu_caps
av_parse_cpu_caps.restype = c_int
av_parse_cpu_caps.argtypes = [POINTER(c_uint), STRING]
av_cpu_count = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_cpu_count
av_cpu_count.restype = c_int
av_cpu_count.argtypes = []
class AVDictionaryEntry(Structure):
    pass
AVDictionaryEntry._fields_ = [
    ('key', STRING),
    ('value', STRING),
]
AVDictionary._fields_ = [
]
av_dict_get = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_dict_get
av_dict_get.restype = POINTER(AVDictionaryEntry)
av_dict_get.argtypes = [POINTER(AVDictionary), STRING, POINTER(AVDictionaryEntry), c_int]
av_dict_count = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_dict_count
av_dict_count.restype = c_int
av_dict_count.argtypes = [POINTER(AVDictionary)]
av_dict_set = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_dict_set
av_dict_set.restype = c_int
av_dict_set.argtypes = [POINTER(POINTER(AVDictionary)), STRING, STRING, c_int]
av_dict_parse_string = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_dict_parse_string
av_dict_parse_string.restype = c_int
av_dict_parse_string.argtypes = [POINTER(POINTER(AVDictionary)), STRING, STRING, STRING, c_int]
av_dict_copy = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_dict_copy
av_dict_copy.restype = None
av_dict_copy.argtypes = [POINTER(POINTER(AVDictionary)), POINTER(AVDictionary), c_int]
av_dict_free = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_dict_free
av_dict_free.restype = None
av_dict_free.argtypes = [POINTER(POINTER(AVDictionary))]
av_strerror = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_strerror
av_strerror.restype = c_int
av_strerror.argtypes = [c_int, STRING, size_t]

# values for enumeration 'AVFrameSideDataType'
AVFrameSideDataType = c_int # enum
class AVFrameSideData(Structure):
    pass
AVFrameSideData._fields_ = [
    ('type', AVFrameSideDataType),
    ('data', POINTER(uint8_t)),
    ('size', c_int),
    ('metadata', POINTER(AVDictionary)),
]
AVFrame._fields_ = [
    ('data', POINTER(uint8_t) * 8),
    ('linesize', c_int * 8),
    ('extended_data', POINTER(POINTER(uint8_t))),
    ('width', c_int),
    ('height', c_int),
    ('nb_samples', c_int),
    ('format', c_int),
    ('key_frame', c_int),
    ('pict_type', AVPictureType),
    ('base', POINTER(uint8_t) * 8),
    ('sample_aspect_ratio', AVRational),
    ('pts', int64_t),
    ('pkt_pts', int64_t),
    ('pkt_dts', int64_t),
    ('coded_picture_number', c_int),
    ('display_picture_number', c_int),
    ('quality', c_int),
    ('reference', c_int),
    ('qscale_table', POINTER(int8_t)),
    ('qstride', c_int),
    ('qscale_type', c_int),
    ('mbskip_table', POINTER(uint8_t)),
    ('motion_val', POINTER(int16_t * 2) * 2),
    ('mb_type', POINTER(uint32_t)),
    ('dct_coeff', POINTER(c_short)),
    ('ref_index', POINTER(int8_t) * 2),
    ('opaque', c_void_p),
    ('error', uint64_t * 8),
    ('type', c_int),
    ('repeat_pict', c_int),
    ('interlaced_frame', c_int),
    ('top_field_first', c_int),
    ('palette_has_changed', c_int),
    ('buffer_hints', c_int),
    ('pan_scan', POINTER(AVPanScan)),
    ('reordered_opaque', int64_t),
    ('hwaccel_picture_private', c_void_p),
    ('owner', POINTER(AVCodecContext)),
    ('thread_opaque', c_void_p),
    ('motion_subsample_log2', uint8_t),
    ('sample_rate', c_int),
    ('channel_layout', uint64_t),
    ('buf', POINTER(AVBufferRef) * 8),
    ('extended_buf', POINTER(POINTER(AVBufferRef))),
    ('nb_extended_buf', c_int),
    ('side_data', POINTER(POINTER(AVFrameSideData))),
    ('nb_side_data', c_int),
    ('best_effort_timestamp', int64_t),
    ('pkt_pos', int64_t),
    ('pkt_duration', int64_t),
    ('metadata', POINTER(AVDictionary)),
    ('decode_error_flags', c_int),
    ('channels', c_int),
    ('pkt_size', c_int),
    ('colorspace', AVColorSpace),
    ('color_range', AVColorRange),
    ('qp_table_buf', POINTER(AVBufferRef)),
]
av_frame_get_best_effort_timestamp = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_frame_get_best_effort_timestamp
av_frame_get_best_effort_timestamp.restype = int64_t
av_frame_get_best_effort_timestamp.argtypes = [POINTER(AVFrame)]
av_frame_set_best_effort_timestamp = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_frame_set_best_effort_timestamp
av_frame_set_best_effort_timestamp.restype = None
av_frame_set_best_effort_timestamp.argtypes = [POINTER(AVFrame), int64_t]
av_frame_get_pkt_duration = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_frame_get_pkt_duration
av_frame_get_pkt_duration.restype = int64_t
av_frame_get_pkt_duration.argtypes = [POINTER(AVFrame)]
av_frame_set_pkt_duration = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_frame_set_pkt_duration
av_frame_set_pkt_duration.restype = None
av_frame_set_pkt_duration.argtypes = [POINTER(AVFrame), int64_t]
av_frame_get_pkt_pos = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_frame_get_pkt_pos
av_frame_get_pkt_pos.restype = int64_t
av_frame_get_pkt_pos.argtypes = [POINTER(AVFrame)]
av_frame_set_pkt_pos = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_frame_set_pkt_pos
av_frame_set_pkt_pos.restype = None
av_frame_set_pkt_pos.argtypes = [POINTER(AVFrame), int64_t]
av_frame_get_channel_layout = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_frame_get_channel_layout
av_frame_get_channel_layout.restype = int64_t
av_frame_get_channel_layout.argtypes = [POINTER(AVFrame)]
av_frame_set_channel_layout = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_frame_set_channel_layout
av_frame_set_channel_layout.restype = None
av_frame_set_channel_layout.argtypes = [POINTER(AVFrame), int64_t]
av_frame_get_channels = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_frame_get_channels
av_frame_get_channels.restype = c_int
av_frame_get_channels.argtypes = [POINTER(AVFrame)]
av_frame_set_channels = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_frame_set_channels
av_frame_set_channels.restype = None
av_frame_set_channels.argtypes = [POINTER(AVFrame), c_int]
av_frame_get_sample_rate = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_frame_get_sample_rate
av_frame_get_sample_rate.restype = c_int
av_frame_get_sample_rate.argtypes = [POINTER(AVFrame)]
av_frame_set_sample_rate = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_frame_set_sample_rate
av_frame_set_sample_rate.restype = None
av_frame_set_sample_rate.argtypes = [POINTER(AVFrame), c_int]
av_frame_get_metadata = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_frame_get_metadata
av_frame_get_metadata.restype = POINTER(AVDictionary)
av_frame_get_metadata.argtypes = [POINTER(AVFrame)]
av_frame_set_metadata = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_frame_set_metadata
av_frame_set_metadata.restype = None
av_frame_set_metadata.argtypes = [POINTER(AVFrame), POINTER(AVDictionary)]
av_frame_get_decode_error_flags = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_frame_get_decode_error_flags
av_frame_get_decode_error_flags.restype = c_int
av_frame_get_decode_error_flags.argtypes = [POINTER(AVFrame)]
av_frame_set_decode_error_flags = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_frame_set_decode_error_flags
av_frame_set_decode_error_flags.restype = None
av_frame_set_decode_error_flags.argtypes = [POINTER(AVFrame), c_int]
av_frame_get_pkt_size = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_frame_get_pkt_size
av_frame_get_pkt_size.restype = c_int
av_frame_get_pkt_size.argtypes = [POINTER(AVFrame)]
av_frame_set_pkt_size = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_frame_set_pkt_size
av_frame_set_pkt_size.restype = None
av_frame_set_pkt_size.argtypes = [POINTER(AVFrame), c_int]
avpriv_frame_get_metadatap = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].avpriv_frame_get_metadatap
avpriv_frame_get_metadatap.restype = POINTER(POINTER(AVDictionary))
avpriv_frame_get_metadatap.argtypes = [POINTER(AVFrame)]
av_frame_get_qp_table = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_frame_get_qp_table
av_frame_get_qp_table.restype = POINTER(int8_t)
av_frame_get_qp_table.argtypes = [POINTER(AVFrame), POINTER(c_int), POINTER(c_int)]
av_frame_set_qp_table = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_frame_set_qp_table
av_frame_set_qp_table.restype = c_int
av_frame_set_qp_table.argtypes = [POINTER(AVFrame), POINTER(AVBufferRef), c_int, c_int]
av_frame_get_colorspace = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_frame_get_colorspace
av_frame_get_colorspace.restype = AVColorSpace
av_frame_get_colorspace.argtypes = [POINTER(AVFrame)]
av_frame_set_colorspace = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_frame_set_colorspace
av_frame_set_colorspace.restype = None
av_frame_set_colorspace.argtypes = [POINTER(AVFrame), AVColorSpace]
av_frame_get_color_range = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_frame_get_color_range
av_frame_get_color_range.restype = AVColorRange
av_frame_get_color_range.argtypes = [POINTER(AVFrame)]
av_frame_set_color_range = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_frame_set_color_range
av_frame_set_color_range.restype = None
av_frame_set_color_range.argtypes = [POINTER(AVFrame), AVColorRange]
av_get_colorspace_name = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_get_colorspace_name
av_get_colorspace_name.restype = STRING
av_get_colorspace_name.argtypes = [AVColorSpace]
av_frame_alloc = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_frame_alloc
av_frame_alloc.restype = POINTER(AVFrame)
av_frame_alloc.argtypes = []
av_frame_free = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_frame_free
av_frame_free.restype = None
av_frame_free.argtypes = [POINTER(POINTER(AVFrame))]
av_frame_ref = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_frame_ref
av_frame_ref.restype = c_int
av_frame_ref.argtypes = [POINTER(AVFrame), POINTER(AVFrame)]
av_frame_clone = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_frame_clone
av_frame_clone.restype = POINTER(AVFrame)
av_frame_clone.argtypes = [POINTER(AVFrame)]
av_frame_unref = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_frame_unref
av_frame_unref.restype = None
av_frame_unref.argtypes = [POINTER(AVFrame)]
av_frame_move_ref = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_frame_move_ref
av_frame_move_ref.restype = None
av_frame_move_ref.argtypes = [POINTER(AVFrame), POINTER(AVFrame)]
av_frame_get_buffer = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_frame_get_buffer
av_frame_get_buffer.restype = c_int
av_frame_get_buffer.argtypes = [POINTER(AVFrame), c_int]
av_frame_is_writable = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_frame_is_writable
av_frame_is_writable.restype = c_int
av_frame_is_writable.argtypes = [POINTER(AVFrame)]
av_frame_make_writable = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_frame_make_writable
av_frame_make_writable.restype = c_int
av_frame_make_writable.argtypes = [POINTER(AVFrame)]
av_frame_copy_props = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_frame_copy_props
av_frame_copy_props.restype = c_int
av_frame_copy_props.argtypes = [POINTER(AVFrame), POINTER(AVFrame)]
av_frame_get_plane_buffer = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_frame_get_plane_buffer
av_frame_get_plane_buffer.restype = POINTER(AVBufferRef)
av_frame_get_plane_buffer.argtypes = [POINTER(AVFrame), c_int]
av_frame_new_side_data = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_frame_new_side_data
av_frame_new_side_data.restype = POINTER(AVFrameSideData)
av_frame_new_side_data.argtypes = [POINTER(AVFrame), AVFrameSideDataType, c_int]
av_frame_get_side_data = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_frame_get_side_data
av_frame_get_side_data.restype = POINTER(AVFrameSideData)
av_frame_get_side_data.argtypes = [POINTER(AVFrame), AVFrameSideDataType]
class av_intfloat32(Union):
    pass
av_intfloat32._fields_ = [
    ('i', uint32_t),
    ('f', c_float),
]
class av_intfloat64(Union):
    pass
av_intfloat64._fields_ = [
    ('i', uint64_t),
    ('f', c_double),
]
class AVExtFloat(Structure):
    pass
AVExtFloat._fields_ = [
    ('exponent', uint8_t * 2),
    ('mantissa', uint8_t * 8),
]

# values for enumeration 'AVClassCategory'
AVClassCategory = c_int # enum
class AVOption(Structure):
    pass

# values for enumeration 'AVOptionType'
AVOptionType = c_int # enum
class N8AVOption4DOT_32E(Union):
    pass
N8AVOption4DOT_32E._fields_ = [
    ('i64', int64_t),
    ('dbl', c_double),
    ('str', STRING),
    ('q', AVRational),
]
AVOption._fields_ = [
    ('name', STRING),
    ('help', STRING),
    ('offset', c_int),
    ('type', AVOptionType),
    ('default_val', N8AVOption4DOT_32E),
    ('min', c_double),
    ('max', c_double),
    ('flags', c_int),
    ('unit', STRING),
]
class AVOptionRanges(Structure):
    pass
AVClass._fields_ = [
    ('class_name', STRING),
    ('item_name', CFUNCTYPE(STRING, c_void_p)),
    ('option', POINTER(AVOption)),
    ('version', c_int),
    ('log_level_offset_offset', c_int),
    ('parent_log_context_offset', c_int),
    ('child_next', CFUNCTYPE(c_void_p, c_void_p, c_void_p)),
    ('child_class_next', CFUNCTYPE(POINTER(AVClass), POINTER(AVClass))),
    ('category', AVClassCategory),
    ('get_category', CFUNCTYPE(AVClassCategory, c_void_p)),
    ('query_ranges', CFUNCTYPE(c_int, POINTER(POINTER(AVOptionRanges)), c_void_p, STRING, c_int)),
]
av_log = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_log
av_log.restype = None
av_log.argtypes = [c_void_p, c_int, STRING]
av_vlog = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_vlog
av_vlog.restype = None
av_vlog.argtypes = [c_void_p, c_int, STRING, POINTER(__va_list_tag)]
av_log_get_level = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_log_get_level
av_log_get_level.restype = c_int
av_log_get_level.argtypes = []
av_log_set_level = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_log_set_level
av_log_set_level.restype = None
av_log_set_level.argtypes = [c_int]
av_log_set_callback = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_log_set_callback
av_log_set_callback.restype = None
av_log_set_callback.argtypes = [CFUNCTYPE(None, c_void_p, c_int, STRING, POINTER(__va_list_tag))]
av_log_default_callback = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_log_default_callback
av_log_default_callback.restype = None
av_log_default_callback.argtypes = [c_void_p, c_int, STRING, POINTER(__va_list_tag)]
av_default_item_name = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_default_item_name
av_default_item_name.restype = STRING
av_default_item_name.argtypes = [c_void_p]
av_default_get_category = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_default_get_category
av_default_get_category.restype = AVClassCategory
av_default_get_category.argtypes = [c_void_p]
av_log_format_line = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_log_format_line
av_log_format_line.restype = None
av_log_format_line.argtypes = [c_void_p, c_int, STRING, POINTER(__va_list_tag), STRING, c_int, POINTER(c_int)]
av_log_set_flags = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_log_set_flags
av_log_set_flags.restype = None
av_log_set_flags.argtypes = [c_int]

# values for enumeration 'AVRounding'
AVRounding = c_int # enum
av_gcd = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_gcd
av_gcd.restype = int64_t
av_gcd.argtypes = [int64_t, int64_t]
av_rescale = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_rescale
av_rescale.restype = int64_t
av_rescale.argtypes = [int64_t, int64_t, int64_t]
av_rescale_rnd = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_rescale_rnd
av_rescale_rnd.restype = int64_t
av_rescale_rnd.argtypes = [int64_t, int64_t, int64_t, AVRounding]
av_rescale_q = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_rescale_q
av_rescale_q.restype = int64_t
av_rescale_q.argtypes = [int64_t, AVRational, AVRational]
av_rescale_q_rnd = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_rescale_q_rnd
av_rescale_q_rnd.restype = int64_t
av_rescale_q_rnd.argtypes = [int64_t, AVRational, AVRational, AVRounding]
av_compare_ts = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_compare_ts
av_compare_ts.restype = c_int
av_compare_ts.argtypes = [int64_t, AVRational, int64_t, AVRational]
av_compare_mod = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_compare_mod
av_compare_mod.restype = int64_t
av_compare_mod.argtypes = [uint64_t, uint64_t, uint64_t]
av_rescale_delta = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_rescale_delta
av_rescale_delta.restype = int64_t
av_rescale_delta.argtypes = [AVRational, int64_t, AVRational, c_int, POINTER(int64_t), AVRational]
av_malloc = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_malloc
av_malloc.restype = c_void_p
av_malloc.argtypes = [size_t]
av_realloc = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_realloc
av_realloc.restype = c_void_p
av_realloc.argtypes = [c_void_p, size_t]
av_realloc_f = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_realloc_f
av_realloc_f.restype = c_void_p
av_realloc_f.argtypes = [c_void_p, size_t, size_t]
av_reallocp = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_reallocp
av_reallocp.restype = c_int
av_reallocp.argtypes = [c_void_p, size_t]
av_realloc_array = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_realloc_array
av_realloc_array.restype = c_void_p
av_realloc_array.argtypes = [c_void_p, size_t, size_t]
av_reallocp_array = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_reallocp_array
av_reallocp_array.restype = c_int
av_reallocp_array.argtypes = [c_void_p, size_t, size_t]
av_free = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_free
av_free.restype = None
av_free.argtypes = [c_void_p]
av_mallocz = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_mallocz
av_mallocz.restype = c_void_p
av_mallocz.argtypes = [size_t]
av_calloc = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_calloc
av_calloc.restype = c_void_p
av_calloc.argtypes = [size_t, size_t]
av_strdup = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_strdup
av_strdup.restype = STRING
av_strdup.argtypes = [STRING]
av_memdup = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_memdup
av_memdup.restype = c_void_p
av_memdup.argtypes = [c_void_p, size_t]
av_freep = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_freep
av_freep.restype = None
av_freep.argtypes = [c_void_p]
av_dynarray_add = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_dynarray_add
av_dynarray_add.restype = None
av_dynarray_add.argtypes = [c_void_p, POINTER(c_int), c_void_p]
av_dynarray2_add = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_dynarray2_add
av_dynarray2_add.restype = c_void_p
av_dynarray2_add.argtypes = [POINTER(c_void_p), POINTER(c_int), size_t, POINTER(uint8_t)]
av_max_alloc = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_max_alloc
av_max_alloc.restype = None
av_max_alloc.argtypes = [size_t]
av_memcpy_backptr = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_memcpy_backptr
av_memcpy_backptr.restype = None
av_memcpy_backptr.argtypes = [POINTER(uint8_t), c_int, c_int]
class AVOptionRange(Structure):
    pass
AVOptionRange._fields_ = [
    ('str', STRING),
    ('value_min', c_double),
    ('value_max', c_double),
    ('component_min', c_double),
    ('component_max', c_double),
    ('is_range', c_int),
]
AVOptionRanges._fields_ = [
    ('range', POINTER(POINTER(AVOptionRange))),
    ('nb_ranges', c_int),
]
av_set_string3 = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_set_string3
av_set_string3.restype = c_int
av_set_string3.argtypes = [c_void_p, STRING, STRING, c_int, POINTER(POINTER(AVOption))]
av_set_double = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_set_double
av_set_double.restype = POINTER(AVOption)
av_set_double.argtypes = [c_void_p, STRING, c_double]
av_set_q = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_set_q
av_set_q.restype = POINTER(AVOption)
av_set_q.argtypes = [c_void_p, STRING, AVRational]
av_set_int = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_set_int
av_set_int.restype = POINTER(AVOption)
av_set_int.argtypes = [c_void_p, STRING, int64_t]
av_get_double = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_get_double
av_get_double.restype = c_double
av_get_double.argtypes = [c_void_p, STRING, POINTER(POINTER(AVOption))]
av_get_q = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_get_q
av_get_q.restype = AVRational
av_get_q.argtypes = [c_void_p, STRING, POINTER(POINTER(AVOption))]
av_get_int = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_get_int
av_get_int.restype = int64_t
av_get_int.argtypes = [c_void_p, STRING, POINTER(POINTER(AVOption))]
av_get_string = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_get_string
av_get_string.restype = STRING
av_get_string.argtypes = [c_void_p, STRING, POINTER(POINTER(AVOption)), STRING, c_int]
av_next_option = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_next_option
av_next_option.restype = POINTER(AVOption)
av_next_option.argtypes = [c_void_p, POINTER(AVOption)]
av_opt_show2 = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_opt_show2
av_opt_show2.restype = c_int
av_opt_show2.argtypes = [c_void_p, c_void_p, c_int, c_int]
av_opt_set_defaults = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_opt_set_defaults
av_opt_set_defaults.restype = None
av_opt_set_defaults.argtypes = [c_void_p]
av_opt_set_defaults2 = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_opt_set_defaults2
av_opt_set_defaults2.restype = None
av_opt_set_defaults2.argtypes = [c_void_p, c_int, c_int]
av_set_options_string = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_set_options_string
av_set_options_string.restype = c_int
av_set_options_string.argtypes = [c_void_p, STRING, STRING, STRING]
av_opt_set_from_string = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_opt_set_from_string
av_opt_set_from_string.restype = c_int
av_opt_set_from_string.argtypes = [c_void_p, STRING, POINTER(STRING), STRING, STRING]
av_opt_free = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_opt_free
av_opt_free.restype = None
av_opt_free.argtypes = [c_void_p]
av_opt_flag_is_set = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_opt_flag_is_set
av_opt_flag_is_set.restype = c_int
av_opt_flag_is_set.argtypes = [c_void_p, STRING, STRING]
av_opt_set_dict = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_opt_set_dict
av_opt_set_dict.restype = c_int
av_opt_set_dict.argtypes = [c_void_p, POINTER(POINTER(AVDictionary))]
av_opt_get_key_value = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_opt_get_key_value
av_opt_get_key_value.restype = c_int
av_opt_get_key_value.argtypes = [POINTER(STRING), STRING, STRING, c_uint, POINTER(STRING), POINTER(STRING)]

# values for unnamed enumeration
av_opt_eval_flags = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_opt_eval_flags
av_opt_eval_flags.restype = c_int
av_opt_eval_flags.argtypes = [c_void_p, POINTER(AVOption), STRING, POINTER(c_int)]
av_opt_eval_int = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_opt_eval_int
av_opt_eval_int.restype = c_int
av_opt_eval_int.argtypes = [c_void_p, POINTER(AVOption), STRING, POINTER(c_int)]
av_opt_eval_int64 = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_opt_eval_int64
av_opt_eval_int64.restype = c_int
av_opt_eval_int64.argtypes = [c_void_p, POINTER(AVOption), STRING, POINTER(int64_t)]
av_opt_eval_float = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_opt_eval_float
av_opt_eval_float.restype = c_int
av_opt_eval_float.argtypes = [c_void_p, POINTER(AVOption), STRING, POINTER(c_float)]
av_opt_eval_double = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_opt_eval_double
av_opt_eval_double.restype = c_int
av_opt_eval_double.argtypes = [c_void_p, POINTER(AVOption), STRING, POINTER(c_double)]
av_opt_eval_q = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_opt_eval_q
av_opt_eval_q.restype = c_int
av_opt_eval_q.argtypes = [c_void_p, POINTER(AVOption), STRING, POINTER(AVRational)]
av_opt_find = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_opt_find
av_opt_find.restype = POINTER(AVOption)
av_opt_find.argtypes = [c_void_p, STRING, STRING, c_int, c_int]
av_opt_find2 = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_opt_find2
av_opt_find2.restype = POINTER(AVOption)
av_opt_find2.argtypes = [c_void_p, STRING, STRING, c_int, c_int, POINTER(c_void_p)]
av_opt_next = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_opt_next
av_opt_next.restype = POINTER(AVOption)
av_opt_next.argtypes = [c_void_p, POINTER(AVOption)]
av_opt_child_next = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_opt_child_next
av_opt_child_next.restype = c_void_p
av_opt_child_next.argtypes = [c_void_p, c_void_p]
av_opt_child_class_next = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_opt_child_class_next
av_opt_child_class_next.restype = POINTER(AVClass)
av_opt_child_class_next.argtypes = [POINTER(AVClass), POINTER(AVClass)]
av_opt_set = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_opt_set
av_opt_set.restype = c_int
av_opt_set.argtypes = [c_void_p, STRING, STRING, c_int]
av_opt_set_int = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_opt_set_int
av_opt_set_int.restype = c_int
av_opt_set_int.argtypes = [c_void_p, STRING, int64_t, c_int]
av_opt_set_double = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_opt_set_double
av_opt_set_double.restype = c_int
av_opt_set_double.argtypes = [c_void_p, STRING, c_double, c_int]
av_opt_set_q = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_opt_set_q
av_opt_set_q.restype = c_int
av_opt_set_q.argtypes = [c_void_p, STRING, AVRational, c_int]
av_opt_set_bin = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_opt_set_bin
av_opt_set_bin.restype = c_int
av_opt_set_bin.argtypes = [c_void_p, STRING, POINTER(uint8_t), c_int, c_int]
av_opt_set_image_size = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_opt_set_image_size
av_opt_set_image_size.restype = c_int
av_opt_set_image_size.argtypes = [c_void_p, STRING, c_int, c_int, c_int]
av_opt_set_pixel_fmt = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_opt_set_pixel_fmt
av_opt_set_pixel_fmt.restype = c_int
av_opt_set_pixel_fmt.argtypes = [c_void_p, STRING, AVPixelFormat, c_int]
av_opt_set_sample_fmt = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_opt_set_sample_fmt
av_opt_set_sample_fmt.restype = c_int
av_opt_set_sample_fmt.argtypes = [c_void_p, STRING, AVSampleFormat, c_int]
av_opt_set_video_rate = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_opt_set_video_rate
av_opt_set_video_rate.restype = c_int
av_opt_set_video_rate.argtypes = [c_void_p, STRING, AVRational, c_int]
av_opt_set_channel_layout = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_opt_set_channel_layout
av_opt_set_channel_layout.restype = c_int
av_opt_set_channel_layout.argtypes = [c_void_p, STRING, int64_t, c_int]
av_opt_get = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_opt_get
av_opt_get.restype = c_int
av_opt_get.argtypes = [c_void_p, STRING, c_int, POINTER(POINTER(uint8_t))]
av_opt_get_int = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_opt_get_int
av_opt_get_int.restype = c_int
av_opt_get_int.argtypes = [c_void_p, STRING, c_int, POINTER(int64_t)]
av_opt_get_double = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_opt_get_double
av_opt_get_double.restype = c_int
av_opt_get_double.argtypes = [c_void_p, STRING, c_int, POINTER(c_double)]
av_opt_get_q = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_opt_get_q
av_opt_get_q.restype = c_int
av_opt_get_q.argtypes = [c_void_p, STRING, c_int, POINTER(AVRational)]
av_opt_get_image_size = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_opt_get_image_size
av_opt_get_image_size.restype = c_int
av_opt_get_image_size.argtypes = [c_void_p, STRING, c_int, POINTER(c_int), POINTER(c_int)]
av_opt_get_pixel_fmt = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_opt_get_pixel_fmt
av_opt_get_pixel_fmt.restype = c_int
av_opt_get_pixel_fmt.argtypes = [c_void_p, STRING, c_int, POINTER(AVPixelFormat)]
av_opt_get_sample_fmt = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_opt_get_sample_fmt
av_opt_get_sample_fmt.restype = c_int
av_opt_get_sample_fmt.argtypes = [c_void_p, STRING, c_int, POINTER(AVSampleFormat)]
av_opt_get_video_rate = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_opt_get_video_rate
av_opt_get_video_rate.restype = c_int
av_opt_get_video_rate.argtypes = [c_void_p, STRING, c_int, POINTER(AVRational)]
av_opt_get_channel_layout = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_opt_get_channel_layout
av_opt_get_channel_layout.restype = c_int
av_opt_get_channel_layout.argtypes = [c_void_p, STRING, c_int, POINTER(int64_t)]
av_opt_ptr = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_opt_ptr
av_opt_ptr.restype = c_void_p
av_opt_ptr.argtypes = [POINTER(AVClass), c_void_p, STRING]
av_opt_freep_ranges = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_opt_freep_ranges
av_opt_freep_ranges.restype = None
av_opt_freep_ranges.argtypes = [POINTER(POINTER(AVOptionRanges))]
av_opt_query_ranges = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_opt_query_ranges
av_opt_query_ranges.restype = c_int
av_opt_query_ranges.argtypes = [POINTER(POINTER(AVOptionRanges)), c_void_p, STRING, c_int]
av_opt_query_ranges_default = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_opt_query_ranges_default
av_opt_query_ranges_default.restype = c_int
av_opt_query_ranges_default.argtypes = [POINTER(POINTER(AVOptionRanges)), c_void_p, STRING, c_int]
av_reduce = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_reduce
av_reduce.restype = c_int
av_reduce.argtypes = [POINTER(c_int), POINTER(c_int), int64_t, int64_t, int64_t]
av_mul_q = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_mul_q
av_mul_q.restype = AVRational
av_mul_q.argtypes = [AVRational, AVRational]
av_div_q = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_div_q
av_div_q.restype = AVRational
av_div_q.argtypes = [AVRational, AVRational]
av_add_q = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_add_q
av_add_q.restype = AVRational
av_add_q.argtypes = [AVRational, AVRational]
av_sub_q = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_sub_q
av_sub_q.restype = AVRational
av_sub_q.argtypes = [AVRational, AVRational]
av_d2q = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_d2q
av_d2q.restype = AVRational
av_d2q.argtypes = [c_double, c_int]
av_nearer_q = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_nearer_q
av_nearer_q.restype = c_int
av_nearer_q.argtypes = [AVRational, AVRational, AVRational]
av_find_nearest_q_idx = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_find_nearest_q_idx
av_find_nearest_q_idx.restype = c_int
av_find_nearest_q_idx.argtypes = [AVRational, POINTER(AVRational)]
av_get_sample_fmt_name = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_get_sample_fmt_name
av_get_sample_fmt_name.restype = STRING
av_get_sample_fmt_name.argtypes = [AVSampleFormat]
av_get_sample_fmt = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_get_sample_fmt
av_get_sample_fmt.restype = AVSampleFormat
av_get_sample_fmt.argtypes = [STRING]
av_get_alt_sample_fmt = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_get_alt_sample_fmt
av_get_alt_sample_fmt.restype = AVSampleFormat
av_get_alt_sample_fmt.argtypes = [AVSampleFormat, c_int]
av_get_packed_sample_fmt = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_get_packed_sample_fmt
av_get_packed_sample_fmt.restype = AVSampleFormat
av_get_packed_sample_fmt.argtypes = [AVSampleFormat]
av_get_planar_sample_fmt = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_get_planar_sample_fmt
av_get_planar_sample_fmt.restype = AVSampleFormat
av_get_planar_sample_fmt.argtypes = [AVSampleFormat]
av_get_sample_fmt_string = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_get_sample_fmt_string
av_get_sample_fmt_string.restype = STRING
av_get_sample_fmt_string.argtypes = [STRING, c_int, AVSampleFormat]
av_get_bytes_per_sample = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_get_bytes_per_sample
av_get_bytes_per_sample.restype = c_int
av_get_bytes_per_sample.argtypes = [AVSampleFormat]
av_sample_fmt_is_planar = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_sample_fmt_is_planar
av_sample_fmt_is_planar.restype = c_int
av_sample_fmt_is_planar.argtypes = [AVSampleFormat]
av_samples_get_buffer_size = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_samples_get_buffer_size
av_samples_get_buffer_size.restype = c_int
av_samples_get_buffer_size.argtypes = [POINTER(c_int), c_int, c_int, AVSampleFormat, c_int]
av_samples_fill_arrays = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_samples_fill_arrays
av_samples_fill_arrays.restype = c_int
av_samples_fill_arrays.argtypes = [POINTER(POINTER(uint8_t)), POINTER(c_int), POINTER(uint8_t), c_int, c_int, AVSampleFormat, c_int]
av_samples_alloc = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_samples_alloc
av_samples_alloc.restype = c_int
av_samples_alloc.argtypes = [POINTER(POINTER(uint8_t)), POINTER(c_int), c_int, c_int, AVSampleFormat, c_int]
av_samples_alloc_array_and_samples = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_samples_alloc_array_and_samples
av_samples_alloc_array_and_samples.restype = c_int
av_samples_alloc_array_and_samples.argtypes = [POINTER(POINTER(POINTER(uint8_t))), POINTER(c_int), c_int, c_int, AVSampleFormat, c_int]
av_samples_copy = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_samples_copy
av_samples_copy.restype = c_int
av_samples_copy.argtypes = [POINTER(POINTER(uint8_t)), POINTER(POINTER(uint8_t)), c_int, c_int, c_int, c_int, AVSampleFormat]
av_samples_set_silence = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_samples_set_silence
av_samples_set_silence.restype = c_int
av_samples_set_silence.argtypes = [POINTER(POINTER(uint8_t)), c_int, c_int, c_int, AVSampleFormat]
av_gettime = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_gettime
av_gettime.restype = int64_t
av_gettime.argtypes = []
av_usleep = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].av_usleep
av_usleep.restype = c_int
av_usleep.argtypes = [c_uint]
class _IO_jump_t(Structure):
    pass
_IO_jump_t._fields_ = [
]
_IO_lock_t = None
class _IO_marker(Structure):
    pass
_IO_marker._fields_ = [
    ('_next', POINTER(_IO_marker)),
    ('_sbuf', POINTER(_IO_FILE)),
    ('_pos', c_int),
]

# values for enumeration '__codecvt_result'
__codecvt_result = c_int # enum
_IO_FILE._fields_ = [
    ('_flags', c_int),
    ('_IO_read_ptr', STRING),
    ('_IO_read_end', STRING),
    ('_IO_read_base', STRING),
    ('_IO_write_base', STRING),
    ('_IO_write_ptr', STRING),
    ('_IO_write_end', STRING),
    ('_IO_buf_base', STRING),
    ('_IO_buf_end', STRING),
    ('_IO_save_base', STRING),
    ('_IO_backup_base', STRING),
    ('_IO_save_end', STRING),
    ('_markers', POINTER(_IO_marker)),
    ('_chain', POINTER(_IO_FILE)),
    ('_fileno', c_int),
    ('_flags2', c_int),
    ('_old_offset', __off_t),
    ('_cur_column', c_ushort),
    ('_vtable_offset', c_byte),
    ('_shortbuf', c_char * 1),
    ('_lock', POINTER(_IO_lock_t)),
    ('_offset', __off64_t),
    ('__pad1', c_void_p),
    ('__pad2', c_void_p),
    ('__pad3', c_void_p),
    ('__pad4', c_void_p),
    ('__pad5', size_t),
    ('_mode', c_int),
    ('_unused2', c_char * 20),
]
class _IO_FILE_plus(Structure):
    pass
_IO_FILE_plus._fields_ = [
]
_IO_2_1_stdin_ = (_IO_FILE_plus).in_dll(_libraries['/usr/lib/ffmpeg2.8/libavcodec.so'], '_IO_2_1_stdin_')
_IO_2_1_stdout_ = (_IO_FILE_plus).in_dll(_libraries['/usr/lib/ffmpeg2.8/libavcodec.so'], '_IO_2_1_stdout_')
_IO_2_1_stderr_ = (_IO_FILE_plus).in_dll(_libraries['/usr/lib/ffmpeg2.8/libavcodec.so'], '_IO_2_1_stderr_')
__io_read_fn = CFUNCTYPE(__ssize_t, c_void_p, STRING, size_t)
__io_write_fn = CFUNCTYPE(__ssize_t, c_void_p, STRING, size_t)
__io_seek_fn = CFUNCTYPE(c_int, c_void_p, POINTER(__off64_t), c_int)
__io_close_fn = CFUNCTYPE(c_int, c_void_p)
cookie_read_function_t = __io_read_fn
cookie_write_function_t = __io_write_fn
cookie_seek_function_t = __io_seek_fn
cookie_close_function_t = __io_close_fn
class _IO_cookie_io_functions_t(Structure):
    pass
_IO_cookie_io_functions_t._fields_ = [
    ('read', POINTER(__io_read_fn)),
    ('write', POINTER(__io_write_fn)),
    ('seek', POINTER(__io_seek_fn)),
    ('close', POINTER(__io_close_fn)),
]
cookie_io_functions_t = _IO_cookie_io_functions_t
class _IO_cookie_file(Structure):
    pass
_IO_cookie_file._fields_ = [
]
__underflow = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].__underflow
__underflow.restype = c_int
__underflow.argtypes = [POINTER(_IO_FILE)]
__uflow = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].__uflow
__uflow.restype = c_int
__uflow.argtypes = [POINTER(_IO_FILE)]
__overflow = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].__overflow
__overflow.restype = c_int
__overflow.argtypes = [POINTER(_IO_FILE), c_int]
_IO_getc = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so']._IO_getc
_IO_getc.restype = c_int
_IO_getc.argtypes = [POINTER(_IO_FILE)]
_IO_putc = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so']._IO_putc
_IO_putc.restype = c_int
_IO_putc.argtypes = [c_int, POINTER(_IO_FILE)]
_IO_feof = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so']._IO_feof
_IO_feof.restype = c_int
_IO_feof.argtypes = [POINTER(_IO_FILE)]
_IO_ferror = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so']._IO_ferror
_IO_ferror.restype = c_int
_IO_ferror.argtypes = [POINTER(_IO_FILE)]
_IO_peekc_locked = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so']._IO_peekc_locked
_IO_peekc_locked.restype = c_int
_IO_peekc_locked.argtypes = [POINTER(_IO_FILE)]
_IO_flockfile = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so']._IO_flockfile
_IO_flockfile.restype = None
_IO_flockfile.argtypes = [POINTER(_IO_FILE)]
_IO_funlockfile = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so']._IO_funlockfile
_IO_funlockfile.restype = None
_IO_funlockfile.argtypes = [POINTER(_IO_FILE)]
_IO_ftrylockfile = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so']._IO_ftrylockfile
_IO_ftrylockfile.restype = c_int
_IO_ftrylockfile.argtypes = [POINTER(_IO_FILE)]
_IO_vfscanf = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so']._IO_vfscanf
_IO_vfscanf.restype = c_int
_IO_vfscanf.argtypes = [POINTER(_IO_FILE), STRING, POINTER(__va_list_tag), POINTER(c_int)]
_IO_vfprintf = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so']._IO_vfprintf
_IO_vfprintf.restype = c_int
_IO_vfprintf.argtypes = [POINTER(_IO_FILE), STRING, POINTER(__va_list_tag)]
_IO_padn = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so']._IO_padn
_IO_padn.restype = __ssize_t
_IO_padn.argtypes = [POINTER(_IO_FILE), c_int, __ssize_t]
_IO_sgetn = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so']._IO_sgetn
_IO_sgetn.restype = size_t
_IO_sgetn.argtypes = [POINTER(_IO_FILE), c_void_p, size_t]
_IO_seekoff = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so']._IO_seekoff
_IO_seekoff.restype = __off64_t
_IO_seekoff.argtypes = [POINTER(_IO_FILE), __off64_t, c_int, c_int]
_IO_seekpos = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so']._IO_seekpos
_IO_seekpos.restype = __off64_t
_IO_seekpos.argtypes = [POINTER(_IO_FILE), __off64_t, c_int]
_IO_free_backup_area = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so']._IO_free_backup_area
_IO_free_backup_area.restype = None
_IO_free_backup_area.argtypes = [POINTER(_IO_FILE)]
postproc_version = _libraries['/usr/lib/ffmpeg2.8/libavdevice.so'].postproc_version
postproc_version.restype = c_uint
postproc_version.argtypes = []
postproc_configuration = _libraries['/usr/lib/ffmpeg2.8/libavdevice.so'].postproc_configuration
postproc_configuration.restype = STRING
postproc_configuration.argtypes = []
postproc_license = _libraries['/usr/lib/ffmpeg2.8/libavdevice.so'].postproc_license
postproc_license.restype = STRING
postproc_license.argtypes = []
pp_context = None
pp_mode = None
pp_help = (c_char * 0).in_dll(_libraries['/usr/lib/ffmpeg2.8/libavdevice.so'], 'pp_help')
pp_postprocess = _libraries['/usr/lib/ffmpeg2.8/libavdevice.so'].pp_postprocess
pp_postprocess.restype = None
pp_postprocess.argtypes = [POINTER(POINTER(uint8_t)), POINTER(c_int), POINTER(POINTER(uint8_t)), POINTER(c_int), c_int, c_int, POINTER(int8_t), c_int, POINTER(pp_mode), POINTER(pp_context), c_int]
pp_get_mode_by_name_and_quality = _libraries['/usr/lib/ffmpeg2.8/libavdevice.so'].pp_get_mode_by_name_and_quality
pp_get_mode_by_name_and_quality.restype = POINTER(pp_mode)
pp_get_mode_by_name_and_quality.argtypes = [STRING, c_int]
pp_free_mode = _libraries['/usr/lib/ffmpeg2.8/libavdevice.so'].pp_free_mode
pp_free_mode.restype = None
pp_free_mode.argtypes = [POINTER(pp_mode)]
pp_get_context = _libraries['/usr/lib/ffmpeg2.8/libavdevice.so'].pp_get_context
pp_get_context.restype = POINTER(pp_context)
pp_get_context.argtypes = [c_int, c_int, c_int]
pp_free_context = _libraries['/usr/lib/ffmpeg2.8/libavdevice.so'].pp_free_context
pp_free_context.restype = None
pp_free_context.argtypes = [POINTER(pp_context)]
swscale_version = _libraries['/usr/lib/ffmpeg2.8/libswscale.so'].swscale_version
swscale_version.restype = c_uint
swscale_version.argtypes = []
swscale_configuration = _libraries['/usr/lib/ffmpeg2.8/libswscale.so'].swscale_configuration
swscale_configuration.restype = STRING
swscale_configuration.argtypes = []
swscale_license = _libraries['/usr/lib/ffmpeg2.8/libswscale.so'].swscale_license
swscale_license.restype = STRING
swscale_license.argtypes = []
sws_getCoefficients = _libraries['/usr/lib/ffmpeg2.8/libswscale.so'].sws_getCoefficients
sws_getCoefficients.restype = POINTER(c_int)
sws_getCoefficients.argtypes = [c_int]
class SwsVector(Structure):
    pass
SwsVector._fields_ = [
    ('coeff', POINTER(c_double)),
    ('length', c_int),
]
class SwsFilter(Structure):
    pass
SwsFilter._fields_ = [
    ('lumH', POINTER(SwsVector)),
    ('lumV', POINTER(SwsVector)),
    ('chrH', POINTER(SwsVector)),
    ('chrV', POINTER(SwsVector)),
]
class SwsContext(Structure):
    pass
SwsContext._fields_ = [
]
sws_isSupportedInput = _libraries['/usr/lib/ffmpeg2.8/libswscale.so'].sws_isSupportedInput
sws_isSupportedInput.restype = c_int
sws_isSupportedInput.argtypes = [AVPixelFormat]
sws_isSupportedOutput = _libraries['/usr/lib/ffmpeg2.8/libswscale.so'].sws_isSupportedOutput
sws_isSupportedOutput.restype = c_int
sws_isSupportedOutput.argtypes = [AVPixelFormat]
sws_isSupportedEndiannessConversion = _libraries['/usr/lib/ffmpeg2.8/libswscale.so'].sws_isSupportedEndiannessConversion
sws_isSupportedEndiannessConversion.restype = c_int
sws_isSupportedEndiannessConversion.argtypes = [AVPixelFormat]
sws_alloc_context = _libraries['/usr/lib/ffmpeg2.8/libswscale.so'].sws_alloc_context
sws_alloc_context.restype = POINTER(SwsContext)
sws_alloc_context.argtypes = []
sws_init_context = _libraries['/usr/lib/ffmpeg2.8/libswscale.so'].sws_init_context
sws_init_context.restype = c_int
sws_init_context.argtypes = [POINTER(SwsContext), POINTER(SwsFilter), POINTER(SwsFilter)]
sws_freeContext = _libraries['/usr/lib/ffmpeg2.8/libswscale.so'].sws_freeContext
sws_freeContext.restype = None
sws_freeContext.argtypes = [POINTER(SwsContext)]
sws_getContext = _libraries['/usr/lib/ffmpeg2.8/libswscale.so'].sws_getContext
sws_getContext.restype = POINTER(SwsContext)
sws_getContext.argtypes = [c_int, c_int, AVPixelFormat, c_int, c_int, AVPixelFormat, c_int, POINTER(SwsFilter), POINTER(SwsFilter), POINTER(c_double)]
sws_scale = _libraries['/usr/lib/ffmpeg2.8/libswscale.so'].sws_scale
sws_scale.restype = c_int
sws_scale.argtypes = [POINTER(SwsContext), POINTER(POINTER(uint8_t)), POINTER(c_int), c_int, c_int, POINTER(POINTER(uint8_t)), POINTER(c_int)]
sws_setColorspaceDetails = _libraries['/usr/lib/ffmpeg2.8/libswscale.so'].sws_setColorspaceDetails
sws_setColorspaceDetails.restype = c_int
sws_setColorspaceDetails.argtypes = [POINTER(SwsContext), POINTER(c_int), c_int, POINTER(c_int), c_int, c_int, c_int, c_int]
sws_getColorspaceDetails = _libraries['/usr/lib/ffmpeg2.8/libswscale.so'].sws_getColorspaceDetails
sws_getColorspaceDetails.restype = c_int
sws_getColorspaceDetails.argtypes = [POINTER(SwsContext), POINTER(POINTER(c_int)), POINTER(c_int), POINTER(POINTER(c_int)), POINTER(c_int), POINTER(c_int), POINTER(c_int), POINTER(c_int)]
sws_allocVec = _libraries['/usr/lib/ffmpeg2.8/libswscale.so'].sws_allocVec
sws_allocVec.restype = POINTER(SwsVector)
sws_allocVec.argtypes = [c_int]
sws_getGaussianVec = _libraries['/usr/lib/ffmpeg2.8/libswscale.so'].sws_getGaussianVec
sws_getGaussianVec.restype = POINTER(SwsVector)
sws_getGaussianVec.argtypes = [c_double, c_double]
sws_getConstVec = _libraries['/usr/lib/ffmpeg2.8/libswscale.so'].sws_getConstVec
sws_getConstVec.restype = POINTER(SwsVector)
sws_getConstVec.argtypes = [c_double, c_int]
sws_getIdentityVec = _libraries['/usr/lib/ffmpeg2.8/libswscale.so'].sws_getIdentityVec
sws_getIdentityVec.restype = POINTER(SwsVector)
sws_getIdentityVec.argtypes = []
sws_scaleVec = _libraries['/usr/lib/ffmpeg2.8/libswscale.so'].sws_scaleVec
sws_scaleVec.restype = None
sws_scaleVec.argtypes = [POINTER(SwsVector), c_double]
sws_normalizeVec = _libraries['/usr/lib/ffmpeg2.8/libswscale.so'].sws_normalizeVec
sws_normalizeVec.restype = None
sws_normalizeVec.argtypes = [POINTER(SwsVector), c_double]
sws_convVec = _libraries['/usr/lib/ffmpeg2.8/libswscale.so'].sws_convVec
sws_convVec.restype = None
sws_convVec.argtypes = [POINTER(SwsVector), POINTER(SwsVector)]
sws_addVec = _libraries['/usr/lib/ffmpeg2.8/libswscale.so'].sws_addVec
sws_addVec.restype = None
sws_addVec.argtypes = [POINTER(SwsVector), POINTER(SwsVector)]
sws_subVec = _libraries['/usr/lib/ffmpeg2.8/libswscale.so'].sws_subVec
sws_subVec.restype = None
sws_subVec.argtypes = [POINTER(SwsVector), POINTER(SwsVector)]
sws_shiftVec = _libraries['/usr/lib/ffmpeg2.8/libswscale.so'].sws_shiftVec
sws_shiftVec.restype = None
sws_shiftVec.argtypes = [POINTER(SwsVector), c_int]
sws_cloneVec = _libraries['/usr/lib/ffmpeg2.8/libswscale.so'].sws_cloneVec
sws_cloneVec.restype = POINTER(SwsVector)
sws_cloneVec.argtypes = [POINTER(SwsVector)]
sws_printVec2 = _libraries['/usr/lib/ffmpeg2.8/libswscale.so'].sws_printVec2
sws_printVec2.restype = None
sws_printVec2.argtypes = [POINTER(SwsVector), POINTER(AVClass), c_int]
sws_freeVec = _libraries['/usr/lib/ffmpeg2.8/libswscale.so'].sws_freeVec
sws_freeVec.restype = None
sws_freeVec.argtypes = [POINTER(SwsVector)]
sws_getDefaultFilter = _libraries['/usr/lib/ffmpeg2.8/libswscale.so'].sws_getDefaultFilter
sws_getDefaultFilter.restype = POINTER(SwsFilter)
sws_getDefaultFilter.argtypes = [c_float, c_float, c_float, c_float, c_float, c_float, c_int]
sws_freeFilter = _libraries['/usr/lib/ffmpeg2.8/libswscale.so'].sws_freeFilter
sws_freeFilter.restype = None
sws_freeFilter.argtypes = [POINTER(SwsFilter)]
sws_getCachedContext = _libraries['/usr/lib/ffmpeg2.8/libswscale.so'].sws_getCachedContext
sws_getCachedContext.restype = POINTER(SwsContext)
sws_getCachedContext.argtypes = [POINTER(SwsContext), c_int, c_int, AVPixelFormat, c_int, c_int, AVPixelFormat, c_int, POINTER(SwsFilter), POINTER(SwsFilter), POINTER(c_double)]
sws_convertPalette8ToPacked32 = _libraries['/usr/lib/ffmpeg2.8/libswscale.so'].sws_convertPalette8ToPacked32
sws_convertPalette8ToPacked32.restype = None
sws_convertPalette8ToPacked32.argtypes = [POINTER(uint8_t), POINTER(uint8_t), c_int, POINTER(uint8_t)]
sws_convertPalette8ToPacked24 = _libraries['/usr/lib/ffmpeg2.8/libswscale.so'].sws_convertPalette8ToPacked24
sws_convertPalette8ToPacked24.restype = None
sws_convertPalette8ToPacked24.argtypes = [POINTER(uint8_t), POINTER(uint8_t), c_int, POINTER(uint8_t)]
sws_get_class = _libraries['/usr/lib/ffmpeg2.8/libswscale.so'].sws_get_class
sws_get_class.restype = POINTER(AVClass)
sws_get_class.argtypes = []
signgam = (c_int).in_dll(_libraries['/usr/lib/ffmpeg2.8/libavcodec.so'], 'signgam')

# values for unnamed enumeration

# values for enumeration '_LIB_VERSION_TYPE'
_LIB_VERSION_TYPE = c_int # enum
_LIB_VERSION = (_LIB_VERSION_TYPE).in_dll(_libraries['/usr/lib/ffmpeg2.8/libavcodec.so'], '_LIB_VERSION')
class __exception(Structure):
    pass
__exception._fields_ = [
    ('type', c_int),
    ('name', STRING),
    ('arg1', c_double),
    ('arg2', c_double),
    ('retval', c_double),
]
matherr = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].matherr
matherr.restype = c_int
matherr.argtypes = [POINTER(__exception)]
int32_t = c_int32
int_least8_t = c_byte
int_least16_t = c_short
int_least32_t = c_int
int_least64_t = c_long
uint_least8_t = c_ubyte
uint_least16_t = c_ushort
uint_least32_t = c_uint
uint_least64_t = c_ulong
int_fast8_t = c_byte
int_fast16_t = c_long
int_fast32_t = c_long
int_fast64_t = c_long
uint_fast8_t = c_ubyte
uint_fast16_t = c_ulong
uint_fast32_t = c_ulong
uint_fast64_t = c_ulong
intptr_t = c_long
uintptr_t = c_ulong
__FILE = _IO_FILE
va_list = __gnuc_va_list
off_t = __off_t
off64_t = __off64_t
ssize_t = __ssize_t
fpos_t = _G_fpos_t
fpos64_t = _G_fpos64_t
remove = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].remove
remove.restype = c_int
remove.argtypes = [STRING]
rename = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].rename
rename.restype = c_int
rename.argtypes = [STRING, STRING]
renameat = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].renameat
renameat.restype = c_int
renameat.argtypes = [c_int, STRING, c_int, STRING]
tmpfile = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].tmpfile
tmpfile.restype = POINTER(FILE)
tmpfile.argtypes = []
tmpfile64 = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].tmpfile64
tmpfile64.restype = POINTER(FILE)
tmpfile64.argtypes = []
tmpnam = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].tmpnam
tmpnam.restype = STRING
tmpnam.argtypes = [STRING]
tmpnam_r = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].tmpnam_r
tmpnam_r.restype = STRING
tmpnam_r.argtypes = [STRING]
tempnam = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].tempnam
tempnam.restype = STRING
tempnam.argtypes = [STRING, STRING]
fclose = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].fclose
fclose.restype = c_int
fclose.argtypes = [POINTER(FILE)]
fflush = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].fflush
fflush.restype = c_int
fflush.argtypes = [POINTER(FILE)]
fflush_unlocked = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].fflush_unlocked
fflush_unlocked.restype = c_int
fflush_unlocked.argtypes = [POINTER(FILE)]
fcloseall = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].fcloseall
fcloseall.restype = c_int
fcloseall.argtypes = []
fopen = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].fopen
fopen.restype = POINTER(FILE)
fopen.argtypes = [STRING, STRING]
freopen = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].freopen
freopen.restype = POINTER(FILE)
freopen.argtypes = [STRING, STRING, POINTER(FILE)]
fopen64 = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].fopen64
fopen64.restype = POINTER(FILE)
fopen64.argtypes = [STRING, STRING]
freopen64 = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].freopen64
freopen64.restype = POINTER(FILE)
freopen64.argtypes = [STRING, STRING, POINTER(FILE)]
fdopen = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].fdopen
fdopen.restype = POINTER(FILE)
fdopen.argtypes = [c_int, STRING]
fopencookie = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].fopencookie
fopencookie.restype = POINTER(FILE)
fopencookie.argtypes = [c_void_p, STRING, _IO_cookie_io_functions_t]
fmemopen = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].fmemopen
fmemopen.restype = POINTER(FILE)
fmemopen.argtypes = [c_void_p, size_t, STRING]
open_memstream = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].open_memstream
open_memstream.restype = POINTER(FILE)
open_memstream.argtypes = [POINTER(STRING), POINTER(size_t)]
setbuf = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].setbuf
setbuf.restype = None
setbuf.argtypes = [POINTER(FILE), STRING]
setvbuf = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].setvbuf
setvbuf.restype = c_int
setvbuf.argtypes = [POINTER(FILE), STRING, c_int, size_t]
setbuffer = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].setbuffer
setbuffer.restype = None
setbuffer.argtypes = [POINTER(FILE), STRING, size_t]
setlinebuf = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].setlinebuf
setlinebuf.restype = None
setlinebuf.argtypes = [POINTER(FILE)]
fscanf = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].fscanf
fscanf.restype = c_int
fscanf.argtypes = [POINTER(FILE), STRING]
scanf = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].scanf
scanf.restype = c_int
scanf.argtypes = [STRING]
sscanf = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].sscanf
sscanf.restype = c_int
sscanf.argtypes = [STRING, STRING]
vfscanf = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].vfscanf
vfscanf.restype = c_int
vfscanf.argtypes = [POINTER(FILE), STRING, POINTER(__va_list_tag)]
vscanf = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].vscanf
vscanf.restype = c_int
vscanf.argtypes = [STRING, POINTER(__va_list_tag)]
vsscanf = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].vsscanf
vsscanf.restype = c_int
vsscanf.argtypes = [STRING, STRING, POINTER(__va_list_tag)]
fgetc = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].fgetc
fgetc.restype = c_int
fgetc.argtypes = [POINTER(FILE)]
getc = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].getc
getc.restype = c_int
getc.argtypes = [POINTER(FILE)]
fputc = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].fputc
fputc.restype = c_int
fputc.argtypes = [c_int, POINTER(FILE)]
putc = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].putc
putc.restype = c_int
putc.argtypes = [c_int, POINTER(FILE)]
getw = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].getw
getw.restype = c_int
getw.argtypes = [POINTER(FILE)]
putw = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].putw
putw.restype = c_int
putw.argtypes = [c_int, POINTER(FILE)]
gets = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].gets
gets.restype = STRING
gets.argtypes = [STRING]
__getdelim = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].__getdelim
__getdelim.restype = __ssize_t
__getdelim.argtypes = [POINTER(STRING), POINTER(size_t), c_int, POINTER(FILE)]
getdelim = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].getdelim
getdelim.restype = __ssize_t
getdelim.argtypes = [POINTER(STRING), POINTER(size_t), c_int, POINTER(FILE)]
fputs = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].fputs
fputs.restype = c_int
fputs.argtypes = [STRING, POINTER(FILE)]
puts = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].puts
puts.restype = c_int
puts.argtypes = [STRING]
ungetc = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].ungetc
ungetc.restype = c_int
ungetc.argtypes = [c_int, POINTER(FILE)]
fwrite = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].fwrite
fwrite.restype = size_t
fwrite.argtypes = [c_void_p, size_t, size_t, POINTER(FILE)]
fputs_unlocked = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].fputs_unlocked
fputs_unlocked.restype = c_int
fputs_unlocked.argtypes = [STRING, POINTER(FILE)]
fwrite_unlocked = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].fwrite_unlocked
fwrite_unlocked.restype = size_t
fwrite_unlocked.argtypes = [c_void_p, size_t, size_t, POINTER(FILE)]
fseek = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].fseek
fseek.restype = c_int
fseek.argtypes = [POINTER(FILE), c_long, c_int]
ftell = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].ftell
ftell.restype = c_long
ftell.argtypes = [POINTER(FILE)]
rewind = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].rewind
rewind.restype = None
rewind.argtypes = [POINTER(FILE)]
fseeko = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].fseeko
fseeko.restype = c_int
fseeko.argtypes = [POINTER(FILE), __off_t, c_int]
ftello = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].ftello
ftello.restype = __off_t
ftello.argtypes = [POINTER(FILE)]
fgetpos = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].fgetpos
fgetpos.restype = c_int
fgetpos.argtypes = [POINTER(FILE), POINTER(fpos_t)]
fsetpos = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].fsetpos
fsetpos.restype = c_int
fsetpos.argtypes = [POINTER(FILE), POINTER(fpos_t)]
fseeko64 = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].fseeko64
fseeko64.restype = c_int
fseeko64.argtypes = [POINTER(FILE), __off64_t, c_int]
ftello64 = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].ftello64
ftello64.restype = __off64_t
ftello64.argtypes = [POINTER(FILE)]
fgetpos64 = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].fgetpos64
fgetpos64.restype = c_int
fgetpos64.argtypes = [POINTER(FILE), POINTER(fpos64_t)]
fsetpos64 = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].fsetpos64
fsetpos64.restype = c_int
fsetpos64.argtypes = [POINTER(FILE), POINTER(fpos64_t)]
clearerr = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].clearerr
clearerr.restype = None
clearerr.argtypes = [POINTER(FILE)]
feof = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].feof
feof.restype = c_int
feof.argtypes = [POINTER(FILE)]
ferror = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].ferror
ferror.restype = c_int
ferror.argtypes = [POINTER(FILE)]
clearerr_unlocked = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].clearerr_unlocked
clearerr_unlocked.restype = None
clearerr_unlocked.argtypes = [POINTER(FILE)]
perror = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].perror
perror.restype = None
perror.argtypes = [STRING]
fileno = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].fileno
fileno.restype = c_int
fileno.argtypes = [POINTER(FILE)]
fileno_unlocked = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].fileno_unlocked
fileno_unlocked.restype = c_int
fileno_unlocked.argtypes = [POINTER(FILE)]
popen = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].popen
popen.restype = POINTER(FILE)
popen.argtypes = [STRING, STRING]
pclose = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].pclose
pclose.restype = c_int
pclose.argtypes = [POINTER(FILE)]
ctermid = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].ctermid
ctermid.restype = STRING
ctermid.argtypes = [STRING]
cuserid = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].cuserid
cuserid.restype = STRING
cuserid.argtypes = [STRING]
obstack._fields_ = [
]
flockfile = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].flockfile
flockfile.restype = None
flockfile.argtypes = [POINTER(FILE)]
ftrylockfile = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].ftrylockfile
ftrylockfile.restype = c_int
ftrylockfile.argtypes = [POINTER(FILE)]
funlockfile = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].funlockfile
funlockfile.restype = None
funlockfile.argtypes = [POINTER(FILE)]
class div_t(Structure):
    pass
div_t._fields_ = [
    ('quot', c_int),
    ('rem', c_int),
]
class ldiv_t(Structure):
    pass
ldiv_t._fields_ = [
    ('quot', c_long),
    ('rem', c_long),
]
class lldiv_t(Structure):
    pass
lldiv_t._fields_ = [
    ('quot', c_longlong),
    ('rem', c_longlong),
]
__ctype_get_mb_cur_max = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].__ctype_get_mb_cur_max
__ctype_get_mb_cur_max.restype = size_t
__ctype_get_mb_cur_max.argtypes = []
strtod = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].strtod
strtod.restype = c_double
strtod.argtypes = [STRING, POINTER(STRING)]
strtof = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].strtof
strtof.restype = c_float
strtof.argtypes = [STRING, POINTER(STRING)]
strtold = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].strtold
strtold.restype = c_longdouble
strtold.argtypes = [STRING, POINTER(STRING)]
strtol = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].strtol
strtol.restype = c_long
strtol.argtypes = [STRING, POINTER(STRING), c_int]
strtoul = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].strtoul
strtoul.restype = c_ulong
strtoul.argtypes = [STRING, POINTER(STRING), c_int]
strtoq = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].strtoq
strtoq.restype = c_longlong
strtoq.argtypes = [STRING, POINTER(STRING), c_int]
strtouq = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].strtouq
strtouq.restype = c_ulonglong
strtouq.argtypes = [STRING, POINTER(STRING), c_int]
strtoll = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].strtoll
strtoll.restype = c_longlong
strtoll.argtypes = [STRING, POINTER(STRING), c_int]
strtoull = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].strtoull
strtoull.restype = c_ulonglong
strtoull.argtypes = [STRING, POINTER(STRING), c_int]
class __locale_struct(Structure):
    pass
__locale_t = POINTER(__locale_struct)
strtol_l = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].strtol_l
strtol_l.restype = c_long
strtol_l.argtypes = [STRING, POINTER(STRING), c_int, __locale_t]
strtoul_l = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].strtoul_l
strtoul_l.restype = c_ulong
strtoul_l.argtypes = [STRING, POINTER(STRING), c_int, __locale_t]
strtoll_l = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].strtoll_l
strtoll_l.restype = c_longlong
strtoll_l.argtypes = [STRING, POINTER(STRING), c_int, __locale_t]
strtoull_l = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].strtoull_l
strtoull_l.restype = c_ulonglong
strtoull_l.argtypes = [STRING, POINTER(STRING), c_int, __locale_t]
strtod_l = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].strtod_l
strtod_l.restype = c_double
strtod_l.argtypes = [STRING, POINTER(STRING), __locale_t]
strtof_l = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].strtof_l
strtof_l.restype = c_float
strtof_l.argtypes = [STRING, POINTER(STRING), __locale_t]
strtold_l = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].strtold_l
strtold_l.restype = c_longdouble
strtold_l.argtypes = [STRING, POINTER(STRING), __locale_t]
atoi = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].atoi
atoi.restype = c_int
atoi.argtypes = [STRING]
atol = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].atol
atol.restype = c_long
atol.argtypes = [STRING]
atoll = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].atoll
atoll.restype = c_longlong
atoll.argtypes = [STRING]
l64a = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].l64a
l64a.restype = STRING
l64a.argtypes = [c_long]
a64l = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].a64l
a64l.restype = c_long
a64l.argtypes = [STRING]
random = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].random
random.restype = c_long
random.argtypes = []
srandom = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].srandom
srandom.restype = None
srandom.argtypes = [c_uint]
initstate = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].initstate
initstate.restype = STRING
initstate.argtypes = [c_uint, STRING, size_t]
setstate = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].setstate
setstate.restype = STRING
setstate.argtypes = [STRING]
class random_data(Structure):
    pass
random_data._fields_ = [
    ('fptr', POINTER(int32_t)),
    ('rptr', POINTER(int32_t)),
    ('state', POINTER(int32_t)),
    ('rand_type', c_int),
    ('rand_deg', c_int),
    ('rand_sep', c_int),
    ('end_ptr', POINTER(int32_t)),
]
random_r = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].random_r
random_r.restype = c_int
random_r.argtypes = [POINTER(random_data), POINTER(int32_t)]
srandom_r = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].srandom_r
srandom_r.restype = c_int
srandom_r.argtypes = [c_uint, POINTER(random_data)]
initstate_r = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].initstate_r
initstate_r.restype = c_int
initstate_r.argtypes = [c_uint, STRING, size_t, POINTER(random_data)]
setstate_r = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].setstate_r
setstate_r.restype = c_int
setstate_r.argtypes = [STRING, POINTER(random_data)]
rand = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].rand
rand.restype = c_int
rand.argtypes = []
srand = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].srand
srand.restype = None
srand.argtypes = [c_uint]
rand_r = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].rand_r
rand_r.restype = c_int
rand_r.argtypes = [POINTER(c_uint)]
drand48 = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].drand48
drand48.restype = c_double
drand48.argtypes = []
erand48 = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].erand48
erand48.restype = c_double
erand48.argtypes = [POINTER(c_ushort)]
lrand48 = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].lrand48
lrand48.restype = c_long
lrand48.argtypes = []
nrand48 = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].nrand48
nrand48.restype = c_long
nrand48.argtypes = [POINTER(c_ushort)]
mrand48 = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].mrand48
mrand48.restype = c_long
mrand48.argtypes = []
jrand48 = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].jrand48
jrand48.restype = c_long
jrand48.argtypes = [POINTER(c_ushort)]
srand48 = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].srand48
srand48.restype = None
srand48.argtypes = [c_long]
seed48 = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].seed48
seed48.restype = POINTER(c_ushort)
seed48.argtypes = [POINTER(c_ushort)]
lcong48 = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].lcong48
lcong48.restype = None
lcong48.argtypes = [POINTER(c_ushort)]
class drand48_data(Structure):
    pass
drand48_data._fields_ = [
    ('__x', c_ushort * 3),
    ('__old_x', c_ushort * 3),
    ('__c', c_ushort),
    ('__init', c_ushort),
    ('__a', c_ulonglong),
]
drand48_r = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].drand48_r
drand48_r.restype = c_int
drand48_r.argtypes = [POINTER(drand48_data), POINTER(c_double)]
erand48_r = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].erand48_r
erand48_r.restype = c_int
erand48_r.argtypes = [POINTER(c_ushort), POINTER(drand48_data), POINTER(c_double)]
lrand48_r = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].lrand48_r
lrand48_r.restype = c_int
lrand48_r.argtypes = [POINTER(drand48_data), POINTER(c_long)]
nrand48_r = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].nrand48_r
nrand48_r.restype = c_int
nrand48_r.argtypes = [POINTER(c_ushort), POINTER(drand48_data), POINTER(c_long)]
mrand48_r = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].mrand48_r
mrand48_r.restype = c_int
mrand48_r.argtypes = [POINTER(drand48_data), POINTER(c_long)]
jrand48_r = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].jrand48_r
jrand48_r.restype = c_int
jrand48_r.argtypes = [POINTER(c_ushort), POINTER(drand48_data), POINTER(c_long)]
srand48_r = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].srand48_r
srand48_r.restype = c_int
srand48_r.argtypes = [c_long, POINTER(drand48_data)]
seed48_r = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].seed48_r
seed48_r.restype = c_int
seed48_r.argtypes = [POINTER(c_ushort), POINTER(drand48_data)]
lcong48_r = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].lcong48_r
lcong48_r.restype = c_int
lcong48_r.argtypes = [POINTER(c_ushort), POINTER(drand48_data)]
malloc = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].malloc
malloc.restype = c_void_p
malloc.argtypes = [size_t]
calloc = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].calloc
calloc.restype = c_void_p
calloc.argtypes = [size_t, size_t]
realloc = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].realloc
realloc.restype = c_void_p
realloc.argtypes = [c_void_p, size_t]
free = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].free
free.restype = None
free.argtypes = [c_void_p]
cfree = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].cfree
cfree.restype = None
cfree.argtypes = [c_void_p]
valloc = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].valloc
valloc.restype = c_void_p
valloc.argtypes = [size_t]
posix_memalign = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].posix_memalign
posix_memalign.restype = c_int
posix_memalign.argtypes = [POINTER(c_void_p), size_t, size_t]
aligned_alloc = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].aligned_alloc
aligned_alloc.restype = c_void_p
aligned_alloc.argtypes = [size_t, size_t]
abort = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].abort
abort.restype = None
abort.argtypes = []
on_exit = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].on_exit
on_exit.restype = c_int
on_exit.argtypes = [CFUNCTYPE(None, c_int, c_void_p), c_void_p]
exit = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].exit
exit.restype = None
exit.argtypes = [c_int]
quick_exit = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].quick_exit
quick_exit.restype = None
quick_exit.argtypes = [c_int]
_Exit = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so']._Exit
_Exit.restype = None
_Exit.argtypes = [c_int]
getenv = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].getenv
getenv.restype = STRING
getenv.argtypes = [STRING]
secure_getenv = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].secure_getenv
secure_getenv.restype = STRING
secure_getenv.argtypes = [STRING]
putenv = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].putenv
putenv.restype = c_int
putenv.argtypes = [STRING]
setenv = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].setenv
setenv.restype = c_int
setenv.argtypes = [STRING, STRING, c_int]
unsetenv = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].unsetenv
unsetenv.restype = c_int
unsetenv.argtypes = [STRING]
clearenv = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].clearenv
clearenv.restype = c_int
clearenv.argtypes = []
mktemp = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].mktemp
mktemp.restype = STRING
mktemp.argtypes = [STRING]
mkstemp = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].mkstemp
mkstemp.restype = c_int
mkstemp.argtypes = [STRING]
mkstemp64 = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].mkstemp64
mkstemp64.restype = c_int
mkstemp64.argtypes = [STRING]
mkstemps = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].mkstemps
mkstemps.restype = c_int
mkstemps.argtypes = [STRING, c_int]
mkstemps64 = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].mkstemps64
mkstemps64.restype = c_int
mkstemps64.argtypes = [STRING, c_int]
mkdtemp = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].mkdtemp
mkdtemp.restype = STRING
mkdtemp.argtypes = [STRING]
mkostemp = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].mkostemp
mkostemp.restype = c_int
mkostemp.argtypes = [STRING, c_int]
mkostemp64 = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].mkostemp64
mkostemp64.restype = c_int
mkostemp64.argtypes = [STRING, c_int]
mkostemps = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].mkostemps
mkostemps.restype = c_int
mkostemps.argtypes = [STRING, c_int, c_int]
mkostemps64 = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].mkostemps64
mkostemps64.restype = c_int
mkostemps64.argtypes = [STRING, c_int, c_int]
system = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].system
system.restype = c_int
system.argtypes = [STRING]
canonicalize_file_name = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].canonicalize_file_name
canonicalize_file_name.restype = STRING
canonicalize_file_name.argtypes = [STRING]
comparison_fn_t = __compar_fn_t
__compar_d_fn_t = CFUNCTYPE(c_int, c_void_p, c_void_p, c_void_p)
qsort = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].qsort
qsort.restype = None
qsort.argtypes = [c_void_p, size_t, size_t, __compar_fn_t]
qsort_r = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].qsort_r
qsort_r.restype = None
qsort_r.argtypes = [c_void_p, size_t, size_t, __compar_d_fn_t, c_void_p]
abs = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].abs
abs.restype = c_int
abs.argtypes = [c_int]
labs = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].labs
labs.restype = c_long
labs.argtypes = [c_long]
llabs = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].llabs
llabs.restype = c_longlong
llabs.argtypes = [c_longlong]
div = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].div
div.restype = div_t
div.argtypes = [c_int, c_int]
ldiv = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].ldiv
ldiv.restype = ldiv_t
ldiv.argtypes = [c_long, c_long]
lldiv = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].lldiv
lldiv.restype = lldiv_t
lldiv.argtypes = [c_longlong, c_longlong]
ecvt = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].ecvt
ecvt.restype = STRING
ecvt.argtypes = [c_double, c_int, POINTER(c_int), POINTER(c_int)]
fcvt = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].fcvt
fcvt.restype = STRING
fcvt.argtypes = [c_double, c_int, POINTER(c_int), POINTER(c_int)]
gcvt = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].gcvt
gcvt.restype = STRING
gcvt.argtypes = [c_double, c_int, STRING]
qecvt = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].qecvt
qecvt.restype = STRING
qecvt.argtypes = [c_longdouble, c_int, POINTER(c_int), POINTER(c_int)]
qfcvt = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].qfcvt
qfcvt.restype = STRING
qfcvt.argtypes = [c_longdouble, c_int, POINTER(c_int), POINTER(c_int)]
qgcvt = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].qgcvt
qgcvt.restype = STRING
qgcvt.argtypes = [c_longdouble, c_int, STRING]
ecvt_r = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].ecvt_r
ecvt_r.restype = c_int
ecvt_r.argtypes = [c_double, c_int, POINTER(c_int), POINTER(c_int), STRING, size_t]
fcvt_r = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].fcvt_r
fcvt_r.restype = c_int
fcvt_r.argtypes = [c_double, c_int, POINTER(c_int), POINTER(c_int), STRING, size_t]
qecvt_r = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].qecvt_r
qecvt_r.restype = c_int
qecvt_r.argtypes = [c_longdouble, c_int, POINTER(c_int), POINTER(c_int), STRING, size_t]
qfcvt_r = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].qfcvt_r
qfcvt_r.restype = c_int
qfcvt_r.argtypes = [c_longdouble, c_int, POINTER(c_int), POINTER(c_int), STRING, size_t]
mblen = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].mblen
mblen.restype = c_int
mblen.argtypes = [STRING, size_t]
mbtowc = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].mbtowc
mbtowc.restype = c_int
mbtowc.argtypes = [WSTRING, STRING, size_t]
rpmatch = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].rpmatch
rpmatch.restype = c_int
rpmatch.argtypes = [STRING]
getsubopt = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].getsubopt
getsubopt.restype = c_int
getsubopt.argtypes = [POINTER(STRING), POINTER(STRING), POINTER(STRING)]
posix_openpt = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].posix_openpt
posix_openpt.restype = c_int
posix_openpt.argtypes = [c_int]
grantpt = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].grantpt
grantpt.restype = c_int
grantpt.argtypes = [c_int]
unlockpt = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].unlockpt
unlockpt.restype = c_int
unlockpt.argtypes = [c_int]
ptsname = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].ptsname
ptsname.restype = STRING
ptsname.argtypes = [c_int]
getpt = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].getpt
getpt.restype = c_int
getpt.argtypes = []
getloadavg = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].getloadavg
getloadavg.restype = c_int
getloadavg.argtypes = [POINTER(c_double), c_int]
memccpy = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].memccpy
memccpy.restype = c_void_p
memccpy.argtypes = [c_void_p, c_void_p, c_int, size_t]
memcmp = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].memcmp
memcmp.restype = c_int
memcmp.argtypes = [c_void_p, c_void_p, size_t]
memchr = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].memchr
memchr.restype = c_void_p
memchr.argtypes = [c_void_p, c_int, size_t]
memchr = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].memchr
memchr.restype = c_void_p
memchr.argtypes = [c_void_p, c_int, size_t]
rawmemchr = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].rawmemchr
rawmemchr.restype = c_void_p
rawmemchr.argtypes = [c_void_p, c_int]
rawmemchr = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].rawmemchr
rawmemchr.restype = c_void_p
rawmemchr.argtypes = [c_void_p, c_int]
memrchr = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].memrchr
memrchr.restype = c_void_p
memrchr.argtypes = [c_void_p, c_int, size_t]
memrchr = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].memrchr
memrchr.restype = c_void_p
memrchr.argtypes = [c_void_p, c_int, size_t]
strcmp = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].strcmp
strcmp.restype = c_int
strcmp.argtypes = [STRING, STRING]
strncmp = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].strncmp
strncmp.restype = c_int
strncmp.argtypes = [STRING, STRING, size_t]
strcoll = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].strcoll
strcoll.restype = c_int
strcoll.argtypes = [STRING, STRING]
strxfrm = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].strxfrm
strxfrm.restype = size_t
strxfrm.argtypes = [STRING, STRING, size_t]
strcoll_l = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].strcoll_l
strcoll_l.restype = c_int
strcoll_l.argtypes = [STRING, STRING, __locale_t]
strxfrm_l = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].strxfrm_l
strxfrm_l.restype = size_t
strxfrm_l.argtypes = [STRING, STRING, size_t, __locale_t]
strdup = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].strdup
strdup.restype = STRING
strdup.argtypes = [STRING]
strndup = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].strndup
strndup.restype = STRING
strndup.argtypes = [STRING, size_t]
strchr = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].strchr
strchr.restype = STRING
strchr.argtypes = [STRING, c_int]
strchr = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].strchr
strchr.restype = STRING
strchr.argtypes = [STRING, c_int]
strrchr = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].strrchr
strrchr.restype = STRING
strrchr.argtypes = [STRING, c_int]
strrchr = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].strrchr
strrchr.restype = STRING
strrchr.argtypes = [STRING, c_int]
strchrnul = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].strchrnul
strchrnul.restype = STRING
strchrnul.argtypes = [STRING, c_int]
strchrnul = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].strchrnul
strchrnul.restype = STRING
strchrnul.argtypes = [STRING, c_int]
strcspn = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].strcspn
strcspn.restype = size_t
strcspn.argtypes = [STRING, STRING]
strspn = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].strspn
strspn.restype = size_t
strspn.argtypes = [STRING, STRING]
strpbrk = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].strpbrk
strpbrk.restype = STRING
strpbrk.argtypes = [STRING, STRING]
strpbrk = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].strpbrk
strpbrk.restype = STRING
strpbrk.argtypes = [STRING, STRING]
strstr = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].strstr
strstr.restype = STRING
strstr.argtypes = [STRING, STRING]
strstr = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].strstr
strstr.restype = STRING
strstr.argtypes = [STRING, STRING]
strtok = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].strtok
strtok.restype = STRING
strtok.argtypes = [STRING, STRING]
__strtok_r = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].__strtok_r
__strtok_r.restype = STRING
__strtok_r.argtypes = [STRING, STRING, POINTER(STRING)]
strtok_r = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].strtok_r
strtok_r.restype = STRING
strtok_r.argtypes = [STRING, STRING, POINTER(STRING)]
strcasestr = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].strcasestr
strcasestr.restype = STRING
strcasestr.argtypes = [STRING, STRING]
strcasestr = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].strcasestr
strcasestr.restype = STRING
strcasestr.argtypes = [STRING, STRING]
memmem = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].memmem
memmem.restype = c_void_p
memmem.argtypes = [c_void_p, size_t, c_void_p, size_t]
__mempcpy = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].__mempcpy
__mempcpy.restype = c_void_p
__mempcpy.argtypes = [c_void_p, c_void_p, size_t]
strlen = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].strlen
strlen.restype = size_t
strlen.argtypes = [STRING]
strnlen = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].strnlen
strnlen.restype = size_t
strnlen.argtypes = [STRING, size_t]
strerror = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].strerror
strerror.restype = STRING
strerror.argtypes = [c_int]
strerror_r = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].strerror_r
strerror_r.restype = STRING
strerror_r.argtypes = [c_int, STRING, size_t]
strerror_l = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].strerror_l
strerror_l.restype = STRING
strerror_l.argtypes = [c_int, __locale_t]
__bzero = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].__bzero
__bzero.restype = None
__bzero.argtypes = [c_void_p, size_t]
bcmp = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].bcmp
bcmp.restype = c_int
bcmp.argtypes = [c_void_p, c_void_p, size_t]
index = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].index
index.restype = STRING
index.argtypes = [STRING, c_int]
index = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].index
index.restype = STRING
index.argtypes = [STRING, c_int]
rindex = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].rindex
rindex.restype = STRING
rindex.argtypes = [STRING, c_int]
rindex = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].rindex
rindex.restype = STRING
rindex.argtypes = [STRING, c_int]
ffs = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].ffs
ffs.restype = c_int
ffs.argtypes = [c_int]
ffsl = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].ffsl
ffsl.restype = c_int
ffsl.argtypes = [c_long]
ffsll = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].ffsll
ffsll.restype = c_int
ffsll.argtypes = [c_longlong]
strcasecmp = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].strcasecmp
strcasecmp.restype = c_int
strcasecmp.argtypes = [STRING, STRING]
strncasecmp = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].strncasecmp
strncasecmp.restype = c_int
strncasecmp.argtypes = [STRING, STRING, size_t]
strcasecmp_l = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].strcasecmp_l
strcasecmp_l.restype = c_int
strcasecmp_l.argtypes = [STRING, STRING, __locale_t]
strncasecmp_l = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].strncasecmp_l
strncasecmp_l.restype = c_int
strncasecmp_l.argtypes = [STRING, STRING, size_t, __locale_t]
strsep = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].strsep
strsep.restype = STRING
strsep.argtypes = [POINTER(STRING), STRING]
strsignal = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].strsignal
strsignal.restype = STRING
strsignal.argtypes = [c_int]
__stpcpy = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].__stpcpy
__stpcpy.restype = STRING
__stpcpy.argtypes = [STRING, STRING]
__stpncpy = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].__stpncpy
__stpncpy.restype = STRING
__stpncpy.argtypes = [STRING, STRING, size_t]
strverscmp = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].strverscmp
strverscmp.restype = c_int
strverscmp.argtypes = [STRING, STRING]
strfry = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].strfry
strfry.restype = STRING
strfry.argtypes = [STRING]
memfrob = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].memfrob
memfrob.restype = c_void_p
memfrob.argtypes = [c_void_p, size_t]
basename = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].basename
basename.restype = STRING
basename.argtypes = [STRING]
basename = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].basename
basename.restype = STRING
basename.argtypes = [STRING]
sigset_t = __sigset_t
__fd_mask = c_long
class fd_set(Structure):
    pass
fd_set._fields_ = [
    ('fds_bits', __fd_mask * 16),
]
fd_mask = __fd_mask
select = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].select
select.restype = c_int
select.argtypes = [c_int, POINTER(fd_set), POINTER(fd_set), POINTER(fd_set), POINTER(timeval)]
class timespec(Structure):
    pass
timespec._fields_ = [
]
pselect = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].pselect
pselect.restype = c_int
pselect.argtypes = [c_int, POINTER(fd_set), POINTER(fd_set), POINTER(fd_set), POINTER(timespec), POINTER(__sigset_t)]
gnu_dev_major = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].gnu_dev_major
gnu_dev_major.restype = c_uint
gnu_dev_major.argtypes = [c_ulonglong]
gnu_dev_minor = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].gnu_dev_minor
gnu_dev_minor.restype = c_uint
gnu_dev_minor.argtypes = [c_ulonglong]
gnu_dev_makedev = _libraries['/usr/lib/ffmpeg2.8/libavcodec.so'].gnu_dev_makedev
gnu_dev_makedev.restype = c_ulonglong
gnu_dev_makedev.argtypes = [c_uint, c_uint]
u_char = __u_char
u_short = __u_short
u_int = __u_int
u_long = __u_long
quad_t = __quad_t
u_quad_t = __u_quad_t
fsid_t = __fsid_t
loff_t = __loff_t
ino_t = __ino_t
ino64_t = __ino64_t
dev_t = __dev_t
gid_t = __gid_t
mode_t = __mode_t
nlink_t = __nlink_t
uid_t = __uid_t
pid_t = __pid_t
id_t = __id_t
daddr_t = __daddr_t
caddr_t = __caddr_t
key_t = __key_t
useconds_t = __useconds_t
suseconds_t = __suseconds_t
ulong = c_ulong
ushort = c_ushort
uint = c_uint
u_int8_t = c_ubyte
u_int16_t = c_ushort
u_int32_t = c_uint
u_int64_t = c_ulong
register_t = c_long
blksize_t = __blksize_t
blkcnt_t = __blkcnt_t
fsblkcnt_t = __fsblkcnt_t
fsfilcnt_t = __fsfilcnt_t
blkcnt64_t = __blkcnt64_t
fsblkcnt64_t = __fsblkcnt64_t
fsfilcnt64_t = __fsfilcnt64_t
class __locale_data(Structure):
    pass
__locale_struct._fields_ = [
    ('__locales', POINTER(__locale_data) * 13),
    ('__ctype_b', POINTER(c_ushort)),
    ('__ctype_tolower', POINTER(c_int)),
    ('__ctype_toupper', POINTER(c_int)),
    ('__names', STRING * 13),
]
__locale_data._fields_ = [
]
locale_t = __locale_t
ptrdiff_t = c_long
__all__ = ['AVFMT_NOBINSEARCH', 'CODEC_ID_ADPCM_IMA_AMV', 'ETXTBSY',
           'AV_CODEC_ID_TEXT', 'math_errhandling', 'AV_ROUND_UP',
           'FF_CODER_TYPE_VLC', 'av_buffer_is_writable',
           'av_get_string', 'AV_CODEC_ID_CDXL', '__off64_t',
           'PIX_FMT_YUV422P', 'PIX_FMT_YUVJ440P',
           'AVMEDIA_TYPE_VIDEO', 'av_opt_query_ranges_default',
           'FF_PROFILE_H264_HIGH_10', 'EL3HLT', 'FILENAME_MAX',
           'secure_getenv', 'AV_RESAMPLE_DITHER_RECTANGULAR', 'ilogb',
           'ENOTSOCK', 'AVPALETTE_COUNT', 'AVFILTER_CMD_FLAG_FAST',
           'av_format_get_subtitle_codec', 'AV_CODEC_ID_TRUESPEECH',
           'avformat_get_riff_video_tags', 'wctomb', '__FD_ISSET',
           '_IO_BUFSIZ', 'EFBIG', 'av_codec_get_tag',
           'CODEC_ID_BINKVIDEO', 'CODEC_ID_ASV2', '_IO_off64_t',
           'CODEC_ID_ASV1', 'AVSEEK_FLAG_BACKWARD', 'islessgreater',
           'tanl', 'PIX_FMT_YUV444P14BE',
           'AV_CLASS_CATEGORY_SWSCALER', 'AV_CODEC_ID_V410',
           'AV_CLASS_CATEGORY_DEMUXER', 'SCNdFAST16',
           'av_get_channel_layout_nb_channels', '__NFDBITS',
           'CODEC_ID_BMV_AUDIO', 'SCNuFAST16', 'PRIXFAST32',
           'AV_CODEC_ID_PGM', 'fmod', 'CODEC_ID_DIRAC', 'acosl',
           'SWS_CS_DEFAULT', '__ptsname_r_chk', 'gnu_dev_makedev',
           'AV_CODEC_PROP_INTRA_ONLY', 'FFALIGN', '_DEFAULT_SOURCE',
           'AV_PIX_FMT_YUV420P14BE', '__va_list_tag', 'u_long',
           'AV_LOCK_CREATE', 'AV_CH_TOP_CENTER', 'SWS_CS_SMPTE240M',
           'SWS_CS_FCC', 'AV_CODEC_PROP_TEXT_SUB', 'pp_free_context',
           'SCNdLEAST32', '_POSIX_', '____gwchar_t_defined',
           'AVPixelFormat', 'AVCOL_PRI_FILM', '__compar_d_fn_t',
           'asin', 'FF_CMP_CHROMA', '__uint8_t',
           'CODEC_ID_SMACKAUDIO', 'AV_CODEC_ID_TAK_DEPRECATED',
           'AVCOL_TRC_UNSPECIFIED', 'tempnam', 'WNOHANG',
           '_IO_SHOWBASE', 'AV_CODEC_ID_G729', '__codecvt_partial',
           'WORD_BIT', 'av_buffer_unref', 'PIX_FMT_RGB444BE',
           'PRIoFAST16', 'be64toh', 'sscanf', 'copysign', 'drem',
           'AV_CODEC_ID_OTF', 'setstate_r', 'LIBAVDEVICE_IDENT',
           'av_get_colorspace_name', 'CODEC_ID_PBM',
           'CODEC_ID_FFMETADATA', 'N14pthread_cond_t4DOT_20E',
           'AV_CH_LAYOUT_MONO', 'FF_RC_STRATEGY_XVID', 'PRIXFAST16',
           'av_rescale', 'CODEC_FLAG_QPEL', 'CODEC_CAP_AUTO_THREADS',
           'AVDISCARD_NONE', 'PIX_FMT_DXVA2_VLD', 'pthread_t',
           'AV_CODEC_ID_MMVIDEO', 'avformat_alloc_output_context2',
           'CODEC_ID_AASC', 'sws_getConstVec',
           'FF_PROFILE_JPEG2000_DCINEMA_2K', 'FF_PROFILE_AAC_HE',
           'E2BIG', 'AV_CODEC_ID_BMV_VIDEO', 'FF_PROFILE_AAC_LOW',
           'av_set_q', 'FF_LOSS_COLORQUANT', 'EHOSTDOWN',
           'AV_CODEC_ID_WNV1', 'AV_AUDIO_SERVICE_TYPE_NB', '_IO_DEC',
           'EBUSY', 'qecvt', 'printf', '_POSIX_STREAM_MAX', 'getchar',
           'N8AVStream4DOT_29E', 'AV_CLASS_CATEGORY_MUXER',
           'PIX_FMT_YUV420P14BE', 'modff',
           'AV_CODEC_ID_ADPCM_IMA_EA_SEAD', 'fputs_unlocked',
           'fclose', 'LIBSWSCALE_IDENT', 'CODEC_ID_MICRODVD',
           'FF_DTG_AFD_4_3_SP_14_9', 'AVMEDIA_TYPE_DATA', 'qecvt_r',
           'ftello64', 'AVERROR_EXPERIMENTAL', 'FF_MB_DECISION_BITS',
           'expm1', 'PRIi8', 'EDQUOT', 'AV_PIX_FMT_BAYER_GBRG16BE',
           'AV_DISPOSITION_METADATA', 'MAX_REORDER_DELAY',
           'AV_DISPOSITION_CAPTIONS', 'av_opt_set_defaults2',
           '_IO_uid_t', 'PIX_FMT_VDPAU_WMV3', 'PRIXLEAST16', 'M_PHI',
           'drand48', 'AV_PIX_FMT_PAL8', 'erf', 'CODEC_ID_WMV2',
           'CODEC_ID_WMV3', 'CODEC_ID_WMV1', 'avcodec_decode_audio4',
           'LIBAVFORMAT_IDENT', 'AV_CH_LAYOUT_STEREO',
           '_POSIX_NGROUPS_MAX', '_IO_BOOLALPHA', 'EXFULL',
           'avcodec_default_get_buffer', '_POSIX_SYMLOOP_MAX',
           'avcodec_alloc_frame', 'off_t', 'av_packet_move_ref',
           'PIX_FMT_VAAPI_MOCO', 'AV_PIX_FMT_YUVJ422P',
           'CODEC_ID_PCM_S32LE', 'AV_OPT_TYPE_INT', '__fsblkcnt_t',
           'AV_CODEC_ID_EAC3', 'FF_CMP_SAD', '__STDC_CONSTANT_MACROS',
           'avfilter_license', 'PIX_FMT_RGB48LE',
           '_POSIX2_EXPR_NEST_MAX', '__FILE', 'lrand48', 'memfrob',
           'av_bitstream_filter_init', 'AV_CODEC_ID_IMC',
           '__WORDSIZE', 'CODEC_ID_MP3ON4', 'CODEC_ID_PGMYUV',
           'rewind', 'AVMediaType', 'av_codec_get_pkt_timebase',
           'av_frame_set_channel_layout', 'AV_LOG_DEBUG',
           'AV_CH_BACK_LEFT', 'CODEC_ID_PCM_S24LE', 'UINT32_C',
           'SCNu8', 'LINE_MAX', '_XOPEN_SOURCE', 'AV_PIX_FMT_GBR24P',
           'AV_PIX_FMT_YUVA420P16LE', 'PIX_FMT_BGR4_BYTE',
           'PIX_FMT_UYVY422', 'avio_rl24', 'valloc', '__GLIBC__',
           'pthread_rwlockattr_t', 'avfilter_link_free',
           'AV_CH_LAYOUT_STEREO_DOWNMIX', 'funlockfile',
           'AV_CODEC_ID_SNOW', 'strerror_r', 'avfilter_config_links',
           'AV_PIX_FMT_GBRP16LE', 'CODEC_ID_V408',
           'AV_OPT_SEARCH_FAKE_OBJ', 'SLICE_FLAG_ALLOW_PLANE',
           'avfilter_link', 'FF_QSCALE_TYPE_VP56', '_POSIX_NAME_MAX',
           'AV_CODEC_ID_FFMETADATA', 'ELIBMAX',
           'AV_OPT_TYPE_IMAGE_SIZE', 'CODEC_ID_PCM_F64BE',
           'AV_CODEC_ID_GSM', 'AV_CODEC_ID_SVQ1', 'AV_CODEC_ID_SVQ3',
           'PIX_FMT_MONOWHITE', 'AV_CODEC_ID_PCM_S24BE', 'strtouq',
           '__glibc_likely', 'avio_read', 'LIBAVFILTER_IDENT',
           'ENOTTY', 'CODEC_CAP_FRAME_THREADS', '_IONBF', 'finitef',
           'AV_CODEC_ID_PAF_VIDEO', 'PTHREAD_DESTRUCTOR_ITERATIONS',
           'AV_CODEC_ID_PCM_S16BE_PLANAR', 'finitel',
           'AV_PICTURE_TYPE_BI', 'SCNoFAST16',
           'AV_CODEC_ID_ADPCM_IMA_SMJPEG', 'EWOULDBLOCK', 'ENOLINK',
           'CODEC_ID_TRUEMOTION1', 'AV_CODEC_ID_RV40',
           'av_write_trailer', 'CODEC_ID_TRUEMOTION2', 'AV_FIELD_BB',
           'INT_LEAST16_MAX', 'PIX_FMT_YUV420P10BE', 'EMLINK',
           'AV_GET_BUFFER_FLAG_REF', 'MB_TYPE_INTRA4x4',
           'uint_least16_t', 'avfilter_init_dict',
           'AVFMT_NOGENSEARCH', 'a64l', 'FF_IDCT_SIMPLEARMV6',
           'av_stream_get_r_frame_rate', 'AV_FIELD_BT', 'AVCodecTag',
           'AV_PIX_FMT_GBRP16BE', 'CODEC_ID_TIFF',
           'AIO_PRIO_DELTA_MAX', 'ECANCELED', 'CODEC_ID_INDEO5',
           'PIX_FMT_GBRP12LE', 'CODEC_ID_INDEO3', 'CODEC_ID_INDEO2',
           'UINT64_MAX', 'PRIdLEAST64',
           'AV_PKT_DATA_SUBTITLE_POSITION', 'CODEC_FLAG_PSNR',
           'uid_t', 'pow10f', 'AV_SAMPLE_FMT_S16P', 'u_int16_t',
           'SWS_LANCZOS', 'AV_PIX_FMT_YUV444P12BE',
           'AVFMT_NODIMENSIONS', 'PRIuLEAST64', 'FF_CMP_SSE',
           'av_get_frame_filename', 'AV_ROUND_ZERO', '_SYS_CDEFS_H',
           'AV_CLASS_CATEGORY_SWRESAMPLER', 'AVSTREAM_PARSE_NONE',
           'AV_PIX_FMT_YUV410P', 'PIX_FMT_UYYVYY411',
           'av_next_option', 'PARSER_FLAG_USE_CODEC_TS',
           'AV_CODEC_ID_PPM', 'CODEC_ID_IDF', 'av_opt_find',
           'AVDISCARD_NONKEY', 'CODEC_ID_XBIN', '__fsword_t',
           'PTHREAD_STACK_MIN', 'FF_PRED_LEFT', 'AVFMT_FLAG_NONBLOCK',
           'CODEC_ID_IFF_ILBM', 'AV_PIX_FMT_XVMC_MPEG2_MC', 'logb',
           'sinhf', 'fileno_unlocked', 'av_opt_query_ranges',
           'SCNdFAST64', 'sws_addVec', 'AV_PIX_FMT_RGBA64LE',
           'AVOutputFormat', 'WIFSIGNALED', 'sinhl',
           'AV_CODEC_ID_VBLE', 'pid_t', 'AVFrac', 'MB_TYPE_INTRA_PCM',
           'uint_fast32_t', 'AV_CODEC_ID_VMDVIDEO', 'div_t',
           '_IO_IS_FILEBUF', 'AV_CODEC_ID_THP', 'sprintf',
           'av_free_packet', 'AVFMT_NOSTREAMS',
           'av_frame_set_best_effort_timestamp', 'CHARCLASS_NAME_MAX',
           'SCNuLEAST16', 'LIBSWSCALE_VERSION_MICRO',
           'AV_CODEC_ID_CMV', 'log2', 'AV_CODEC_ID_AIC',
           'AV_OPT_TYPE_PIXEL_FMT', 'AV_PIX_FMT_YUV422P9LE',
           'AV_CODEC_ID_OPUS', 'SWS_BITEXACT', 'av_opt_eval_float',
           'PIX_FMT_GBRP10BE', 'AV_CODEC_ID_MJPEGB', 'PRId64',
           'L_cuserid', 'av_get_picture_type_char', 'av_add_q',
           'MB_TYPE_INTERLACED', 'AVBuffer',
           'av_frame_get_channel_layout', '__strtol_internal',
           'FF_CMP_ZERO', 'CODEC_ID_ZEROCODEC', 'CODEC_ID_MSZH',
           '_POSIX_MQ_PRIO_MAX', 'htobe16', '__pthread_list_t',
           'erff', 'jrand48', 'isinff', 'erfc',
           'AVERROR_PROTOCOL_NOT_FOUND', 'pow10', 'CODEC_ID_4XM',
           'erfl', 'CODEC_ID_SGI', 'scanf', 'AV_CODEC_ID_FLAC',
           'AVPanScan', 'program_invocation_short_name',
           'SUBTITLE_ASS', 'AVFILTER_AUTO_CONVERT_ALL',
           '__suseconds_t', 'av_packet_free_side_data',
           'AV_DISPOSITION_FORCED', 'avresample_version', 'floorl',
           'avfilter_register_all', 'SCNi16', 'FF_MB_DECISION_RD',
           'ldexp', '_IO_lock_t', '_POSIX2_COLL_WEIGHTS_MAX',
           '__SIZEOF_PTHREAD_MUTEXATTR_T', 'CODEC_ID_ROQ',
           'av_reallocp_array', 'strncpy', 'CODEC_ID_ATRAC3P',
           'FP_ILOGB0', 'avcodec_set_dimensions', '_sys_nerr', 'exp2',
           'AV_AUDIO_SERVICE_TYPE_VOICE_OVER', 'qsort',
           'PIX_FMT_ARGB', 'avio_printf',
           'AV_CODEC_ID_G2M_DEPRECATED', 'ino64_t',
           'AV_CODEC_ID_GSM_MS', 'N8AVPacket4DOT_28E', 'memcmp',
           'av_samples_fill_arrays', 'EISNAM',
           'AV_DISPOSITION_DESCRIPTIONS', 'ecvt_r',
           'FF_IDCT_SIMPLEVIS', '_POSIX_PATH_MAX', 'setbuffer',
           'av_append_packet', 'LLONG_MIN', 'AV_CODEC_ID_DIRAC',
           'avio_flush', 'av_frame_ref', '__blkcnt64_t', 'mkostemp',
           'AV_CODEC_ID_TARGA_Y216', 'AV_CODEC_ID_SONIC_LS',
           'BC_DIM_MAX', 'AV_CODEC_ID_EIA_608', '__vdprintf_chk',
           'CODEC_ID_SUNRAST', 'avcodec_version',
           'FF_SUB_CHARENC_MODE_DO_NOTHING', 'AV_CODEC_ID_TTF',
           'INT32_MAX', 'AVSubtitleType', 'CODEC_ID_CDXL',
           'av_get_channel_layout_string', 'INT_LEAST64_MIN',
           '_IO_BE', 'AV_AUDIO_SERVICE_TYPE_DIALOGUE', 'ULONG_MAX',
           'AV_PIX_FMT_RGBA64BE', 'expl', 'av_frame_unref', 'fma',
           'expf', '_IOS_INPUT', 'MB_TYPE_16x16', 'CODEC_ID_AC3',
           'CODEC_ID_ATRAC1', 'AVCHROMA_LOC_LEFT', 'avpicture_layout',
           'EILSEQ', 'FF_PROFILE_UNKNOWN', 'PDP_ENDIAN',
           'SWS_BILINEAR', 'AV_CODEC_ID_TARGA', 'av_realloc_array',
           'av_cpu_count', 'AVFMT_NO_BYTE_SEEK', '__rlim_t',
           '__FLOAT_WORD_ORDER', 'AV_CODEC_ID_PCM_S16BE',
           'CODEC_ID_8SVX_EXP', 'setstate', 'ENONET', 'ECHRNG',
           'FF_BUFFER_HINTS_READABLE', 'AV_PIX_FMT_BGR4_BYTE',
           'AV_EF_COMPLIANT', 'AVCOL_TRC_GAMMA22',
           'sws_setColorspaceDetails', 'AVCOL_TRC_GAMMA28',
           'FF_CODER_TYPE_DEFLATE', 'ESRCH', 'PIX_FMT_BGR48LE',
           'CODEC_ID_MJPEG', 'av_destruct_packet',
           'AVERROR_BUFFER_TOO_SMALL', 'SWS_CPU_CAPS_MMX',
           '__clockid_t', 'SWS_FAST_BILINEAR', 'PRIx64', '_IOS_ATEND',
           'FF_BUG_HPEL_CHROMA', 'PIX_FMT_YUV422P9BE', 'FF_CMP_DCT',
           'AV_CODEC_ID_BINKAUDIO_RDFT', 'AV_CODEC_ID_QCELP',
           'FF_DEBUG_VIS_MV_B_BACK', 'avfilter_graph_parse',
           'CODEC_ID_TSCC2', '_POSIX_AIO_MAX', 'PRIoMAX',
           'FF_QSCALE_TYPE_MPEG2', 'MB_TYPE_DIRECT2',
           'AV_NUM_DATA_POINTERS', 'CODEC_ID_RA_144', 'lcong48',
           'AVCOL_SPC_SMPTE170M', 'suseconds_t', 'AV_LOG_MAX_OFFSET',
           'LIBAVFILTER_VERSION_INT', 'malloc', 'AV_CPU_FLAG_VFPV3',
           'fseeko64', 'BC_SCALE_MAX', 'setlinebuf',
           'PIX_FMT_YUV422P10BE', 'setvbuf', 'avresample_close',
           'AV_CODEC_ID_VOXWARE', 'MAX_STD_TIMEBASES',
           'FF_PROFILE_H264_CAVLC_444', 'AV_CODEC_ID_AMR_WB',
           'CODEC_ID_PCM_LXF', 'AV_CODEC_ID_VIMA', '__GNU_LIBRARY__',
           '_BITS_TYPESIZES_H', 'nanf', 'AV_PIX_FMT_BGRA64LE',
           'AV_CODEC_ID_VPLAYER', '__USE_XOPEN2KXSI',
           'AV_CH_FRONT_RIGHT_OF_CENTER', 'av_bitstream_filter_close',
           '__underflow', 'INTMAX_C', 'AV_SAMPLE_FMT_S32',
           '_IO_2_1_stdin_', '__fpclassify', 'fgetpos64',
           'AV_DISPOSITION_LYRICS', 'AV_CODEC_ID_EXR', 'AV_FIELD_TB',
           'AV_MATRIX_ENCODING_DPLII', 'FF_BUG_OLD_MSMPEG4',
           'AVPicture', 'PRIu16', 'av_log_default_callback',
           'FF_PROFILE_DTS_ES', '_POSIX_RTSIG_MAX',
           'av_frame_get_pkt_duration', 'AV_CODEC_ID_FRWU',
           'AV_CODEC_ID_FFV1', 'lgammaf', 'AV_FIELD_UNKNOWN',
           '____mbstate_t_defined', 'avio_rb64', 'AVColorPrimaries',
           'lgammal', 'ceil', 'avfilter_graph_send_command',
           'av_codec_get_codec_descriptor',
           'av_format_get_video_codec', 'UINT_MAX', 'ptsname_r',
           'AV_CODEC_ID_AVUI', 'AV_CODEC_ID_WEBVTT', 'SCNuPTR',
           'SWS_ACCURATE_RND', 'fmaf', 'mkstemps64',
           'av_find_best_stream', 'perror', 'PRIoLEAST8',
           'pthread_condattr_t', 'AV_CODEC_ID_CELT', 'av_log2',
           'avcodec_register_all', 'PIX_FMT_GBR24P',
           'avcodec_decode_audio3', 'SWS_CPU_CAPS_BFIN', 'EINVAL',
           'PIX_FMT_YUV444P16BE', 'avresample_get_matrix', 'quad_t',
           '__fsid_t', 'strncmp', 'AV_PIX_FMT_BAYER_RGGB16BE',
           'AV_PIX_FMT_GBRAP16BE', 'mkdtemp', 'CODEC_ID_CINEPAK',
           'CODEC_ID_FLASHSV', 'AV_CODEC_ID_ANM',
           'avresample_available', '__fprintf_chk',
           'sws_getIdentityVec', 'AV_PIX_FMT_ARGB', 'dreml',
           'avcodec_default_execute', 'AVProbeData', 'ENOTNAM',
           'AVFieldOrder', 'AVLockOp', '_LIB_VERSION',
           'sws_freeFilter', 'avformat_match_stream_specifier',
           'avfilter_ref_get_channels', 'SwsVector', 'erfcf',
           'posix_memalign', 'FF_PROFILE_MPEG2_AAC_HE',
           'FF_OPT_TYPE_BINARY', 'AV_CODEC_ID_FLV1', 'CODEC_ID_GIF',
           'AV_CODEC_ID_SMPTE_KLV', 'FP_INFINITE',
           'av_filename_number_test', 'AV_PIX_FMT_YUVA422P9BE',
           '_POSIX_ARG_MAX', 'M_LOG2_10', 'AV_CODEC_ID_BMV_AUDIO',
           '__uint32_t', '__FD_SETSIZE', 'FF_CMP_SATD',
           'avresample_alloc_context', '__USE_XOPEN2K8',
           'av_get_sample_fmt', 'AV_OPT_FLAG_FILTERING_PARAM',
           'X_TLOSS', 'nearbyint', 'seed48_r', 'AV_PIX_FMT_RGB444BE',
           'AV_LOG_PANIC', 'matherr', 'AV_CODEC_PROP_LOSSLESS',
           'SCNuFAST32', 'AV_CH_LAYOUT_QUAD', 'AVDictionaryEntry',
           '_IO_va_list', 'FF_DEBUG_VIS_QP',
           'AV_RESAMPLE_DITHER_TRIANGULAR', 'PIX_FMT_YUVJ422P',
           'avio_wb32', 'AV_SIDE_DATA_PARAM_CHANGE_SAMPLE_RATE',
           'AV_PIX_FMT_BGRA64BE', 'AV_CODEC_ID_JV',
           'CODEC_ID_A64_MULTI5', 'AVOptionRanges', 'wcstoumax',
           'AVCOL_PRI_SMPTE240M', 'Motion_Est_ID', 'PRIxFAST16',
           'CODEC_ID_REALTEXT', 'EMFILE', 'fmaxf',
           'AV_PIX_FMT_YUV420P14LE', 'CODEC_ID_SRT', 'off64_t',
           'fmaxl', 'fabsl', 'EDOM', 'AV_CH_LAYOUT_6POINT1',
           'AV_CH_LAYOUT_6POINT0', 'AV_PKT_DATA_NEW_EXTRADATA',
           'SCNuMAX', 'strdup', 'av_log_set_flags',
           'AV_PIX_FMT_MONOWHITE', 'htole64', 'av_nearer_q',
           '_POSIX_TTY_NAME_MAX', 'hypotl', '__finite',
           'CODEC_ID_PNG', 'gnu_dev_major', 'fminf', 'putc',
           '__PTHREAD_MUTEX_HAVE_ELISION', 'AV_CPU_FLAG_FMA4',
           'trunc', 'rand', 'AV_CPU_FLAG_SSE42', '_IO_HEX', 'fminl',
           'FF_QP2LAMBDA', 'strsignal', 'j0l', 'AV_PIX_FMT_DXVA2_VLD',
           'tmpnam', 'AV_PIX_FMT_YUVJ444P',
           'FF_PROFILE_JPEG2000_CSTREAM_RESTRICTION_0', 'MKTAG',
           'av_get_channel_layout_channel_index', 'avcodec_license',
           'MB_TYPE_GMC', 'AV_CODEC_ID_ADPCM_YAMAHA',
           'AV_CODEC_ID_LJPEG', 'av_frame_set_pkt_pos',
           'FF_PROFILE_JPEG2000_DCINEMA_4K', 'AV_CODEC_ID_MPEG1VIDEO',
           'PIX_FMT_0RGB', 'EXIT_SUCCESS',
           'AV_CODEC_ID_PCM_S32LE_PLANAR_DEPRECATED', 'CODEC_ID_DXA',
           'tanh', 'tanf', 'FF_PROFILE_MPEG4_SIMPLE_FACE_ANIMATION',
           'av_dump_format', 'CODEC_ID_V210', 'AVStreamParseType',
           'CODEC_ID_VP6A', 'FF_BUG_AC_VLC', 'clearenv',
           'PIX_FMT_BGR0', 'CODEC_ID_VP6F', 'avfilter_unref_bufferp',
           'FF_DECODE_ERROR_MISSING_REFERENCE', 'avformat_open_input',
           'AV_CODEC_ID_BFI', 'ENOSTR', 'AV_PIX_FMT_XVMC_MPEG2_IDCT',
           'av_parser_close', 'FF_OPT_TYPE_CONST', 'popen',
           '__INO_T_MATCHES_INO64_T', 'exit',
           'AV_CODEC_ID_WMALOSSLESS', 'atoll', 'SCNdMAX',
           'AVFMT_FLAG_CUSTOM_IO', 'AV_CODEC_ID_DFA', 'CODEC_ID_MAD',
           'avutil_version', 'av_format_set_subtitle_codec',
           'AV_CODEC_ID_REALTEXT', 'u_short', 'av_grow_packet',
           'strnlen', 'AV_CODEC_ID_ALAC', 'PIX_FMT_YUV420P14LE',
           'SWS_CPU_CAPS_SSE2', 'SCNx64', '_IO_marker', 'RTSIG_MAX',
           'PIX_FMT_YUV422P14LE', 'AV_CPU_FLAG_VFP',
           '_POSIX_HOST_NAME_MAX', 'CODEC_ID_ZLIB',
           'FF_DEBUG_VIS_MV_P_FOR', 'CODEC_ID_MSMPEG4V3',
           '__SIZEOF_PTHREAD_ATTR_T', 'avcodec_configuration',
           'SIZE_MAX', 'AV_CODEC_ID_ZEROCODEC', 'PIX_FMT_BGR24',
           'PIX_FMT_PAL8', 'CODEC_ID_DVD_SUBTITLE', 'strerror',
           'av_new_packet', 'isinfl', '_IO_2_1_stdout_',
           '_POSIX_SIGQUEUE_MAX', 'FF_CMP_VSSE',
           'AVPROBE_SCORE_RETRY', 'AV_CODEC_ID_VMNC', 'atanf',
           'AV_PIX_FMT_BGR565BE', 'nrand48', 'pthread_mutex_t',
           'AV_CODEC_ID_FIRST_UNKNOWN', 'CODEC_FLAG2_NO_OUTPUT',
           'LIBSWSCALE_VERSION_INT', 'av_packet_from_data',
           'CODEC_ID_JACOSUB', 'av_guess_sample_aspect_ratio',
           'SCNiPTR', 'AV_CH_LAYOUT_HEXAGONAL', 'CODEC_ID_VB',
           'fseek', 'AV_CODEC_ID_ADPCM_EA_R3',
           'AV_CODEC_ID_ADPCM_EA_R2', 'AV_CODEC_ID_ADPCM_EA_R1',
           'AVCOL_SPC_FCC', 'CODEC_ID_IFF_BYTERUN1', 'AV_DICT_APPEND',
           'AV_CODEC_ID_SUBVIEWER', 'av_codec_set_pkt_timebase',
           'LIBSWSCALE_VERSION_MINOR', 'AVFMT_FLAG_NOFILLIN',
           'pthread_once_t', 'AV_PIX_FMT_YUVJ420P',
           'AVFMT_ALLOW_FLUSH', 'AV_CODEC_ID_PROBE', 'uint_least32_t',
           'sys_errlist', 'CODEC_FLAG_GRAY', 'PIX_FMT_YUV422P12BE',
           'AV_CODEC_ID_MSA1', 'isnormal', 'PIX_FMT_VAAPI_IDCT',
           'AV_LOG_VERBOSE', 'AV_CODEC_ID_XAN_DPCM', 'SCNd8',
           'avio_seek', '_XOPEN_', '__issignaling',
           'CODEC_FLAG_LOOP_FILTER', 'RAND_MAX',
           'AV_RESAMPLE_FILTER_TYPE_CUBIC', 'FF_LAMBDA_SHIFT',
           'CODEC_ID_ADPCM_YAMAHA', 'PIX_FMT_NV12', 'avio_skip',
           'AV_CODEC_ID_AURA', 'frexpl', 'loff_t', 'blksize_t',
           'AV_CODEC_ID_ADPCM_EA', 'PIX_FMT_YUV440P', 'int_least32_t',
           'AVUNERROR', 'CODEC_ID_VBLE', 'av_log_set_callback',
           'PIX_FMT_RGB565LE', 'dev_t', 'FP_NORMAL',
           'AVSEEK_FLAG_ANY', 'AVERROR_PATCHWELCOME',
           'AV_CH_FRONT_RIGHT', 'CODEC_ID_PCM_S24DAUD',
           'CODEC_ID_FIRST_SUBTITLE', 'AV_PIX_FMT_BGR444BE',
           'LIBPOSTPROC_VERSION_MICRO', 'PIX_FMT_RGB555LE',
           'CODEC_ID_QTRLE', 'float_t', 'LIBAVRESAMPLE_IDENT',
           'AVCOL_SPC_SMPTE240M', 'PIX_FMT_GRAY16BE',
           '_ISOC99_SOURCE', 'avcodec_encode_subtitle', 'freopen',
           'PRIiLEAST16', 'PIX_FMT_YUV444P9BE', 'frexpf',
           'fread_unlocked', 'AV_CODEC_ID_R10K', 'sws_freeContext',
           'DOMAIN', 'FF_ASPECT_EXTENDED', 'av_new_program',
           'rpmatch', 'avcodec_close', 'PIX_FMT_YUV420P12LE',
           'AVFILTER_FLAG_SLICE_THREADS',
           'avcodec_chroma_pos_to_enum', 'CODEC_ID_MMVIDEO',
           'FF_PROFILE_H264_HIGH', 'CODEC_ID_DVAUDIO',
           'AV_PIX_FMT_YUVA422P', 'CODEC_ID_WMAVOICE',
           'av_log_format_line', 'AV_PIX_FMT_NE', 'QP_STORE_T',
           'PRIiLEAST8', 'ctermid', '__id_t', 'AV_PIX_FMT_NB',
           'AV_HAVE_BIGENDIAN', '_IO_feof', 'PIX_FMT_YUV444P10BE',
           'AVCodecID', 'AV_OPT_TYPE_BINARY', 'ESTALE',
           'AV_CH_TOP_FRONT_LEFT', 'AV_CODEC_ID_PCM_U16BE',
           'AV_CODEC_ID_ADPCM_IMA_RAD', 'AV_CH_LAYOUT_6POINT1_FRONT',
           'AV_CODEC_ID_HDMV_PGS_SUBTITLE', '_IO_FIXED',
           'AV_CODEC_ID_PCM_S24DAUD', 'LIBAVFILTER_VERSION_MAJOR',
           'av_probe_input_buffer', 'LIBAVUTIL_VERSION_INT',
           'XATTR_NAME_MAX', 'FD_ISSET', '__codecvt_result',
           '__vasprintf_chk', 'PIX_FMT_YUV444P9LE', 'fcloseall',
           'PRIiMAX', 'avcodec_descriptor_next',
           'AV_CODEC_ID_PCM_U16LE', 'FF_IDCT_SIMPLENEON',
           'avformat_alloc_context', 'SCNi8', 'strpbrk',
           'FF_DEBUG_MV', 'PRIdPTR', 'MB_TYPE_P0L1',
           'PIX_FMT_YUV420P16LE', 'AVSampleFormat', 'blkcnt64_t',
           'PIX_FMT_YUVA422P', 'acos', '_IO_IN_BACKUP',
           'CODEC_ID_XAN_DPCM', '_SIGSET_H_types', 'PIX_FMT_VDA_VLD',
           'j1f', 'av_stream_set_r_frame_rate', 'FF_DTG_AFD_16_9',
           'avcodec_get_chroma_sub_sample', 'av_vlog',
           'AV_CODEC_ID_SOL_DPCM', 'AV_DISPOSITION_ATTACHED_PIC',
           'logbl', 'AV_CODEC_PROP_LOSSY', 'av_div_q',
           'CODEC_ID_BINKAUDIO_DCT', 'CODEC_ID_MSVIDEO1',
           'CODEC_ID_BMV_VIDEO', 'avio_put_str',
           'sws_isSupportedOutput', 'CODEC_ID_PCM_U32BE',
           'AV_PIX_FMT_UYVY422', 'CODEC_ID_WNV1', 'N4wait4DOT_10E',
           'AV_CODEC_ID_FRAPS', 'AVSEEK_FORCE', 'FF_DEBUG_QP',
           'avcodec_find_encoder', 'AVPacket', 'ENOTCONN', 'mrand48',
           'AV_DICT_DONT_OVERWRITE', 'AV_JOIN', 'floor',
           'SWS_FULL_CHR_H_INP', 'AV_CODEC_ID_C93',
           'SWS_FULL_CHR_H_INT', 'htobe32', 'AV_PIX_FMT_RGB48BE',
           'CODEC_ID_CELT', 'BUFSIZ', 'FF_BUG_AMV',
           '_POSIX_LOGIN_NAME_MAX', 'PRIoLEAST64', 'srand48',
           'PIX_FMT_RGB24', 'FF_PROFILE_MPEG2_MAIN', 'freopen64',
           'avio_wb16', 'PIX_FMT_YUV420P12BE',
           'CODEC_FLAG_INPUT_PRESERVED', 'avcodec_get_pix_fmt_loss',
           'sws_getCoefficients', '_IO_UNIFIED_JUMPTABLES', 'EL2HLT',
           'SEM_VALUE_MAX', 'ME_LOG', 'avfilter_pad_count', 'hypot',
           'AVFMT_RAWPICTURE', '_ENDIAN_H', 'AV_PIX_FMT_NV16',
           'SWS_AREA', 'AV_CODEC_ID_DVD_SUBTITLE', 'FF_DTG_AFD_14_9',
           'AV_CODEC_ID_PICTOR', 'PRIx32', 'AV_CODEC_ID_IAC',
           'av_opt_set_defaults', 'AVSTREAM_PARSE_FULL_ONCE',
           'AV_CODEC_ID_AYUV', '_IOS_NOCREATE', '_IO_SHOWPOS',
           'CODEC_ID_PCM_U32LE', 'AVColorTransferCharacteristic',
           'sws_getCachedContext', 'SIG_ATOMIC_MAX',
           'cookie_seek_function_t', 'AVIO_FLAG_DIRECT', 'initstate',
           'AV_CODEC_ID_ADPCM_AFC', '_IO_MAGIC', 'WEXITSTATUS',
           'BYTE_ORDER', 'avdevice_license', 'posix_openpt',
           'imaxdiv_t', 'CODEC_ID_R210', 'memmem', 'RE_DUP_MAX',
           'ME_X1', 'FF_COMPRESSION_DEFAULT', 'PRIuMAX',
           '__SIZEOF_PTHREAD_RWLOCKATTR_T', '__u_quad_t',
           'FF_LOSS_CHROMA', 'AVFormatContext', 'AV_CODEC_ID_MPL2',
           'AV_CH_STEREO_LEFT', 'PIX_FMT_XVMC_MPEG2_MC',
           'AVMEDIA_TYPE_NB', '_LARGEFILE64_SOURCE',
           'AV_PIX_FMT_YUV420P16LE', 'av_opt_get_double',
           'AVBufferRef', 'av_hwaccel_next', 'AV_PIX_FMT_BGR48BE',
           'intmax_t', 'useconds_t', '__bos0', 'av_get_channel_name',
           'AV_CODEC_ID_PCM_U8', 'gets', 'SCNuLEAST32',
           'CODEC_ID_WS_VQA', 'ENOTBLK', 'MB_TYPE_INTRA16x16',
           'AVChromaLocation', 'CODEC_ID_AVUI',
           'AV_PIX_FMT_YUV420P12LE', 'avio_wb24',
           'AV_AUDIO_SERVICE_TYPE_COMMENTARY', 'CODEC_ID_TEXT',
           'MATH_ERREXCEPT', 'offsetof', 'BC_BASE_MAX',
           'CODEC_ID_MP2', 'AV_MIX_COEFF_TYPE_Q8', 'ecvt', 'NFDBITS',
           'AV_PIX_FMT_0RGB', 'LIBAVCODEC_VERSION_MAJOR',
           '_POSIX_HIWAT', 'FF_THREAD_SLICE', 'ENOPKG',
           'CODEC_ID_WAVPACK', 'AV_OPT_FLAG_AUDIO_PARAM',
           'CODEC_ID_AAC', 'avio_get_str16le', 'AV_CPU_FLAG_SSE',
           'mkostemp64', 'AV_CODEC_ID_MSRLE',
           'av_codec_get_max_lowres', 'fread', 'fsetpos',
           'AV_CODEC_ID_G2M', 'uint_fast16_t',
           'AV_CODEC_ID_MPEG2VIDEO_XVMC',
           'AVFILTER_FLAG_SUPPORT_TIMELINE',
           'LIBAVFORMAT_VERSION_MAJOR', 'avfilter_link_set_closed',
           '_POSIX_UIO_MAXIOV', 'AV_SAMPLE_FMT_S32P', '__signbitf',
           'AVLINK_STARTINIT', 'CODEC_ID_SONIC', 'AV_CH_WIDE_RIGHT',
           'av_xiphlacing', 'CODEC_ID_SVQ1', 'CODEC_ID_SVQ3',
           '__bzero', 'CODEC_ID_EIA_608', 'AV_PIX_FMT_YUV420P12BE',
           'CODEC_ID_TSCC', 'AV_CODEC_ID_ADPCM_ADX', 'cuserid',
           'av_packet_shrink_side_data', 'CODEC_FLAG_LOW_DELAY',
           'AVStream', 'FF_CMP_VSAD', 'av_log_ask_for_sample',
           '_IO_fpos64_t', 'FF_PROFILE_MPEG4_SIMPLE',
           'av_guess_codec', 'avcodec_get_class',
           'LIBAVRESAMPLE_VERSION_MAJOR', '__time_t',
           'av_format_get_audio_codec', 'av_opt_eval_double',
           '__GLIBC_PREREQ', 'AV_PIX_FMT_NV20LE',
           'AV_AUDIO_SERVICE_TYPE_EMERGENCY', 'FF_PROFILE_H264_INTRA',
           'avdevice_configuration', 'AVHWAccel',
           'AV_CODEC_ID_WESTWOOD_SND1', 'ceilf',
           'av_register_codec_parser', 'AV_PIX_FMT_NONE',
           '_POSIX_THREAD_DESTRUCTOR_ITERATIONS',
           'AV_PIX_FMT_YUVA444P16BE', 'fsfilcnt_t', 'div',
           'INT_LEAST8_MIN', 'round', 'putchar_unlocked', 'av_log',
           'cosf', '__vfprintf_chk', 'nexttoward',
           'avutil_configuration', 'ENOTUNIQ', 'AVCodec', 'cosl',
           'AV_CODEC_ID_CPIA', 'cosh', 'ELNRNG', '__stpcpy',
           'CODEC_ID_ALAC', 'sincos', 'ERESTART', 'ENFILE', 'strsep',
           'CODEC_ID_PCM_ALAW', 'AVFMT_GLOBALHEADER',
           'getchar_unlocked', 'AV_LOG_FATAL', 'AVCOL_SPC_NB',
           'ffsll', 'avformat_queue_attached_pictures',
           'FF_PROFILE_MPEG4_ADVANCED_CODING', 'AVBPrint', 'M_E',
           'PRIXLEAST32', '__mbstowcs_chk', 'ENOPROTOOPT',
           'FF_PROFILE_H264_CONSTRAINED', 'AV_PIX_FMT_YUV420P9LE',
           'CODEC_ID_INTERPLAY_VIDEO', 'AV_PIX_FMT_RGB0', '_IO_FILE',
           'FF_BUFFER_HINTS_REUSABLE', '_G_HAVE_MMAP', 'va_list',
           '__attribute_format_strfmon__', 'av_frame_get_side_data',
           'av_opt_eval_flags', 'CODEC_ID_FLAC', 'AV_CPU_FLAG_AVX2',
           'CODEC_ID_PCM_U24LE', 'significandl', 'fmax', 'UINT16_C',
           'PIX_FMT_VDPAU_VC1', 'significandf', 'FF_CODER_TYPE_RLE',
           'AV_CODEC_ID_H263P', 'PRIX32', 'open_memstream',
           'AV_CODEC_ID_H263I', 'fsetpos64',
           'av_frame_set_sample_rate', 'av_realloc', 'srandom_r',
           'fmal', 'avresample_convert', 'wait', 'AVDictionary',
           'AV_PICTURE_TYPE_SI', 'AVFMT_VARIABLE_FPS', 'lroundf',
           'fopen', 'strtok', 'FF_DCT_MMX', 'lroundl',
           'av_get_channel_description', 'av_frame_move_ref',
           'M_LN10', 'AV_CODEC_ID_CLJR', 'SCNx8', 'nextafter',
           'AV_PICTURE_TYPE_SP', 'CODEC_FLAG_EMU_EDGE', 'strtof',
           '_LARGEFILE_SOURCE', 'FF_CMP_DCTMAX', 'CODEC_ID_AURA',
           'FF_PROFILE_H264_CONSTRAINED_BASELINE', 'FF_BUG_STD_QPEL',
           'srand', 'av_set_int', 'bzero', 'AV_PIX_FMT_GBRAP16LE',
           'FF_PROFILE_DTS_HD_HRA', 'AV_OPT_FLAG_IMPLICIT_KEY',
           'AV_AUDIO_SERVICE_TYPE_EFFECTS', 'u_int64_t',
           'CODEC_ID_FFVHUFF', '__off_t', 'FF_MIN_BUFFER_SIZE',
           'LIBAVDEVICE_VERSION_INT', 'CODEC_ID_FIRST_UNKNOWN',
           'AV_CODEC_ID_BINTEXT', 'y1f', 'avpicture_alloc',
           'AV_CODEC_ID_IDCIN', 'AV_CODEC_ID_KGV1',
           'CODEC_ID_WMV3IMAGE', 'avcodec_copy_context', 'rindex',
           'AV_CODEC_ID_SGIRLE', 'AV_PARSER_PTS_NB',
           'PIX_FMT_YUVJ444P', '_IOS_TRUNC', 'CODEC_ID_WMAPRO',
           'AV_PKT_FLAG_KEY', 'av_shrink_packet',
           'AV_DICT_MATCH_CASE', 'avresample_build_matrix',
           'FF_BUG_EDGE', 'FF_PROFILE_VC1_SIMPLE',
           'av_opt_get_channel_layout', 'CODEC_ID_PCM_F32BE',
           '__int8_t', 'AV_PIX_FMT_YUVA422P9LE', 'PTRDIFF_MAX',
           'AV_SAMPLE_FMT_FLT', 'av_opt_freep_ranges',
           'AVFILTER_CMD_FLAG_ONE', '_MATH_H', 'avio_open',
           'CODEC_ID_HDMV_PGS_SUBTITLE', 'av_write_frame',
           'avio_enum_protocols', 'AV_CODEC_ID_IFF_BYTERUN1',
           'ftrylockfile', 'CODEC_ID_ZMBV', 'AV_CODEC_ID_NELLYMOSER',
           'FF_PROFILE_RESERVED', 'strtoq', '_IO_pid_t',
           'CODEC_ID_FRWU', 'PIX_FMT_YUVJ420P', 'pthread_key_t',
           'HUGE_VAL', 'CODEC_ID_AYUV', 'u_int8_t', 'sws_freeVec',
           '__WALL', 'PRIxFAST32', '_IO_UNITBUF',
           'FF_DEBUG_DCT_COEFF', 'ENOTDIR', 'strtold',
           'av_compare_ts', 'FF_DECODE_ERROR_INVALID_BITSTREAM',
           'CODEC_ID_FFWAVESYNTH', 'FF_CMP_W53', '__fpclassifyf',
           'tmpnam_r', 'PP_CPU_CAPS_MMX2', 'MB_TYPE_P0L0', 'feof',
           'strncat', 'CODEC_ID_VOXWARE', 'clearerr',
           'AVResampleFilterType', 'SCNu64',
           'AV_CODEC_ID_OPUS_DEPRECATED', 'PIX_FMT_RGB444LE',
           'AV_MATRIX_ENCODING_DOLBY', 'ENETRESET',
           'CODEC_ID_ADPCM_IMA_WS', 'CODEC_ID_OPUS',
           'avcodec_free_frame', 'av_sdp_create', '_IEEE_',
           'strtoull', 'CODEC_ID_DVB_SUBTITLE', 'bsearch',
           'flockfile', 'ESRMNT', 'atan',
           'AV_RESAMPLE_FILTER_TYPE_KAISER', 'CODEC_ID_NELLYMOSER',
           'llround', 'AVCOL_RANGE_UNSPECIFIED', 'uint',
           'AV_PKT_DATA_SKIP_SAMPLES', 'FF_CMP_RD',
           'AVDISCARD_NONREF', 'FF_DCT_AUTO', 'strncasecmp_l',
           'AVCHROMA_LOC_TOP', 'strcasecmp',
           'AV_CODEC_ID_PCM_S8_PLANAR', 'FF_PROFILE_AAC_LD',
           'AVOptionRange', 'AV_PIX_FMT_YUV420P', 'SCNo64',
           'AV_CODEC_ID_QPEG', 'av_opt_set', 'stdin',
           'CODEC_ID_CDGRAPHICS', 'AV_CODEC_ID_TMV', 'N4wait4DOT_11E',
           'FF_LOSS_RESOLUTION', 'gamma', 'CODEC_ID_AMR_WB',
           'FF_DEBUG_PTS', 'EHOSTUNREACH', '__mempcpy',
           'AVMatrixEncoding', 'avfilter_graph_create_filter',
           'FF_PROFILE_MPEG4_SCALABLE_TEXTURE', 'UINT8_MAX',
           'AVFilterBufferRefAudioProps', 'scalblnl', 'j1l',
           'PIX_FMT_GBRP16LE', 'sws_getColorspaceDetails',
           'avfilter_copy_buffer_ref_props', 'FILE', 'size_t',
           'avio_pause', 'seed48', 'MAX_INPUT', 'AV_CODEC_ID_012V',
           'CODEC_FLAG_4MV', 'AV_CODEC_ID_TQI',
           'AVMEDIA_TYPE_ATTACHMENT', 'CODEC_ID_RL2', 'roundf',
           'AV_CH_BACK_CENTER', 'AV_CODEC_ID_WAVPACK',
           'PIX_FMT_VDPAU_MPEG1', 'PIX_FMT_BGR4', 'FF_CMP_DCT264',
           'PIX_FMT_VDPAU_MPEG2', 'CODEC_ID_V308', 'sws_init_context',
           'AV_CODEC_ID_IFF_ILBM', 'PRIo64', 'CODEC_ID_FLV1',
           'fileno', 'PRIXFAST8', 'AV_CODEC_ID_NONE', 'PIX_FMT_BGRA',
           'CODEC_ID_PCM_S16LE_PLANAR', 'PARSER_FLAG_ONCE',
           '_MATH_H_MATHDEF', 'AVFMT_FLAG_IGNIDX',
           'av_find_default_stream_index', 'av_register_input_format',
           '_LIBC_LIMITS_H_', 'cookie_write_function_t',
           'AVDISCARD_ALL', 'AV_CODEC_ID_A64_MULTI5', 'lgamma_r',
           'CODEC_ID_ADPCM_EA_XAS', 'avresample_set_matrix',
           'AV_CODEC_ID_VCR1', 'AV_CLASS_CATEGORY_OUTPUT',
           'INTMAX_MIN', 'av_frame_copy_props', 'CODEC_ID_APE',
           'sigset_t', 'av_buffer_get_opaque', 'CODEC_ID_RV30',
           'avformat_new_stream', '__USE_POSIX', 'DELAYTIMER_MAX',
           'PRIxMAX', 'AV_PIX_FMT_YUVA422P_LIBAV', '__locale_t',
           'AV_VERSION', 'CODEC_ID_FFV1', 'SLICE_FLAG_CODED_ORDER',
           'SUBTITLE_NONE', 'CODEC_ID_TTA', 'SCHAR_MIN',
           'FF_PROFILE_AAC_ELD', 'CODEC_ID_TTF', 'PIX_FMT_GBRP9LE',
           'avresample_configuration', 'AV_PIX_FMT_BAYER_GRBG8',
           'INT_FAST64_MAX', '__PRI64_PREFIX', '__fd_mask',
           'FF_INPUT_BUFFER_PADDING_SIZE', 'av_parser_parse2',
           'AV_CODEC_ID_MVC1', 'avcodec_encode_video',
           'AV_CODEC_ID_MVC2', 'SWS_CPU_CAPS_MMX2', 'FFUMOD',
           'AV_CODEC_ID_BINKVIDEO', '__useconds_t', 'CODEC_ID_EAC3',
           '_BITS_WCHAR_H', 'SWS_CS_ITU601', 'AV_LOCK_DESTROY',
           'av_register_all', 'CODEC_ID_PCM_S24BE', 'sqrtf',
           '_POSIX_CLOCKRES_MIN', 'LIBAVUTIL_VERSION_MINOR',
           'AVCHROMA_LOC_BOTTOM', 'CODEC_FLAG2_IGNORE_CROP',
           'AV_MIX_COEFF_TYPE_FLT', 'AV_PTS_WRAP_SUB_OFFSET',
           'FF_DTG_AFD_SP_4_3', 'uint_least8_t',
           'avfilter_get_audio_buffer_ref_from_arrays', 'u_int32_t',
           'AV_CODEC_ID_MLP', 'EREMOTE', 'asprintf', 'FF_CMP_NSSE',
           '__WORDSIZE_TIME64_COMPAT32', '_IO_cookie_io_functions_t',
           'CODEC_CAP_CHANNEL_CONF', 'AV_DISPOSITION_ORIGINAL',
           '_SYS_TYPES_H', '__P', 'CODEC_ID_SNOW', '_IO_ERR_SEEN',
           'remainder', 'AVSideDataParamChangeFlags', 'sws_cloneVec',
           'FF_PROFILE_DTS', 'av_packet_copy_props', '__uflow',
           'PIX_FMT_GBRP16BE',
           'FF_PROFILE_JPEG2000_CSTREAM_NO_RESTRICTION', '__USE_GNU',
           'AV_CODEC_ID_MPEG2TS', 'WUNTRACED', 'pthread_rwlock_t',
           'PIX_FMT_RGB555BE', 'SCNiFAST16', 'PRIiLEAST32',
           'pthread_attr_t', '__attribute_format_arg__',
           'XATTR_LIST_MAX', 'lround', 'AVChapter', 'avio_rb16',
           'av_frame_get_best_effort_timestamp',
           'AV_CODEC_ID_MSMPEG4V1', 'AV_CODEC_ID_MSS1',
           'AV_CODEC_ID_MSS2', 'AV_CODEC_ID_MSMPEG4V2', 'rint',
           'AV_CH_LAYOUT_2POINT1', '__issignalingf',
           'CODEC_ID_A64_MULTI', 'FF_LAMBDA_SCALE', '__W_STOPCODE',
           'PIX_FMT_NONE', 'AV_CODEC_ID_MSMPEG4V3', 'av_copy_packet',
           'SCNx16', 'AV_PIX_FMT_YUVA420P', '__ldiv_t_defined',
           'CODEC_ID_PAF_VIDEO', 'av_opt_get_pixel_fmt',
           'LIBPOSTPROC_VERSION_MAJOR', 'FF_IDCT_FAAN',
           'LIBAVFILTER_VERSION_MICRO', 'INT8_MIN', 'strtoll_l',
           '__W_CONTINUED', 'sws_isSupportedInput',
           'av_log_set_level', 'strfry', 'le16toh', 'nextafterf',
           'AVRounding', 'AVFMT_FLAG_PRIV_OPT', 'CODEC_ID_MPEG2VIDEO',
           'AV_CODEC_ID_PBM', '__mbstate_t', 'CODEC_ID_ADPCM_SWF',
           'PIX_FMT_0BGR', 'AV_CODEC_ID_SMVJPEG', '_IO_cookie_file',
           'AV_FIELD_TT', '_IO_INTERNAL', 'AVFMT_GENERIC_INDEX',
           'PRIuLEAST32', 'AV_CODEC_ID_WEBP', 'EKEYREJECTED',
           'FF_IDCT_XVIDMMX', 'AVCOL_RANGE_NB',
           'program_invocation_name', 'AVPictureStructure',
           '_IO_padn', 'atanhf', 'av_buffer_pool_init',
           'SWS_SRC_V_CHR_DROP_MASK', 'AV_PIX_FMT_NV21',
           'avformat_free_context', 'av_max_alloc',
           'avcodec_encode_audio', 'avfilter_configuration',
           'AVLINK_INIT', 'AV_RESAMPLE_DITHER_TRIANGULAR_NS',
           'av_frame_set_pkt_duration', 'AV_CODEC_ID_ADPCM_4XM',
           'MB_TYPE_L1', 'MB_TYPE_L0', '__fsfilcnt64_t',
           'FF_PROFILE_AAC_SSR', 'FF_PROFILE_MPEG2_SNR_SCALABLE',
           'av_frame_get_metadata', 'PIX_FMT_YUVA420P', 'INT64_C',
           'pthread_cond_t', 'logl', 'AVMEDIA_TYPE_AUDIO', 'EPERM',
           'RcOverride', 'ceill', '__u_int', 'av_dict_count',
           'avcodec_get_frame_defaults', 'av_find_input_format',
           'AVCOL_SPC_RGB', 'int_fast32_t', 'nlink_t', 'atan2',
           'CODEC_ID_SHORTEN', 'AV_PIX_FMT_YUV422P9BE',
           'AVSTREAM_PARSE_TIMESTAMPS', 'CODEC_ID_MDEC',
           'CODEC_ID_V210X', 'AVRational', 'EUNATCH', 'WNOWAIT',
           'AV_SAMPLE_FMT_U8', 'AV_TOSTRING', 'strxfrm',
           'avcodec_get_frame_class', 'AV_PIX_FMT_GBRP12BE',
           'SCNiFAST64', 'cbrtf', 'AVSTREAM_PARSE_HEADERS',
           'realpath', 'AV_PKT_DATA_WEBVTT_SETTINGS',
           'avio_get_str16be', 'ulong', 'AV_CODEC_ID_TRUEHD',
           'CODEC_ID_CLJR', 'EHWPOISON', 'AV_CODEC_ID_AMV', 'av_d2q',
           'INT_FAST8_MAX', '_XLOCALE_H', 'logbf',
           'AV_CPU_FLAG_ARMV6T2', 'FF_SUB_CHARENC_MODE_AUTOMATIC',
           'CODEC_ID_DXTORY', 'AV_PIX_FMT_RGB48LE', '__finitel',
           'AV_CODEC_ID_RAWVIDEO', 'AV_LOG_INFO', 'CODEC_ID_C93',
           'fsblkcnt_t', 'PATH_MAX', 'avcodec_find_best_pix_fmt_of_2',
           'av_add_index_entry', 'WINT_MAX', 'PixelFormat', 'fscanf',
           'AV_CH_BACK_RIGHT', 'AV_GLUE', 'FF_DEBUG_VIS_MB_TYPE',
           'FF_COMPLIANCE_UNOFFICIAL', 'AV_PIX_FMT_YUV422P14BE',
           '__FD_ZERO_STOS', 'AVFMT_TS_NEGATIVE', 'WTERMSIG',
           'obstack_vprintf', 'atol', 'EDEADLOCK',
           'AV_PIX_FMT_BAYER_BGGR16LE', 'AV_CODEC_ID_BINKAUDIO_DCT',
           'AV_PIX_FMT_YUVA444P10BE', 'INT_LEAST32_MIN',
           'AV_CODEC_ID_ADPCM_IMA_DK3',
           'AV_DISPOSITION_VISUAL_IMPAIRED',
           'AV_CODEC_ID_ADPCM_IMA_DK4', 'CODEC_CAP_SMALL_LAST_FRAME',
           'AV_CODEC_ID_MACE3', 'avcodec_default_release_buffer',
           'AV_CODEC_ID_ZMBV', '_POSIX_LINK_MAX', '__finitef',
           'N11__mbstate_t3DOT_6E', 'SCNo16', 'ECONNRESET',
           'AVCHROMA_LOC_CENTER', 'atof', 'mkstemps', 'frexp',
           '_IO_LINE_BUF', 'AV_DISPOSITION_KARAOKE',
           'CODEC_CAP_SLICE_THREADS', 'AV_CODEC_ID_PAF_AUDIO',
           'AV_PIX_FMT_YUV444P16LE', 'intptr_t', 'l64a', 'PRIuPTR',
           '_G_config_h', 'AV_OPT_TYPE_SAMPLE_FMT',
           'AV_CODEC_ID_V210', '_IO_FLAGS2_MMAP', 'M_LN2', 'erand48',
           'AV_PIX_FMT_YUV444P10BE', 'vsscanf', 'PRIdFAST64',
           'AVCOL_PRI_BT709', 'avfilter_graph_add_filter',
           'AV_PIX_FMT_BGR48LE', 'AV_CODEC_ID_PCM_S8',
           'AV_OPT_TYPE_INT64', 'AV_CODEC_ID_RV30',
           'AV_PIX_FMT_YUV420P10BE', '__MATH_DECLARE_LDOUBLE',
           'CHAR_MIN', 'avio_open_dyn_buf', 'CODEC_CAP_LOSSLESS',
           'FF_PROFILE_MPEG4_SIMPLE_SCALABLE', 'INT64_MIN',
           'AV_CODEC_ID_LAGARITH', 'FF_PROFILE_MPEG4_CORE',
           'EXPR_NEST_MAX', 'av_opt_set_image_size',
           'avcodec_decode_video2', 'avfilter_graph_queue_command',
           'be32toh', '_STDLIB_H', 'strtoul', 'PRId8', '__getdelim',
           'comparison_fn_t', 'av_get_bits_per_sample',
           'pthread_mutexattr_t', 'j0', 'j1',
           'AV_CODEC_ID_ADPCM_G726LE', 'AVFilterContext', 'qgcvt',
           '__io_read_fn', 'y0', 'av_bprint_channel_layout',
           'UINT_LEAST32_MAX', 'LIBAVDEVICE_VERSION_MICRO',
           'av_bitstream_filter_next', 'CODEC_ID_ADPCM_EA',
           'AV_PIX_FMT_MONOBLACK', '_POSIX_MQ_OPEN_MAX', 'strcspn',
           '_sys_errlist', 'av_index_search_timestamp',
           'CODEC_ID_RV20', 'uint_fast64_t', 'AV_CH_LAYOUT_5POINT0',
           'AV_CH_LAYOUT_5POINT1', 'avcodec_find_decoder_by_name',
           'lgammal_r', 'ldiv_t', 'vdprintf',
           'AV_CODEC_ID_INTERPLAY_DPCM', 'setenv', '_POSIX_PIPE_BUF',
           'AVFilterBufferRef', 'CODEC_ID_MLP', 'ECHILD',
           'AVFilterGraph', 'AV_PKT_DATA_H263_MB_INFO',
           'AV_CODEC_ID_WMV3IMAGE', '__USE_XOPEN2K',
           'avcodec_enum_to_chroma_pos', 'avcodec_open2',
           'AV_PIX_FMT_YUYV422', 'jn', 'FF_BUG_DIRECT_BLOCKSIZE',
           'AVProfile', 'ME_HEX', 'pp_mode', 'av_dict_free',
           'AV_CH_STEREO_RIGHT', 'AV_CODEC_ID_MUSEPACK8', '__qaddr_t',
           '_IO_LINKED', 'WCONTINUED', 'AV_PIX_FMT_GBRP9BE', 'cbrtl',
           '__USE_POSIX2', 'AV_CODEC_ID_MUSEPACK7', '__blkcnt_t',
           'AV_EF_CRCCHECK', 'PRIX64', 'CODEC_ID_BINTEXT',
           'CODEC_ID_YOP', 'timespec', 'FF_DEBUG_MB_TYPE',
           '__vsnprintf_chk', 'INT16_C', 'AV_PIX_FMT_RGB555LE', 'pow',
           'SWS_CS_SMPTE170M', '__PTHREAD_RWLOCK_INT_FLAGS_SHARED',
           'AVFMT_NOTIMESTAMPS', 'AV_OPT_TYPE_FLOAT',
           'avfilter_inout_free', 'av_dynarray2_add',
           'AVCHROMA_LOC_TOPLEFT', 'CODEC_ID_DSICINAUDIO', 'EBADMSG',
           'blkcnt_t', 'AVClassCategory', 'AV_EF_BITSTREAM', 'ilogbf',
           'SWS_CS_ITU709', 'AV_PIX_FMT_YUVJ411P',
           'AV_BUFFER_FLAG_READONLY', 'av_register_bitstream_filter',
           'CODEC_ID_8BPS', 'av_opt_free', 'MB_TYPE_P1L0',
           'strtoimax', 'AV_PIX_FMT_YUV440P', 'AV_PIX_FMT_YUV420P9BE',
           'AVCodecDefault', 'av_gcd', 'AV_CODEC_ID_VP6F',
           'AV_CODEC_ID_VP6A', '_STDINT_H', 'FF_COMPLIANCE_NORMAL',
           'ftello', '__OFF_T_MATCHES_OFF64_T', 'sws_scaleVec',
           'av_usleep', 'AVCHROMA_LOC_UNSPECIFIED', 'FF_DCT_ALTIVEC',
           'PRIX16', 'CODEC_ID_ADPCM_IMA_SMJPEG',
           '_POSIX_DELAYTIMER_MAX', 'AV_CPU_FLAG_3DNOWEXT',
           'AV_CODEC_ID_SSA', 'FF_QUALITY_SCALE',
           'LIBAVCODEC_VERSION_MICRO', 'AV_CODEC_ID_MXPEG',
           'av_log_get_level', 'CODEC_ID_VIMA', 'AV_CODEC_ID_SANM',
           'AV_CODEC_ID_CLLC', 'AV_PIX_FMT_RGB565LE',
           'AV_CODEC_ID_DSICINVIDEO',
           'AV_PKT_DATA_MATROSKA_BLOCKADDITIONAL', 'SCNxMAX', 'qfcvt',
           'CODEC_ID_THEORA', 'CODEC_ID_ADPCM_IMA_DK4',
           'CODEC_ID_ADPCM_IMA_DK3', 'CODEC_ID_XWD', 'av_url_split',
           'avresample_open', 'SCNxPTR', 'ushort', 'PRIdLEAST32',
           'avio_get_str', 'stdout', 'AV_CLASS_CATEGORY_ENCODER',
           '_STRING_H', '_IO_putc', 'FF_BUG_MS', 'SEEK_HOLE',
           'AV_CODEC_ID_COOK', 'av_memcpy_backptr', 'AVCOL_SPC_YCOCG',
           'av_parse_cpu_flags', 'AV_CH_TOP_BACK_LEFT', 'yn',
           'SCNoLEAST8', 'av_malloc', 'qfcvt_r',
           'AVPROBE_PADDING_SIZE', 'fsblkcnt64_t',
           'AVERROR_DEMUXER_NOT_FOUND', 'AVDurationEstimationMethod',
           'AV_CODEC_ID_ILBC', 'AVBufferPool', 'avio_rb24',
           '_OLD_STDIO_MAGIC', 'CODEC_ID_INDEO4',
           '_POSIX_AIO_LISTIO_MAX', '__snprintf_chk',
           'AV_CODEC_ID_SUBRIP', 'AV_PIX_FMT_BAYER_GBRG8', 'LONG_BIT',
           'avfilter_graph_dump', 'AV_DISPOSITION_DUB',
           'UINT_LEAST16_MAX', 'isnanf', 'av_read_pause', 'calloc',
           'avdevice_register_all', 'AV_PIX_FMT_GRAY8', 'PRIXPTR',
           'AV_CODEC_ID_SGI', 'av_picture_crop', 'CODEC_ID_XAN_WC4',
           'AV_LOG_QUIET', 'CODEC_ID_XAN_WC3', 'AV_CODEC_ID_DXTORY',
           'AV_CH_LAYOUT_4POINT1', 'AV_CH_LAYOUT_4POINT0',
           'INT_FAST32_MAX', 'AV_CODEC_ID_IDF',
           'AV_OPT_FLAG_METADATA', 'SCNuLEAST64',
           'av_bitstream_filter_filter', 'UINT_FAST16_MAX',
           '__int64_t', 'AV_PIX_FMT_YUVA422P16BE', 'fopen64',
           'av_fast_padded_mallocz', 'avio_size',
           'FF_PROFILE_MPEG4_HYBRID', 'av_interleaved_write_frame',
           'AV_CH_LAYOUT_5POINT0_BACK', 'PIX_FMT_YUV420P16BE',
           'PRId32', '__LITTLE_ENDIAN', 'NAN', 'INT16_MIN',
           'AV_CODEC_ID_PCM_F32LE', 'avfilter_ref_buffer',
           'AV_SIDE_DATA_PARAM_CHANGE_DIMENSIONS', 'PRIoLEAST32',
           'CODEC_ID_PRORES', 'CODEC_ID_V410',
           'AVERROR_DECODER_NOT_FOUND', 'av_set_cpu_flags_mask',
           'FF_DEBUG_STARTCODE', 'av_sub_q', 'SCNdLEAST8',
           '_POSIX_RE_DUP_MAX', 'av_opt_set_bin',
           'AVFMT_TS_NONSTRICT', 'AV_PIX_FMT_GRAY16BE',
           '_STRUCT_TIMEVAL', 'AV_CODEC_ID_INDEO3',
           'AV_PIX_FMT_VDPAU_VC1', 'lrintf', 'ptsname', 'pow10l',
           'avio_put_str16le', 'CODEC_ID_WMALOSSLESS', 'P_tmpdir',
           'AVIO_FLAG_NONBLOCK', 'CODEC_ID_ADPCM_IMA_QT',
           'LIBAVRESAMPLE_VERSION_INT', 'AV_SAMPLE_FMT_FLTP',
           'scalbf', 'AV_AUDIO_SERVICE_TYPE_MAIN', 'SHRT_MIN',
           'AV_CODEC_ID_WMAPRO', '_POSIX_FD_SETSIZE',
           'PP_CPU_CAPS_ALTIVEC', '__fpclassifyl',
           'AV_PIX_FMT_RGB444LE', 'AV_CODEC_ID_DNXHD',
           'AV_PIX_FMT_YUVA420P9LE', '_IO_FLAGS2_NOTCANCEL',
           'va_start', 'gnu_dev_minor', 'FF_DEBUG_RC',
           'AV_PIX_FMT_YUV422P', 'CODEC_ID_PCM_U8', 'memmove',
           'SUBTITLE_TEXT', 'FF_PROFILE_MPEG4_ADVANCED_REAL_TIME',
           'av_codec_is_encoder', 'AV_CODEC_ID_ROQ',
           'AV_CODEC_ID_DVVIDEO', '__nlink_t', 'avresample_license',
           'SWS_CPU_CAPS_ALTIVEC', 'TLOSS', 'strcmp', 'SCNoLEAST32',
           'CODEC_ID_G2M', '_POSIX2_BC_BASE_MAX', 'AVDISCARD_DEFAULT',
           '__syscall_ulong_t', 'AV_PIX_FMT_BGR555LE', 'fgetc',
           'gcvt', 'tanhf', 'av_rescale_q', 'AVCodecParserContext',
           'CODEC_ID_PTX', 'PRIdFAST16', 'CODEC_ID_ADPCM_SBPRO_2',
           'CODEC_ID_ADPCM_SBPRO_3', 'CODEC_ID_ADPCM_SBPRO_4',
           'PRIu8', 'fgets', 'AV_CODEC_ID_R210', 'CODEC_ID_AVRP',
           'cookie_io_functions_t', 'SWS_X', 'ELIBBAD',
           'avcodec_fill_audio_frame', 'ERANGE', 'exp2l',
           'FF_PROFILE_VC1_MAIN', 'LIBAVFORMAT_VERSION_INT', 'ftell',
           'AV_CODEC_ID_WMAV1', 'FF_IDCT_IPP', 'AV_CODEC_ID_WMAV2',
           'avfilter_pad_get_name', 'PRIi64', 'CODEC_CAP_HWACCEL',
           'strerror_l', 'log1pl', 'PIX_FMT_BGR444BE',
           'AV_FIELD_PROGRESSIVE', 'AV_CODEC_ID_DXA',
           'AV_CODEC_ID_VC1', 'av_sample_fmt_is_planar',
           '_SVID_SOURCE', 'log1pf', 'tgammaf', 'AV_CODEC_ID_TAK',
           'SWS_BICUBIC', 'getsubopt', 'CODEC_ID_VMNC', 'PRIuLEAST8',
           'avfilter_get_by_name', 'FF_COMPLIANCE_EXPERIMENTAL',
           'AVFMT_FLAG_GENPTS', 'AVERROR', 'strverscmp',
           'avdevice_version', 'AV_CH_FRONT_LEFT', 'CODEC_ID_AVS',
           'CODEC_ID_QCELP', 'avformat_get_class', 'PRIuFAST64',
           'FF_PRED_PLANE', 'AV_PIX_FMT_BGR565LE', 'signgam',
           'FF_PROFILE_H264_HIGH_444_INTRA', 'clearerr_unlocked',
           'EUSERS', 'pp_get_context', 'ENODEV', 'av_read_frame',
           'obstack_printf', '____FILE_defined', 'AV_PIX_FMT_XYZ12BE',
           'AV_CODEC_ID_AVRN', 'AVCOL_SPC_BT470BG', 'CODEC_ID_SSA',
           'AV_CODEC_ID_AVRP', 'isgreater', '_ERRNO_H',
           '__SIZEOF_PTHREAD_MUTEX_T', '_IO_STDIO',
           'av_resample_close', 'OVERFLOW', 'AV_CODEC_ID_PCM_DVD',
           'FF_PROFILE_H264_BASELINE', 'avcodec_align_dimensions',
           'CODEC_ID_VP8', 'putenv', 'CODEC_ID_VP5', 'CODEC_ID_VP6',
           'RAW_PACKET_BUFFER_SIZE', 'ENOSR', 'CODEC_ID_VP3',
           'AV_CODEC_ID_SAMI', 'strtol_l', 'AV_PIX_FMT_ABGR',
           'AV_CODEC_ID_SUBVIEWER1', '__sig_atomic_t',
           'PIX_FMT_RGB565BE', 'AV_PICTURE_TYPE_P',
           'AV_PICTURE_TYPE_S', 'SCNdFAST8', 'av_register_hwaccel',
           'postproc_configuration', 'avcodec_default_execute2',
           '__io_seek_fn', 'UINT64_C', 'PRIx8', 'LIBAVCODEC_IDENT',
           'AV_PICTURE_TYPE_B', 'av_get_alt_sample_fmt',
           'FF_BUG_AUTODETECT', 'AV_PICTURE_TYPE_I',
           'AV_CODEC_ID_JACOSUB', 'PRIoLEAST16', 'ESHUTDOWN',
           '__USE_ISOC11', 'logf', 'AV_CODEC_ID_VIXL',
           'AV_CODEC_ID_PCM_S16LE_PLANAR', 'SCNiFAST32',
           'CODEC_ID_COOK', 'PRIXLEAST64', 'AVERROR_OPTION_NOT_FOUND',
           'fcvt_r', '_IO_vfscanf', 'PRIx16', 'CODEC_ID_PCM_U16LE',
           'AV_MIX_COEFF_TYPE_Q15', 'CODEC_CAP_HWACCEL_VDPAU',
           'int_least16_t', 'SCNx32', 'FD_SET',
           'CODEC_FLAG_UNALIGNED', 'AV_CODEC_ID_MP4ALS', '__isnanl',
           '__STRING', 'AV_PIX_FMT_VDPAU_MPEG4', 'AV_CODEC_ID_4XM',
           'AV_CODEC_ID_GIF', '_IO_seekpos', 'AV_PIX_FMT_VDPAU_MPEG1',
           'AV_PIX_FMT_VDPAU_MPEG2', '__GNUC_PREREQ', 'EBADF',
           'EBADE', 'sws_alloc_context', 'scalblnf',
           'AV_CODEC_ID_FLASHSV2', '__PTHREAD_MUTEX_HAVE_PREV',
           'CODEC_CAP_TRUNCATED', '__PDP_ENDIAN', 'EBADR',
           'avfilter_uninit', 'AV_CODEC_ID_FFVHUFF', 'vfscanf',
           'AV_CH_FRONT_CENTER', 'PIX_FMT_RGBA64LE', 'EXDEV',
           'avio_w8', '__pid_t', 'unsetenv', '__va_arg_pack',
           'avio_open2', 'AV_PIX_FMT_BGR444LE', '_SIGSET_NWORDS',
           'PIX_FMT_GRAY16LE', 'isinf', 'EBADSLT',
           'CODEC_ID_PCM_U16BE', 'CODEC_ID_PCM_S32BE',
           'AVMEDIA_TYPE_UNKNOWN', 'CODEC_ID_QPEG',
           'CODEC_FLAG_TRUNCATED', 'sws_shiftVec',
           'FF_DEFAULT_QUANT_BIAS', 'AV_CODEC_ID_ESCAPE130',
           'av_opt_set_int', 'AV_RESAMPLE_DITHER_TRIANGULAR_HP',
           'INTPTR_MAX', 'avfilter_execute_func',
           'AV_CODEC_ID_DSICINAUDIO', 'av_opt_set_pixel_fmt',
           'AV_CODEC_ID_RA_144', 'CODEC_ID_MP1', 'PRIdLEAST8',
           'FF_CODER_TYPE_RAW', 'CODEC_ID_SMC', 'ETOOMANYREFS',
           '_IO_USER_LOCK', 'AV_CODEC_ID_PNG',
           'sws_isSupportedEndiannessConversion', 'SCNuFAST64',
           'AV_PIX_FMT_YUV422P12LE', 'PIX_FMT_RGBA64BE', 'acosh',
           'acosf', 'L_tmpnam', 'AV_CH_LAYOUT_OCTAGONAL',
           'AVERROR_EOF', 'EOF', 'CODEC_ID_ADPCM_IMA_ISS',
           'avio_rl32', '__WCOREFLAG', 'uint8_t', 'AV_CODEC_ID_AC3',
           '_G_HAVE_MREMAP', 'CODEC_FLAG_AC_PRED',
           'FF_PROFILE_MPEG4_MAIN', 'EINPROGRESS',
           'AV_CH_LAYOUT_6POINT0_FRONT', 'AV_OPT_FLAG_VIDEO_PARAM',
           'AV_CH_LAYOUT_SURROUND', 'CODEC_FLAG2_DROP_FRAME_TIMECODE',
           'AV_PIX_FMT_GBRP14LE', '_G_va_list', 'CODEC_ID_TRUEHD',
           'makedev', 'AVRESAMPLE_MAX_CHANNELS', '__realpath_chk',
           'av_parser_change', 'ENOTSUP', 'AV_LOG_WARNING',
           'AVFMT_FLAG_FLUSH_PACKETS', 'CODEC_ID_ADPCM_G722',
           'avio_rb32', 'INT_FAST16_MIN', 'vscanf',
           'CODEC_ID_ADPCM_G726', 'avpicture_deinterlace',
           'SWS_PRINT_INFO', 'SCNu32', 'CODEC_ID_CLLC',
           'AVFilterChannelLayouts', 'M_LOG10E',
           'av_frame_get_plane_buffer', 'CODEC_ID_KGV1',
           'AV_PIX_FMT_GBRP14BE', '__WSTOPSIG', 'AVERROR_BUG',
           'EL3RST', 'AV_CODEC_ID_DVD_NAV', 'AV_CODEC_ID_SRT',
           'htole32', 'AV_OPT_TYPE_FLAGS', '_POSIX_SOURCE',
           'AV_PIX_FMT_YUV422P16LE', '_IO_jump_t', 'stderr',
           'AV_CODEC_ID_XSUB', 'ENAMETOOLONG',
           'av_int_list_length_for_size', 'fputc_unlocked', 'ldexpl',
           'M_PI_2', 'av_opt_get', '__uint64_t',
           'FF_PROFILE_DTS_HD_MA', 'M_PI_4', 'AV_CODEC_ID_MSVIDEO1',
           'AVFMT_DURATION_FROM_PTS', 'ELOOP', 'FF_DTG_AFD_SAME',
           'AV_CODEC_ID_ADPCM_IMA_ISS', 'av_opt_eval_q', 'PRIXFAST64',
           'AV_PIX_FMT_YUVA444P10LE', 'AVFMT_SHOW_IDS', '_IO_off_t',
           'y1l', 'AV_CODEC_ID_PCM_S32LE_PLANAR',
           'PIX_FMT_VDPAU_H264', 'nanl', 'av_frame_set_qp_table',
           'AV_PERM_READ', 'USHRT_MAX', 'SCNoLEAST64',
           'FF_BUG_QPEL_CHROMA', 'SCNo32', 'AVDISCARD_BIDIR',
           'AV_CODEC_ID_PCM_S24LE_PLANAR', 'abs', 'llroundl',
           'AV_CH_TOP_FRONT_CENTER', '__WEXITSTATUS',
           'LIBAVCODEC_BUILD', 'llroundf', 'av_frame_set_metadata',
           'AV_CH_WIDE_LEFT', 'AVERROR_INVALIDDATA', 'MB_LEN_MAX',
           'CODEC_ID_MPEG2TS', 'AV_CODEC_ID_ADPCM_IMA_EA_EACS',
           'AV_PIX_FMT_GBRP10LE', 'avcodec_is_open',
           'AV_CPU_FLAG_SSSE3', 'AV_CODEC_ID_DVB_SUBTITLE',
           'lgammaf_r', 'avfilter_init_filter', 'stpncpy',
           '_POSIX_THREAD_KEYS_MAX', 'CODEC_ID_BMP', '_IO_SKIPWS',
           'fsid_t', '__WIFEXITED', 'av_get_packed_sample_fmt',
           'AVBitStreamFilterContext', '_IO_SCIENTIFIC',
           'AV_CODEC_ID_DVAUDIO', 'FF_DTG_AFD_4_3', 'av_match_ext',
           'CODEC_ID_BETHSOFTVID', '_IO_ferror', 'PRIuFAST8',
           'AV_CODEC_ID_MAD', 'AV_CODEC_ID_V308', 'PIX_FMT_MONOBLACK',
           'ERFKILL', 'av_freep', '__mode_t',
           'avpriv_frame_get_metadatap', 'FF_DCT_FAAN',
           'AV_CODEC_ID_EVRC', 'FF_LEVEL_UNKNOWN',
           'FF_BUFFER_TYPE_INTERNAL', 'CODEC_ID_TGV',
           'AV_CPU_FLAG_MMX2', 'select', 'CODEC_ID_TGQ',
           'AVFMT_NOFILE', '_BITS_POSIX2_LIM_H',
           'canonicalize_file_name', 'CODEC_CAP_INTRA_ONLY',
           'AV_PIX_FMT_YUVA420P10BE', 'AV_CODEC_ID_MPEG4',
           'avfilter_graph_parse2', 'CODEC_ID_NONE',
           'AV_OPT_TYPE_CONST', 'FF_BUG_NO_PADDING',
           '_POSIX_MAX_INPUT', 'av_frame_get_sample_rate', 'isless',
           'minor', 'exp10', 'AV_CODEC_ID_ATRAC3P', 'log10f',
           'avcodec_get_subtitle_rect_class', 'isunordered',
           '__USE_FORTIFY_LEVEL', 'CODEC_ID_ADPCM_IMA_EA_SEAD',
           'AV_OPT_TYPE_VIDEO_RATE', 'CODEC_ID_QDRAW',
           'fwrite_unlocked', 'AV_PIX_FMT_YUV422P10LE',
           'PIX_FMT_Y400A', 'INT32_MIN', '__fread_chk',
           'pthread_barrierattr_t', 'AV_PIX_FMT_0BGR',
           'av_resample_init', 'fopencookie',
           'avformat_configuration', '__uint16_t',
           'AV_CODEC_ID_TSCC2', 'avfilter_process_command',
           'avfilter_graph_free', 'sws_getDefaultFilter', 'lldiv_t',
           'AV_CODEC_ID_PCM_S16LE', 'SWS_DIRECT_BGR',
           'FF_SUB_CHARENC_MODE_PRE_DECODER', 'roundl',
           'av_opt_set_sample_fmt', 'CODEC_FLAG2_FAST',
           'AV_CODEC_ID_XAN_WC4', 'AVFilterBuffer',
           'AV_CODEC_ID_THEORA', 'AV_CODEC_ID_XAN_WC3',
           'CODEC_ID_FIRST_AUDIO', 'av_format_set_audio_codec',
           'pp_postprocess', 'M_1_PI', 'SWS_SINC',
           'AV_PIX_FMT_RGB555BE', 'AV_PIX_FMT_YUVA422P10BE',
           'av_buffer_make_writable', 'PIPE_BUF', '__PRIPTR_PREFIX',
           'log2l', 'AVResampleDitherMethod',
           'AV_PKT_DATA_PARAM_CHANGE', 'LIBSWSCALE_VERSION_MAJOR',
           'SCNoLEAST16', 'av_frame_set_color_range',
           'AVCodecContext', 'FF_IDCT_SH4', 'M_2_PI',
           'AV_CODEC_ID_VB', 'atanh', 'av_codec_get_tag2', 'atanl',
           'AV_OPT_TYPE_STRING', 'EAFNOSUPPORT', 'avio_close_dyn_buf',
           'putc_unlocked', 'CODEC_FLAG_CLOSED_GOP',
           'AV_CODEC_ID_MOV_TEXT', 'AV_PIX_FMT_NV20BE',
           'AVFilterGraphInternal', 'AV_CPU_FLAG_3DNOW',
           'AV_AUDIO_SERVICE_TYPE_KARAOKE', 'mrand48_r',
           'AV_CODEC_ID_BETHSOFTVID', 'AV_CODEC_ID_PCM_F64LE',
           'AV_PIX_FMT_YUVA444P16LE', 'AVCOL_PRI_BT470BG',
           'avio_wl16', 'INT_FAST16_MAX', '__key_t',
           'AV_CODEC_ID_RPZA', 'AV_CODEC_ID_ADPCM_IMA_WS',
           'av_get_output_timestamp', 'FF_IDCT_SIMPLEARM',
           'AV_PROGRAM_RUNNING', '__rlim64_t', 'AV_SAMPLE_FMT_DBL',
           'fabs', 'AV_STRINGIFY', 'av_packet_new_side_data',
           'AVFMT_NEEDNUMBER', 'AV_NOPTS_VALUE', 'SCNiLEAST64',
           'avresample_set_channel_mapping', '__clock_t',
           'av_probe_input_buffer2', 'AVExtFloat', '__fsfilcnt_t',
           'ENOCSI', 'avcodec_find_best_pix_fmt_of_list', 'coshf',
           'getc', '__STDLIB_MB_LEN_MAX', 'av_frame_get_pkt_pos',
           'coshl', 'LIBAVFORMAT_BUILD', 'basename', 'ffs',
           'AV_CODEC_ID_PCM_U24BE', '__LONG_LONG_PAIR', '__WCOREDUMP',
           'av_resample_compensate', 'AV_PIX_FMT_NV12',
           'strcasecmp_l', 'FF_PRED_MEDIAN', 'ferror_unlocked', 'y1',
           'EAGAIN', '__error_t_defined', 'XATTR_SIZE_MAX',
           'AV_CODEC_ID_ESCAPE124', 'EMSGSIZE', 'floorf', 'ELIBEXEC',
           'sws_scale', 'FF_LAMBDA_MAX', 'AV_PIX_FMT_BAYER_RGGB16LE',
           'AV_OPT_FLAG_SUBTITLE_PARAM', 'LIBAVCODEC_VERSION_INT',
           '_POSIX2_LINE_MAX', 'EIO', 'feof_unlocked',
           'AV_CODEC_ID_DVB_TELETEXT', 'FF_API_R_FRAME_RATE',
           'remquo', '_POSIX_MAX_CANON', 'memchr', 'PIX_FMT_YUV411P',
           '_IO_RIGHT', '_IOS_APPEND', 'av_frame_get_buffer',
           'SWS_GAUSS', 'FF_OPT_TYPE_DOUBLE',
           '_POSIX_THREAD_THREADS_MAX', '__asprintf_chk',
           'INT_FAST32_MIN', 'strcoll', 'CODEC_ID_PCM_MULAW',
           '_G_BUFSIZ', 'ynl', 'AV_DISPOSITION_HEARING_IMPAIRED',
           'finite', 'LIBAVUTIL_VERSION_MAJOR', 'ynf',
           'AV_CODEC_ID_ADPCM_SWF', '__blksize_t', 'NL_LANGMAX',
           'random', 'AVFilterLink', 'av_get_q', 'UINT_FAST8_MAX',
           'EDESTADDRREQ', 'LIBAVFILTER_BUILD', 'getw',
           'pthread_spinlock_t', 'AV_CODEC_ID_TWINVQ', 'FF_CMP_W97',
           'sws_get_class', '_XOPEN_LIM_H',
           'SWS_SRC_V_CHR_DROP_SHIFT', 'CODEC_ID_8SVX_FIB',
           'av_frame_get_channels', 'ENETUNREACH', '_XOPEN_IOV_MAX',
           'AV_CODEC_ID_VC1IMAGE',
           'AVFILTER_FLAG_SUPPORT_TIMELINE_INTERNAL',
           'AV_LOCK_RELEASE', 'EPROTOTYPE', 'AV_CODEC_ID_MP1',
           '_IO_NO_READS', 'AV_CODEC_ID_MP3', 'AV_CODEC_ID_MP2',
           '__GLIBC_MINOR__', 'CODEC_ID_PROBE',
           'av_frame_get_colorspace', 'PRIuLEAST16', 'FF_DEBUG_BUGS',
           'CODEC_ID_MSS1', 'strrchr', 'expm1f', 'av_mul_q',
           'pthread_barrier_t', 'CODEC_ID_MIMIC', 'strchrnul',
           '__pthread_internal_list', 'unlockpt', 'av_filter_next',
           'av_copy_packet_side_data', 'labs',
           'avformat_write_header', 'av_reduce', 'FF_IDCT_SIMPLE',
           'CODEC_ID_NUV', 'qsort_r', 'AV_PIX_FMT_YUVA420P9BE',
           'CODEC_ID_PCM_S8', 'PIX_FMT_ABGR',
           'AV_CH_LAYOUT_7POINT1_WIDE', 'putchar', 'FF_OPT_TYPE_INT',
           'SLICE_FLAG_ALLOW_FIELD', 'CODEC_ID_S302M', 'av_hex_dump',
           'AV_PKT_DATA_STRINGS_METADATA', '__vsprintf_chk',
           'CODEC_ID_MP3ADU', 'AV_CODEC_ID_AAC_LATM', 'major',
           'FF_IDCT_INT', 'PRIdFAST32', 'AV_PIX_FMT_BGR555BE',
           'AVERROR_MUXER_NOT_FOUND', 'FF_OPT_TYPE_STRING',
           '_IO_seekoff', 'setbuf', '__isnanf',
           'FF_PROFILE_MPEG4_ADVANCED_SIMPLE', 'strtoull_l',
           'av_buffer_alloc', '_IO_sgetn', 'snprintf', 'PRIiFAST8',
           'CODEC_ID_TARGA', 'CODEC_ID_UTVIDEO',
           'av_opt_get_image_size', 'UINT_LEAST64_MAX', '__asprintf',
           'isnanl', 'avfilter_graph_get_filter', 'UINT_FAST64_MAX',
           'AV_CODEC_ID_CYUV', 'CODEC_ID_WESTWOOD_SND1', 'memset',
           'AV_PERM_ALIGN', 'CODEC_ID_DPX', 'nearbyintf',
           'AVIO_FLAG_WRITE', 'avio_check', 'AV_CODEC_ID_LOCO',
           'llrint', 'AVCHROMA_LOC_NB', 'FF_MB_DECISION_SIMPLE',
           '_Exit', 'AV_ERROR_MAX_STRING_SIZE', 'CODEC_ID_IDCIN',
           'FF_DCT_INT', 'audio_resample_close', 'CODEC_ID_VCR1',
           'MB_TYPE_ACPRED', 'SWS_CPU_CAPS_MMXEXT',
           'av_get_media_type_string', 'AVFilterCommand',
           '__USE_LARGEFILE', 'SWS_MAX_REDUCE_CUTOFF', '_FEATURES_H',
           'av_get_profile_name', 'CODEC_CAP_EXPERIMENTAL',
           'CODEC_ID_SP5X', 'vsnprintf', 'AV_CODEC_ID_MACE6',
           'AVERROR_STREAM_NOT_FOUND', '_POSIX_SEM_NSEMS_MAX',
           'CODEC_ID_ILBC', 'AVFilterBufferRefVideoProps',
           'av_opt_set_q', 'nearbyintl', 'CODEC_FLAG2_CHUNKS',
           'pselect', 'AVFMT_FLAG_NOPARSE', 'CODEC_ID_TXD',
           'av_get_default_channel_layout', 'avformat_seek_file',
           'AVFMT_FLAG_SORT_DTS', 'SING', 'AV_MIX_COEFF_TYPE_NB',
           'EPFNOSUPPORT', 'sys_nerr', 'EFAULT', 'strtoul_l',
           'PP_CPU_CAPS_AUTO', 'ENOKEY', 'PP_FORMAT_411',
           '__USE_POSIX199309', 'CODEC_ID_RA_288',
           'FF_PROFILE_MPEG2_422', 'av_get_channel_layout',
           'AVCOL_TRC_BT709', '_IO_UNBUFFERED',
           'CODEC_ID_BINKAUDIO_RDFT', '_IO_ftrylockfile',
           'CODEC_ID_YUV4', 'AV_CODEC_ID_8SVX_EXP',
           'avformat_network_deinit', 'FF_PROFILE_H264_MAIN',
           'AV_CODEC_ID_ANSI', 'AV_CODEC_ID_CSCD', 'index',
           'AV_CODEC_ID_MP3ON4', 'AV_PERM_REUSE2', 'av_parser_next',
           'LOGIN_NAME_MAX', 'avfilter_graph_request_oldest',
           '__WIFSTOPPED', 'PRIu32', 'AV_CODEC_ID_ADPCM_THP',
           'fwrite', 'expm1l', 'nan', 'EL2NSYNC', 'exp',
           'CODEC_ID_JPEGLS', 'LIBAVDEVICE_VERSION_MINOR', 'ENOANO',
           'strncasecmp', 'SWS_BICUBLIN', 'PIX_FMT_YUV410P',
           'CODEC_ID_GSM_MS', 'AVProgram', 'PRIxLEAST32', 'UINT8_C',
           'CODEC_ID_XBM', 'mode_t', 'AV_CODEC_ID_ASS',
           'av_register_output_format', 'FF_PROFILE_MPEG2_SS',
           'fputc', 'CODEC_ID_Y41P', '_POSIX_SSIZE_MAX', 'grantpt',
           'AV_CODEC_ID_ADPCM_G726', '__isinff',
           'AV_CODEC_ID_ADPCM_G722', 'ESTRPIPE', 'fputs',
           'av_reallocp', 'FF_DEBUG_BUFFERS', 'strtof_l',
           'avcodec_find_encoder_by_name', 'avio_alloc_context',
           'SUBTITLE_BITMAP', '_IO_TIED_PUT_GET', 'av_rescale_q_rnd',
           'AVCodecInternal', 'CODEC_FLAG_NORMALIZE_AQP', 'EDEADLK',
           'FD_CLR', 'id_t', 'PIX_FMT_GRAY8A', 'tgamma', 'ME_TESA',
           'AV_CODEC_ID_SMACKAUDIO', '__have_pthread_attr_t', 'SCNo8',
           'PIX_FMT_BGR565LE', 'AV_CODEC_ID_RV20', 'avresample_read',
           'rintl', 'FF_BUFFER_TYPE_SHARED', 'AV_CODEC_ID_ULTI',
           'AV_PERM_PRESERVE', 'AV_CODEC_ID_AMR_NB', 'islessequal',
           'FOPEN_MAX', 'PIX_FMT_BGR555LE', 'AV_PTS_WRAP_IGNORE',
           'remove', 'CODEC_ID_ULTI', 'avutil_license', 'PRIxPTR',
           'fd_mask', 'AV_CODEC_ID_FFWAVESYNTH', 'AV_ROUND_DOWN',
           'AV_SUBTITLE_FLAG_FORCED', '__int16_t', 'CODEC_ID_TWINVQ',
           'FF_PROFILE_MPEG4_CORE_SCALABLE',
           'N16pthread_rwlock_t4DOT_23E', 'sinf', 'AV_CH_SIDE_RIGHT',
           'AV_CODEC_ID_ZLIB', 'AV_CODEC_ID_ADPCM_IMA_OKI',
           'quick_exit', 'AVFILTER_THREAD_SLICE', 'fflush',
           'AV_CODEC_ID_FLIC', '__locale_data',
           'AV_MATRIX_ENCODING_NB', 'avio_rl16',
           'CODEC_ID_TRUESPEECH', 'strchr', '_POSIX_TZNAME_MAX',
           'AVFrame', 'memrchr', 'av_get_sample_fmt_string',
           'AVClass', 'av_set_double', 'rand_r',
           'AV_PICTURE_STRUCTURE_TOP_FIELD', 'FF_BUFFER_TYPE_USER',
           'AV_CODEC_ID_SIPR', 'PP_PICT_TYPE_QP2', 'y0f', 'INT64_MAX',
           'FF_PROFILE_MPEG4_N_BIT', 'av_opt_set_dict',
           'av_opt_find2', 'av_get_int', 'CODEC_ID_ADPCM_IMA_EA_EACS',
           'lrintl', 'SCNuFAST8', 'CODEC_ID_PCM_DVD',
           'AV_DICT_IGNORE_SUFFIX', 'AV_PKT_FLAG_CORRUPT',
           'AV_CODEC_ID_RL2', 'sws_allocVec',
           'av_audio_resample_init', 'CODEC_ID_SANM', 'htole16',
           'FF_PROFILE_VC1_ADVANCED', 'PIX_FMT_GBRP12BE', 'SCNu16',
           'FF_DEBUG_PICT_INFO', 'avcodec_string', 'PIX_FMT_GRAY8',
           'uint64_t', 'AV_CODEC_ID_FIRST_AUDIO', 'AV_CODEC_ID_AAC',
           'av_buffer_create', 'CODEC_ID_PCM_BLURAY',
           'avfilter_pad_get_type', 'AVBitStreamFilter', 'y0l',
           'AV_CODEC_ID_ADPCM_EA_XAS', 'AV_PIX_FMT_YUV444P12LE',
           'av_memdup', 'CODEC_ID_MPEG4SYSTEMS', '_IO_flockfile',
           'av_packet_get_side_data', 'acoshf', 'MB_TYPE_SKIP',
           'av_frame_free', 'SwsContext', 'double_t',
           'AV_CODEC_ID_HUFFYUV', 'getdelim', 'CODEC_ID_PGM',
           '_IO_DONT_CLOSE', 'alloca', 'INT_LEAST64_MAX',
           'CODEC_ID_ATRAC3', 'EREMCHG', '_IO_BAD_SEEN',
           'AV_CODEC_ID_RALF', '__BIT_TYPES_DEFINED__',
           'MAX_PROBE_PACKETS', '__u_long', 'AV_CODEC_ID_XBIN',
           '__locale_struct', 'ENOMEM', 'FF_IDCT_SIMPLEARMV5TE',
           '__wcstol_internal', '_BITS_TYPES_H',
           'AV_PIX_FMT_YUV444P10LE', 'M_2_SQRTPI',
           'AV_CODEC_ID_MJPEG', '__exception',
           'AV_DICT_DONT_STRDUP_KEY', 'CODEC_ID_JPEG2000', 'asinl',
           'asinf', 'av_packet_merge_side_data', 'AVFMT_SEEK_TO_PTS',
           '__ino64_t', 'fpos64_t', 'av_frame_set_colorspace', 'tan',
           'CODEC_ID_AAC_LATM', 'PRIi16', 'ULLONG_MAX',
           'av_opt_set_double', 'AV_CODEC_ID_YUV4',
           'avcodec_default_get_format', 'FF_IDCT_SIMPLEMMX',
           'av_set_options_string', 'AV_CODEC_ID_ATRAC3',
           'AV_CH_TOP_BACK_CENTER', 'AV_CODEC_ID_ATRAC1', '__timer_t',
           'SIG_ATOMIC_MIN', 'PRIiFAST32', 'AV_CLASS_CATEGORY_FILTER',
           'av_parser_init', 'SCNxFAST32', 'AV_CODEC_ID_CAVS',
           'PRIo32', 'SCNi64', 'av_packet_unref', '__WTERMSIG',
           'av_frame_get_pkt_size', 'SCNiMAX', 'int_fast16_t',
           'AV_CH_SURROUND_DIRECT_RIGHT', 'SCNd64', 'INT32_C',
           'AV_SIDE_DATA_PARAM_CHANGE_CHANNEL_COUNT',
           'CODEC_FLAG_PASS2', 'CODEC_ID_VMDVIDEO', 'drand48_data',
           'AV_CODEC_ID_AURA2', 'error_t', 'av_buffer_pool_uninit',
           'AVIndexEntry', 'AV_PIX_FMT_RGBA',
           'AV_PIX_FMT_YUV444P14BE', 'AV_CODEC_ID_MP3ADU',
           '__USE_XOPEN2K8XSI', 'scalbl', 'CODEC_ID_CYUV',
           'LIBAVRESAMPLE_VERSION_MICRO', 'PRIiPTR',
           'AV_CODEC_ID_HEVC', 'va_copy', 'scalbn',
           'AV_CODEC_ID_ADPCM_XA', 'PP_FORMAT',
           'AV_PIX_FMT_YUVA420P16BE', 'SEEK_SET', '__io_write_fn',
           '_IOS_OUTPUT', 'getloadavg', 'AV_PIX_FMT_RGB8',
           'sws_getContext', 'AV_PIX_FMT_YUV422P10BE',
           'avfilter_copy_frame_props', 'AV_PIX_FMT_RGB4',
           'AV_PIX_FMT_YUV444P14LE', 'sws_printVec2',
           'AV_CODEC_ID_TTA', 'M_PI', 'CODEC_ID_ADPCM_EA_R1',
           'CODEC_ID_ADPCM_EA_R2', 'CODEC_ID_ADPCM_EA_R3',
           'CODEC_ID_MACE3', 'CODEC_ID_G723_1', 'av_iformat_next',
           'CODEC_ID_MACE6', 'NAME_MAX', 'av_packet_split_side_data',
           'CODEC_FLAG2_SHOW_ALL', 'CODEC_ID_OTF',
           'FF_QSCALE_TYPE_MPEG1', 'EEXIST', 'SCNxLEAST8',
           'AVERROR_FILTER_NOT_FOUND', 'mempcpy',
           'FF_BUFFER_HINTS_PRESERVE',
           'av_samples_alloc_array_and_samples',
           'avcodec_descriptor_get_by_name', 'AV_PERM_NEG_LINESIZES',
           '_IO_LEFT', 'av_hex_dump_log', 'dremf', 'CODEC_ID_AURA2',
           'AV_PIX_FMT_BAYER_GRBG16LE', 'AV_PIX_FMT_YUVA422P10LE',
           'timeval', 'av_get_planar_sample_fmt', 'AV_OPT_TYPE_COLOR',
           'AVIO_FLAG_READ_WRITE', 'EISDIR', 'CODEC_ID_MJPEGB',
           'CODEC_ID_MSRLE', 'AVPacketList', 'CODEC_ID_PCM_S8_PLANAR',
           'CODEC_ID_DVB_TELETEXT', 'cbrt', 'AV_CODEC_ID_ROQ_DPCM',
           'CODEC_ID_ANSI', 'av_frame_get_qp_table', 'CODEC_ID_CSCD',
           'ENOLCK', 'PRIdLEAST16', 'SWS_POINT',
           'av_get_audio_frame_duration', 'LIBPOSTPROC_IDENT',
           'av_frame_set_pkt_size', 'exp10l',
           'AV_SIDE_DATA_PARAM_CHANGE_CHANNEL_LAYOUT',
           '_IO_SHOWPOINT', 'av_pkt_dump_log2', 'CODEC_ID_XSUB',
           'FF_BUG_TRUNCATED', 'exp10f', 'AV_CPU_FLAG_MMX',
           'AV_CODEC_ID_ADPCM_IMA_QT', '__fread_unlocked_chk',
           'CODEC_FLAG_INTERLACED_DCT', 'AVERROR_BSF_NOT_FOUND',
           'uint32_t', '_POSIX2_RE_DUP_MAX', 'AV_CODEC_ID_PCM_F64BE',
           'register_t', 'lrand48_r', 'postproc_license',
           'CODEC_CAP_NEG_LINESIZES', 'CODEC_ID_CMV', 'strstr',
           'renameat', '__fgets_unlocked_chk', '_POSIX_TIMER_MAX',
           'mblen', 'pp_free_mode', 'CODEC_ID_MOTIONPIXELS',
           'AVCHROMA_LOC_BOTTOMLEFT', '_IO_vfprintf',
           'avcodec_get_name', 'remquol', 'AVCOL_TRC_NB', 'tmpfile',
           'AVFMTCTX_NOHEADER', 'fd_set', 'PIX_FMT_GBRP',
           'CODEC_CAP_DR1', 'AV_CODEC_ID_COMFORT_NOISE', 'remquof',
           'AVCodecParser', 'AV_HAVE_INCOMPATIBLE_LIBAV_ABI',
           'av_free', 'CODEC_ID_SAMI', 'av_dynarray_add',
           'CODEC_ID_DVVIDEO', 'AV_CODEC_ID_RV10',
           'av_opt_child_next', 'CODEC_ID_MXPEG',
           'av_force_cpu_flags', 'CODEC_ID_ROQ_DPCM',
           'av_fast_realloc', 'AVFMT_TS_DISCONT',
           'AVCOL_TRC_SMPTE240M', 'AV_PTS_WRAP_ADD_OFFSET', 'scalb',
           'significand', 'av_frame_make_writable',
           'av_get_sample_fmt_name', 'int_least8_t', 'av_set_string3',
           '_LIB_VERSION_TYPE', 'AV_VERSION_INT',
           'AV_DICT_DONT_STRDUP_VAL', 'AV_CODEC_ID_QDMC',
           'av_codec_get_lowres', '__signbitl', 'fmemopen', 'FFMAX3',
           'av_probe_input_format3', 'AVERROR_ENCODER_NOT_FOUND',
           'AV_CODEC_ID_APE', 'AV_CODEC_ID_QDM2', 'isgreaterequal',
           'ENOBUFS', 'AVFMT_FLAG_IGNDTS', '_BITS_POSIX1_LIM_H',
           'FP_SUBNORMAL', 'AV_OPT_TYPE_DURATION',
           'AV_CODEC_ID_QTRLE', 'PIX_FMT_YUV444P16LE',
           'avio_seek_time', 'FF_BUG_XVID_ILACE', 'AV_CODEC_ID_MDEC',
           'avformat_get_riff_audio_tags', 'AV_PIX_FMT_RGB565BE',
           'HUGE_VALF', 'avio_wl32', 'AV_PIX_FMT_GBRP', 'putw',
           '_IO_peekc', 'FF_IDCT_ARM', 'avresample_get_delay',
           '__USE_BSD', 'SCNoFAST64', 'FF_EC_DEBLOCK', '__CONCAT',
           'LIBPOSTPROC_BUILD', 'FFMIN3', 'fmin', 'AV_PIX_FMT_GRAY8A',
           'SCNoMAX', '_IOS_NOREPLACE', 'tanhl',
           'AV_CODEC_ID_SMACKVIDEO', '_IO_USER_BUF', 'avfilter_next',
           'AV_CODEC_ID_UTVIDEO', 'AV_CPU_FLAG_AVX', 'MB_TYPE_P1L1',
           'SEEK_CUR', '_POSIX_CHILD_MAX', 'EOPNOTSUPP',
           'AV_PKT_DATA_WEBVTT_IDENTIFIER', 'sqrtl',
           'av_frame_get_color_range', 'lldiv', 'avresample_free',
           'FF_PROFILE_H264_HIGH_444', 'CODEC_ID_GSM',
           'CODEC_ID_RPZA', 'PRIxLEAST8', 'memccpy',
           'FF_PROFILE_VC1_COMPLEX', 'errno', 'AV_PIX_FMT_Y400A',
           'CODEC_ID_ADPCM_ADX', 'AV_CH_LOW_FREQUENCY',
           'AV_PIX_FMT_GBRAP', 'PIX_FMT_BGR48BE', 'ReSampleContext',
           'daddr_t', 'AV_CODEC_ID_METASOUND',
           'AV_DISPOSITION_COMMENT', 'ME_ZERO',
           'FF_PROFILE_MPEG4_BASIC_ANIMATED_TEXTURE', 'nrand48_r',
           'AVIO_FLAG_READ', 'vprintf', 'av_oformat_next',
           'CODEC_ID_MUSEPACK8', 'CODEC_ID_MUSEPACK7',
           'AVFMT_FLAG_KEEP_SIDE_DATA', 'int8_t',
           'avfilter_get_audio_buffer_ref_from_arrays_channels',
           'avsubtitle_free', 'CODEC_ID_IMC', 'atoi',
           'AV_PIX_FMT_YUVA422P16LE', 'AV_CODEC_ID_SONIC',
           'CODEC_ID_LAGARITH', 'AV_CODEC_ID_PJS',
           'AV_AUDIO_SERVICE_TYPE_VISUALLY_IMPAIRED', 'lrint',
           'AV_LOCK_OBTAIN', 'ESPIPE', 'AVSEEK_FLAG_FRAME',
           'avcodec_register', 'CODEC_ID_MPEG2VIDEO_XVMC',
           'PP_QUALITY_MAX', 'fdim', 'avcodec_align_dimensions2',
           'UINT_LEAST8_MAX', 'strtoumax', 'AVSTREAM_PARSE_FULL_RAW',
           'CODEC_ID_SOL_DPCM', 'imaxdiv', 'avformat_query_codec',
           'avcodec_get_context_defaults3', 'ungetc',
           'FF_ARRAY_ELEMS', 'AV_EF_AGGRESSIVE', 'AVColorRange',
           'ffsl', 'AVCOL_SPC_UNSPECIFIED',
           'AVFILTER_FLAG_DYNAMIC_INPUTS', '_STDIO_H',
           'cookie_close_function_t', 'postproc_version',
           'avfilter_graph_parse_ptr', 'COLL_WEIGHTS_MAX', 'PRIXMAX',
           'sws_subVec', '_POSIX_QLIMIT', 'FF_PROFILE_AAC_LTP',
           'AV_VERSION_DOT', 'ELIBACC', 'CODEC_ID_PPM',
           'av_fast_malloc', 'LIBAVUTIL_IDENT',
           'AV_LOG_SKIP_REPEATED', 'AV_RESAMPLE_DITHER_NONE',
           'PIX_FMT_BGR444LE', 'avresample_set_compensation',
           'AV_CODEC_ID_V408', 'AV_CODEC_ID_INDEO2',
           'CODEC_ID_VC1IMAGE', 'AVSEEK_FLAG_BYTE', 'fmodf',
           'AV_CODEC_ID_INDEO4', 'AV_CODEC_ID_INDEO5',
           'FF_OPT_TYPE_FLAGS', 'av_opt_get_int', 'fmodl',
           'AVOptionType', 'ENAVAIL', 'AVDiscard', '__fsblkcnt64_t',
           'av_get_cpu_flags', 'PIX_FMT_RGB4_BYTE',
           '__va_arg_pack_len', 'ENOMSG', 'AV_CODEC_ID_YOP', 'exp2f',
           'avformat_find_stream_info', 'CODEC_FLAG_MV0',
           'avformat_license', 'CODEC_ID_LJPEG', 'PIX_FMT_VAAPI_VLD',
           '__socklen_t', 'avfilter_graph_set_auto_convert',
           'INT_MIN', 'EOVERFLOW', 'FF_EC_GUESS_MVS',
           'AV_PIX_FMT_VAAPI_MOCO', '__codecvt_noconv',
           'FF_DEBUG_SKIP', 'AVFMT_DURATION_FROM_BITRATE', 'ENOENT',
           'AV_OPT_FLAG_ENCODING_PARAM', 'avfilter_open',
           '_ATFILE_SOURCE', 'av_samples_get_buffer_size',
           'PRIxLEAST16', '__pthread_mutex_s', '__glibc_unlikely',
           'avcodec_find_best_pix_fmt2', 'LONG_MIN',
           'PIX_FMT_GBRP9BE', 'SCNdPTR', 'PIX_FMT_YUV422P14BE',
           'av_get_packet', '_POSIX_OPEN_MAX', 'ldexpf',
           'LIBAVDEVICE_BUILD', 'log2f', 'fpos_t',
           'AV_CPU_FLAG_ARMV6', 'ME_ITER', 'CODEC_ID_ANM',
           'av_reverse', 'av_opt_get_sample_fmt', 'AV_SAMPLE_FMT_U8P',
           '__issignalingl', 'llrintf', 'SCNoFAST8',
           'AV_CH_FRONT_LEFT_OF_CENTER',
           '__SIZEOF_PTHREAD_CONDATTR_T', 'AV_RESAMPLE_DITHER_NB',
           'getline', 'FF_DCT_FASTINT', 'AV_PIX_FMT_YUVA444P9BE',
           'AVSubtitle', 'AV_CODEC_ID_TRUEMOTION2', 'scalbnf',
           'AV_CODEC_ID_TRUEMOTION1', 'AV_CODEC_ID_WMV3',
           'AV_CODEC_ID_WMV2', 'AV_CODEC_ID_WMV1', 'AVFilter',
           'scalbnl', 'erand48_r', 'av_read_play', 'MB_TYPE_16x8',
           'CODEC_ID_THP', 'CODEC_ID_VIXL', 'AV_CODEC_ID_XWD',
           'AV_PIX_FMT_UYYVYY411', 'PRIoFAST64', 'AV_CODEC_ID_VORBIS',
           '__ASMNAME', 'ME_FULL', 'pp_help', 'AV_ROUND_NEAR_INF',
           'mbstowcs', 'EREMOTEIO', 'AV_CODEC_ID_ADPCM_MS',
           'AV_OPT_SEARCH_CHILDREN', 'CODEC_ID_H264', 'CODEC_ID_H261',
           'CODEC_ID_H263', 'AVSTREAM_PARSE_FULL',
           'AV_CODEC_ID_JPEGLS', 'ferror', 'INT_FAST64_MIN', 'ENOSPC',
           '_ALLOCA_H', '__errno_location', 'AV_CODEC_ID_SHORTEN',
           'AV_CODEC_ID_PCX', 'strcasestr', 'AV_CODEC_ID_PCM_BLURAY',
           'AV_CH_LAYOUT_NATIVE', '__ctype_get_mb_cur_max',
           'UINTMAX_C', 'AV_CH_TOP_FRONT_RIGHT', 'AV_PIX_FMT_BGR24',
           'LONG_LONG_MIN', 'avcodec_flush_buffers', 'mktemp',
           'FF_IDCT_SIMPLEALPHA', 'CODEC_ID_ADPCM_IMA_WAV',
           'AV_CODEC_ID_PCM_S24LE', 'SCNiLEAST16', 'AV_CODEC_ID_MTS2',
           'EUCLEAN', 'CODEC_ID_LOCO', 'NGROUPS_MAX',
           'CODEC_FLAG2_LOCAL_HEADER', 'av_buffer_pool_get',
           '_G_fpos_t', 'avfilter_unref_buffer',
           'AV_CODEC_ID_ADPCM_CT', 'CODEC_ID_ESCAPE130',
           'sws_convVec', 'fabsf', 'AV_OPT_TYPE_RATIONAL',
           '__lldiv_t_defined', 'strtok_r',
           '__SIZEOF_PTHREAD_BARRIER_T', 'avio_wl24', 'sinl',
           'AV_CODEC_ID_V210X', 'sinh', 'av_codec_is_decoder',
           '_IOS_BIN', 'acoshl', 'CODEC_ID_VC1', 'av_intfloat32',
           'AVColorSpace', 'ME_EPZS', '__printf_chk',
           'PIX_FMT_BGR555BE', 'CODEC_ID_CAVS', 'AV_EF_EXPLODE',
           'AV_PIX_FMT_YUVA444P_LIBAV', '__PMT', 'uint_fast8_t',
           'PIX_FMT_GBRP14BE', 'BC_STRING_MAX', 'EPIPE', 'INT8_MAX',
           'avfilter_init_str', 'hypotf', 'AV_CODEC_ID_ADPCM_IMA_WAV',
           'EINTR', 'EBFONT', 'AVMixCoeffType',
           'avfilter_copy_buf_props', 'AV_PIX_FMT_YUV422P14LE',
           'AV_PIX_FMT_YUVA444P', 'av_opt_child_class_next',
           'AV_CPU_FLAG_XOP', 'AVFilterFormats', 'av_init_packet',
           'av_frame_set_channels', 'avpicture_fill', 'EADDRINUSE',
           'av_frame_is_writable', 'AVIO_SEEKABLE_NORMAL',
           '__WNOTHREAD', 'avcodec_default_reget_buffer',
           'AVFrameSideDataType', 'fdimf', 'AV_PIX_FMT_GBRP12LE',
           'AV_PICTURE_STRUCTURE_UNKNOWN', 'fsfilcnt64_t', 'fdiml',
           'FF_DEBUG_BITSTREAM', 'AV_CODEC_ID_ADPCM_EA_MAXIS_XA',
           'AV_PIX_FMT_GRAY16LE', 'AV_OPT_TYPE_CHANNEL_LAYOUT',
           'FF_PROFILE_AAC_HE_V2', 'INTPTR_MIN', 'AVIOInterruptCB',
           'av_opt_eval_int', 'PRIoPTR', 'AV_CODEC_ID_PCM_MULAW',
           'wcstoimax', 'int_least64_t', 'AV_CODEC_ID_SUNRAST',
           'CODEC_ID_PCM_S16BE', 'nexttowardf',
           'LIBAVDEVICE_VERSION_MAJOR', 'FF_IDCT_ALTIVEC',
           'CODEC_FLAG_INTERLACED_ME', 'nexttowardl',
           'LIBPOSTPROC_VERSION_MINOR', 'CODEC_ID_JV', 'llrintl',
           'PIX_FMT_GBRP14LE', 'CODEC_CAP_SUBFRAMES', 'BIG_ENDIAN',
           'MB_TYPE_8x16', '__USE_XOPEN_EXTENDED', 'AVFilterInternal',
           'PP_FORMAT_444', 'INT_LEAST32_MAX',
           'av_get_codec_tag_string', 'AV_PERM_REUSE', 'ECOMM',
           'mkostemps', 'AV_CODEC_ID_PCM_LXF', 'PIX_FMT_GBRP10LE',
           'AV_CODEC_ID_PCM_S32LE', 'sws_getGaussianVec',
           'avfilter_inout_alloc', 'PRIiLEAST64', 'PIX_FMT_YUVA444P',
           'FD_ZERO', 'av_probe_input_format', '__WCLONE', '__loff_t',
           'ENOTEMPTY', 'CODEC_ID_RV10', '_POSIX_SEM_VALUE_MAX',
           'UINTMAX_MAX', 'UNDERFLOW', 'AV_CH_LOW_FREQUENCY_2',
           'fprintf', 'CODEC_ID_PAM', 'CODEC_ID_PCM_S16LE',
           'AV_CLASS_CATEGORY_NA', 'AV_CLASS_CATEGORY_NB',
           'AV_CODEC_ID_PCM_S24LE_PLANAR_DEPRECATED',
           '_POSIX_SYMLINK_MAX', 'HUGE', 'FF_THREAD_FRAME',
           '__WIFCONTINUED', '__wcstombs_chk', 'av_mallocz',
           'EBADRQC', 'av_printf_format', 'AV_PIX_FMT_GBRP10BE',
           'CODEC_ID_ADPCM_4XM', 'avio_wl64', 'AV_CPU_FLAG_SSE4',
           'AV_CPU_FLAG_SSE3', 'CODEC_ID_VMDAUDIO', 'vfprintf',
           'on_exit', 'sin', 'CODEC_CAP_PARAM_CHANGE',
           'INT_FAST8_MIN', 'WEXITED', 'AV_CODEC_ID_VP8',
           'AV_CODEC_ID_VP9', 'AV_CODEC_ID_VP6', 'fgetc_unlocked',
           'AV_CODEC_ID_VP5', 'CODEC_ID_EXR', 'AV_CODEC_ID_VP3',
           'WINT_MIN', 'gammaf', '__USE_ISOC95', 'FF_FDEBUG_TS',
           'av_strdup', 'gammal', 'tgammal', 'CODEC_ID_AMR_NB',
           'SCNdLEAST64', 'CODEC_ID_VORBIS', 'EMEDIUMTYPE',
           'PRIdFAST8', '_IO_fpos_t', 'PRIi32', 'AV_CODEC_ID_PTX',
           'FF_COMPLIANCE_VERY_STRICT', 'rawmemchr', 'srand48_r',
           'CODEC_CAP_DRAW_HORIZ_BAND', '__u_short',
           '_IO_peekc_locked', 'avformat_network_init',
           'AV_RESAMPLE_FILTER_TYPE_BLACKMAN_NUTTALL', 'fcvt',
           'FF_MAX_B_FRAMES', 'av_realloc_f', 'AV_PIX_FMT_VDPAU_WMV3',
           'AV_PIX_FMT_VDPAU', 'av_dup_packet', 'le32toh',
           'av_log2_16bit', 'avio_write', 'SCNxLEAST32',
           'av_codec_set_lowres', 'ETIME',
           'AV_CH_SURROUND_DIRECT_LEFT', 'PIX_FMT_YUV444P12BE',
           'AV_CH_SIDE_LEFT', 'jnf', 'AVOption', 'CODEC_ID_RV40',
           '__USE_XOPEN', 'AV_CODEC_ID_TIFF', 'AV_CODEC_ID_ADPCM_DTK',
           'AV_CODEC_ID_WEBP_DEPRECATED', 'AV_EF_CAREFUL',
           'AV_DISPOSITION_DEFAULT', '__wcstoul_internal', 'strtod_l',
           'SWS_ERROR_DIFFUSION', 'FF_PROFILE_MPEG2_SIMPLE',
           '__syscall_slong_t', 'PARSER_FLAG_COMPLETE_FRAMES',
           'CODEC_ID_MP4ALS', 'AVFILTER_ALIGN', 'CODEC_ID_SONIC_LS',
           'AV_CPU_FLAG_SSE2', 'strtoll', 'AV_CODEC_ID_BMP',
           'uint_least64_t', 'CODEC_ID_FRAPS', 'INT16_MAX',
           'AV_CODEC_ID_KMVC', 'FP_NAN', 'LITTLE_ENDIAN',
           'AV_LOG_ERROR', 'AV_PIX_FMT_YUV444P16BE', '__USE_ATFILE',
           'av_opt_flag_is_set', 'TMP_MAX', 'AV_PIX_FMT_YUV444P9BE',
           'srandom', 'PIX_FMT_YUV422P9LE', 'swscale_license',
           'PP_FORMAT_420', 'PP_FORMAT_422', 'AV_CPU_FLAG_CMOV',
           'PIX_FMT_YUYV422', '__int32_t', 'PRIo16', 'modf', 'EIDRM',
           'SCNxFAST16', 'FF_DEBUG_MMCO', '_IO_NO_WRITES',
           'PRIiFAST16', 'av_intfloat64', 'LIBPOSTPROC_VERSION_INT',
           'random_data', '_IO_funlockfile', 'SWS_CPU_CAPS_3DNOW',
           'CODEC_ID_SIPR', 'CODEC_ID_MPEG4', '__FILE_defined',
           'SWS_CS_ITU624', 'AVCOL_RANGE_MPEG', 'av_get_double',
           'AV_PIX_FMT_BAYER_GRBG16BE', 'avcodec_default_get_buffer2',
           'int_fast64_t', 'ENOMEDIUM', 'vasprintf',
           'AVCOL_PRI_UNSPECIFIED', '_IO_CURRENTLY_PUTTING',
           'CODEC_ID_PCM_U24BE', 'AV_TIME_BASE',
           '_IO_free_backup_area', 'PP_CPU_CAPS_MMX',
           'CODEC_FLAG_QSCALE', 'FF_BUFFER_TYPE_COPY',
           'aligned_alloc', 'AV_PICTURE_TYPE_NONE', '__BYTE_ORDER',
           'atan2l', 'av_default_item_name', 'atan2f',
           'CODEC_FLAG_PASS1', 'AVPROBE_SCORE_MAX', 'SCNuLEAST8',
           '__signbit', 'AV_PIX_FMT_VDPAU_H264',
           'FF_PROFILE_MPEG4_ADVANCED_CORE',
           'av_buffer_get_ref_count', 'CODEC_ID_G729',
           'FF_PROFILE_H264_EXTENDED', 'PRIxLEAST64', 'AVPictureType',
           'UINT32_MAX', 'PIX_FMT_YUV420P9LE', '__gnuc_va_list',
           'CODEC_ID_FLASHSV2', 'log', 'fseeko', 'u_char',
           'CODEC_ID_SMACKVIDEO', 'key_t', 'CODEC_ID_FLIC',
           'random_r', 'av_buffer_default_free', 'fdopen',
           'AV_CODEC_ID_SPEEX', 'AV_CPU_FLAG_ARMV5TE',
           '_G_IO_IO_FILE_VERSION', 'CODEC_FLAG_GLOBAL_HEADER',
           'avcodec_get_edge_width', '_POSIX_C_SOURCE',
           'av_opt_set_video_rate', 'AV_PKT_DATA_PALETTE',
           'EMULTIHOP', 'CODEC_ID_ESCAPE124', 'CODEC_ID_MSA1',
           '_IO_ssize_t', 'AV_HAVE_FAST_UNALIGNED',
           'AV_CODEC_ID_8BPS', 'mbtowc', '__caddr_t',
           '_POSIX2_CHARCLASS_NAME_MAX', '__USE_SVID',
           'avfilter_get_class', 'av_get_pcm_codec',
           'AV_CODEC_ID_MSZH', 'AV_CH_LAYOUT_7POINT0_FRONT',
           'LIBAVRESAMPLE_VERSION_MINOR', 'AV_CH_LAYOUT_7POINT0',
           '_IO_OCT', 'AV_CODEC_ID_MOTIONPIXELS', 'av_opt_eval_int64',
           'getpt', '_IO_IS_APPENDING', 'AV_SAMPLE_FMT_NB',
           'copysignf', 'AVLINK_UNINIT', 'FF_DEBUG_THREADS',
           'CODEC_ID_PCM_F32LE', 'copysignl', 'M_LOG2E',
           'avfilter_link_get_channels', 'system',
           'av_fmt_ctx_get_duration_estimation_method',
           '__bswap_constant_32', '__daddr_t', '__USE_ISOC99',
           'ECONNABORTED', 'free', 'L_ctermid', 'FF_BUG_UMP4',
           'PRIoFAST8', 'mkstemp64',
           'av_frame_get_decode_error_flags', 'PRIXLEAST8',
           'AV_CODEC_ID_SP5X', 'SCNiFAST8', 'AV_CODEC_ID_PCM_ALAW',
           'bcopy', 'AV_CODEC_ID_AVS', '__SIZEOF_PTHREAD_RWLOCK_T',
           'av_rescale_rnd', 'av_opt_set_channel_layout', 'strcat',
           'AVFMT_DURATION_FROM_STREAM', '__obstack_printf_chk',
           'AVFILTER_FLAG_DYNAMIC_OUTPUTS', 'av_strerror',
           'avpicture_free', 'avresample_get_class', 'CODEC_ID_RALF',
           'HOST_NAME_MAX', 'FF_PROFILE_MPEG2_HIGH',
           'AV_CODEC_ID_SMC', 'log10', '__USE_EXTERN_INLINES',
           '__SIZEOF_PTHREAD_COND_T', 'PTRDIFF_MIN',
           'AV_CODEC_ID_SMV', 'AVCodecDescriptor',
           'FF_COMPLIANCE_STRICT', 'SEEK_DATA', 'FF_BUG_DC_CLIP',
           '__REDIRECT_NTH_LDBL', 'AV_CODEC_ID_WMAVOICE',
           'AV_CPU_FLAG_ALTIVEC', 'avcodec_descriptor_get',
           'NL_ARGMAX', 'AVFilterInOut', 'av_samples_copy',
           'uintptr_t', 'avio_close', 'av_dict_get', 'FP_ZERO',
           'av_get_exact_bits_per_sample', 'FF_PROFILE_H264_HIGH_422',
           'PIX_FMT_YUV420P', 'CODEC_ID_MSMPEG4V2',
           'AV_CODEC_ID_PCM_F32BE', 'av_dict_set',
           'CODEC_ID_MSMPEG4V1', 'CODEC_ID_H263I',
           '_XOPEN_SOURCE_EXTENDED', 'ptrdiff_t', 'CODEC_ID_H263P',
           'CODEC_ID_ADPCM_MS', 'AV_MATRIX_ENCODING_NONE',
           'CODEC_ID_IAC', 'av_codec_set_seek_preroll',
           'AV_CODEC_PROP_BITMAP_SUB', 'AV_PIX_FMT_YUV444P',
           'AV_CPU_FLAG_MMXEXT', 'ssize_t', 'AVFMT_FLAG_MP4A_LATM',
           'AV_CODEC_ID_MIMIC', 'EKEYREVOKED',
           'av_default_get_category', 'avformat_version',
           'AV_ROUND_INF', '__fdelt_chk', 'AV_CODEC_ID_Y41P',
           'AV_PIX_FMT_YUV422P12BE', 'dprintf', 'SCNdFAST32',
           'AVCOL_SPC_YCGCO', 'LIBSWSCALE_BUILD',
           'AV_OPT_TYPE_DOUBLE', 'av_format_get_probe_score',
           '__quad_t', 'av_samples_alloc', '_BSD_SOURCE',
           'avio_closep', '__obstack_vprintf_chk', '__uid_t',
           'MATH_ERRNO', 'av_seek_frame', '_SVID_', 'fgetpos',
           'LIBAVFILTER_VERSION_MINOR', 'AV_PIX_FMT_VAAPI_IDCT',
           'AV_PIX_FMT_BAYER_RGGB8', 'FF_CMP_PSNR', 'AVInputFormat',
           'EPROTONOSUPPORT', 'AV_DISPOSITION_CLEAN_EFFECTS',
           'av_opt_get_video_rate', 'AVSubtitleRect',
           'avfilter_register', 'SCNdLEAST16', '__USE_LARGEFILE64',
           'realloc', 'AV_PIX_FMT_RGB24', 'strtol',
           'CODEC_ID_ADPCM_XA', 'av_compare_mod',
           'LIBAVUTIL_VERSION_MICRO', 'AV_CODEC_ID_DPX', 'htobe64',
           'CODEC_ID_BFI', 'LIBAVFORMAT_VERSION_MINOR', 'strtod',
           'AV_PIX_FMT_YUVA420P10LE', 'avfilter_graph_config',
           'ME_UMH', 'PRId16', 'SWS_SPLINE', 'PIX_FMT_RGB8',
           'AV_CPU_FLAG_SSE2SLOW', 'FF_QSCALE_TYPE_H264',
           'CODEC_ID_DFA', 'PIX_FMT_RGB4', 'PIX_FMT_YUV422P16BE',
           'PIX_FMT_RGB0', 'SwsFilter', 'avfilter_free',
           'CODEC_ID_DTS', 'AV_PIX_FMT_YUVJ440P', 'FF_OPT_TYPE_INT64',
           'SCNd16', 'EROFS', 'int_fast8_t', 'WIFCONTINUED',
           'PIX_FMT_RGBA', 'NZERO', 'mkstemp', 'bcmp',
           'AVPROBE_SCORE_EXTENSION', 'strxfrm_l', 'erfcl',
           'CODEC_ID_MP3', 'swscale_version', 'memcpy',
           'FF_OPT_TYPE_RATIONAL', 'av_dict_parse_string',
           'av_packet_ref', 'AV_CODEC_ID_CINEPAK', 'pp_context',
           '_IO_DELETE_DONT_CLOSE',
           'AV_AUDIO_SERVICE_TYPE_HEARING_IMPAIRED', 'MB_TYPE_QUANT',
           'INTMAX_MAX', 'MQ_PRIO_MAX', 'AVResampleContext',
           'FF_PROFILE_AAC_MAIN', 'AV_CODEC_ID_ADPCM_IMA_APC',
           'PRIu64', 'AV_CODEC_ID_FIRST_SUBTITLE', '_INTTYPES_H',
           '__fgets_chk', 'EKEYEXPIRED', 'av_lockmgr_register',
           'AV_CODEC_ID_TGV', 'AV_CODEC_ID_TGQ', '__bos',
           'avfilter_get_video_buffer_ref_from_arrays', 'nextafterl',
           '__ssize_t', 'AVAudioResampleContext', 'gid_t',
           'AV_CODEC_ID_MPEG4SYSTEMS', 'abort', 'CODEC_ID_SPEEX',
           'av_buffer_ref', 'lcong48_r', 'int16_t',
           'PIX_FMT_YUV422P16LE', 'avcodec_find_decoder', 'stpcpy',
           'sws_convertPalette8ToPacked32', 'AV_CODEC_ID_G723_1',
           '__warnattr', 'AV_PERM_WRITE', '__sigset_t', 'isnan',
           'CODEC_CAP_DELAY', '__overflow', 'av_pkt_dump2',
           '_POSIX2_BC_DIM_MAX', 'PIX_FMT_YUV422P12LE',
           'av_int_list_length', 'AV_CH_TOP_BACK_RIGHT',
           'av_channel_layout_extract_channel',
           'AV_CODEC_ID_BRENDER_PIX', 'AV_PIX_FMT_XYZ12LE',
           'PRIiFAST64', 'jnl', 'strtold_l', 'scalbln',
           'FF_PROFILE_H264_HIGH_422_INTRA',
           'AV_CLASS_CATEGORY_DECODER', 'AV_PIX_FMT_YUVA444P9LE',
           'ilogbl', 'MB_TYPE_8x8', 'PP_CPU_CAPS_3DNOW', 'SCNxFAST8',
           '_BITS_PTHREADTYPES_H', 'AV_PIX_FMT_BAYER_GBRG16LE',
           'PRIo8', 'AV_CODEC_ID_PCM_ZORK', 'ETIMEDOUT', 'atanhl',
           'sws_normalizeVec', 'log1p', 'FF_LOSS_ALPHA', 'PRIuFAST32',
           'av_buffer_allocz', 'PIX_FMT_YUV444P',
           'AV_FRAME_DATA_PANSCAN', '_IO_size_t', 'UINTPTR_MAX',
           'caddr_t', 'EALREADY', 'uint16_t',
           'pp_get_mode_by_name_and_quality',
           'CODEC_ID_ADPCM_IMA_APC', 'ENXIO', 'ECONNREFUSED',
           'AV_CODEC_ID_CDGRAPHICS', 'AV_CODEC_ID_PCM_U32BE',
           'AV_CH_LAYOUT_7POINT1', 'AV_CODEC_ID_RA_288',
           'CODEC_ID_DSICINVIDEO', 'tmpfile64',
           'av_opt_set_from_string', 'CODEC_FLAG_GMC', '__USE_MISC',
           '__intptr_t', 'SCNiLEAST8',
           'FF_PROFILE_MPEG4_ADVANCED_SCALABLE_TEXTURE',
           'SCNiLEAST32', 'av_picture_pad', 'CODEC_ID_HUFFYUV',
           'AVFilterPool', 'obstack', 'WIFEXITED',
           'av_probe_input_format2', 'PIX_FMT_RGB48BE', 'va_arg',
           'FP_ILOGBNAN', 'AV_PIX_FMT_YUV444P9LE', '_IO_2_1_stderr_',
           'AV_SAMPLE_FMT_NONE', 'AV_CODEC_ID_NUV',
           'PIX_FMT_BGR565BE', 'ELIBSCN', 'LIBAVUTIL_BUILD',
           'PIX_FMT_BGR8', 'CODEC_ID_QDMC', 'av_gettime',
           'CODEC_ID_ADPCM_EA_MAXIS_XA', 'AV_CODEC_ID_PGMYUV',
           '_BITS_BYTESWAP_H', 'cos', 'WSTOPSIG', 'av_rescale_delta',
           '__dev_t', 'avfilter_graph_alloc_filter',
           'AV_SAMPLE_FMT_DBLP', '_SYS_SYSMACROS_H', 'UINT16_MAX',
           'AV_CODEC_ID_JPEG2000', '_IOFBF', 'truncl',
           'AV_CODEC_ID_XFACE',
           'AVFILTER_FLAG_SUPPORT_TIMELINE_GENERIC', 'av_dict_copy',
           'LIBAVFORMAT_VERSION_MICRO', '__dprintf_chk', 'truncf',
           'PIX_FMT_VDPAU_MPEG4', 'lgamma', 'UINT_FAST32_MAX',
           'CODEC_ID_PCM_F64LE', '_IO_FLAGS2_USER_WBUF', 'vsprintf',
           'AVFMT_FLAG_NOBUFFER', 'av_guess_format', 'log10l',
           'AV_CODEC_ID_A64_MULTI', '__USE_POSIX199506',
           'AV_PICTURE_STRUCTURE_BOTTOM_FIELD', 'cfree',
           '__BIG_ENDIAN', 'LIBAVRESAMPLE_BUILD',
           'AV_PKT_DATA_JP_DUALMONO', 'uintmax_t', 'avio_rl64',
           'ENOEXEC', 'EACCES', 'av_frame_alloc', 'av_opt_show2',
           'AV_CH_LAYOUT_2_1', 'AV_CH_LAYOUT_2_2', 'AVFrameSideData',
           'PLOSS', 'SCNoFAST32', 'ino_t', '_POSIX2_BC_STRING_MAX',
           '__W_EXITCODE', 'FF_CODER_TYPE_AC', 'sqrt',
           'AV_ROUND_PASS_MINMAX', 'INT_LEAST16_MIN',
           'AV_CODEC_ID_ASV2', 'AV_CODEC_ID_ASV1',
           'AV_CODEC_ID_ADPCM_SBPRO_4', 'AV_CODEC_ID_ADPCM_SBPRO_3',
           'AV_CODEC_ID_ADPCM_SBPRO_2', 'av_opt_get_q',
           'PIX_FMT_BGRA64LE', 'va_end', 'FF_DEBUG_VIS_MV_B_FOR',
           'avcodec_get_type', 'AV_CODEC_ID_PAM',
           'AV_CODEC_ID_FLASHSV', 'avfilter_graph_alloc',
           'N8AVOption4DOT_32E', 'AVIOContext',
           'AV_CH_LAYOUT_7POINT1_WIDE_BACK', 'AV_CODEC_ID_VMDAUDIO',
           'FF_PROFILE_H264_HIGH_444_PREDICTIVE', '__ino_t',
           'SCNxFAST64', 'MKBETAG', 'CODEC_FLAG_BITEXACT',
           'avcodec_decode_subtitle2', 'strcoll_l', '__REDIRECT_LDBL',
           'AV_CODEC_ID_PCM_U32LE', 'ENODATA',
           'AV_PIX_FMT_BAYER_BGGR8', 'SWS_PARAM_DEFAULT',
           'PIX_FMT_YUV420P10LE', 'AV_CODEC_ID_8SVX_FIB', 'drand48_r',
           'AVCOL_PRI_NB', 'av_log_missing_feature', 'powl',
           'av_frame_new_side_data', 'AV_CODEC_ID_PCM_S32BE', 'powf',
           '__MATHCALLX', 'be16toh', 'avfilter_action_func',
           'WSTOPPED', 'rintf', 'av_codec_get_id',
           'AV_PIX_FMT_YUV422P16BE', '__SIZEOF_PTHREAD_BARRIERATTR_T',
           'avformat_close_input', 'AV_NE', 'AVSEEK_SIZE', '__isinfl',
           'CODEC_ID_PCX', 'ESOCKTNOSUPPORT', 'AVMEDIA_TYPE_SUBTITLE',
           'PIX_FMT_BGRA64BE', '_ISOC_',
           'AV_CODEC_ID_TIERTEXSEQVIDEO', 'MB_TYPE_CBP',
           'AV_CODEC_ID_WS_VQA', 'av_fast_padded_malloc', 'MAX_CANON',
           'AVPALETTE_SIZE', 'audio_resample',
           'avcodec_encode_audio2',
           'AV_CODEC_ID_ESCAPE130_DEPRECATED',
           'AVFILTER_AUTO_CONVERT_NONE', 'AVAudioServiceType',
           'fflush_unlocked', 'AV_CODEC_ID_QDRAW', '__stpncpy_chk',
           'avcodec_alloc_context3', 'PIX_FMT_NB', 'int32_t',
           'IOV_MAX', 'PIX_FMT_NE', 'CODEC_ID_PICTOR',
           'LIBAVCODEC_VERSION_MINOR', 'av_format_set_video_codec',
           '__vprintf_chk', 'imaxabs', 'AV_CPU_FLAG_FORCE',
           'FF_BUFFER_HINTS_VALID', 'WIFSTOPPED',
           'AV_PICTURE_STRUCTURE_FRAME', 'M_SQRT1_2',
           'avfilter_version', 'AV_CPU_FLAG_ATOM', 'EPROTO',
           'av_guess_frame_rate', '_SYS_SELECT_H', '__fdelt_warn',
           'AV_PIX_FMT_YUV420P16BE', 'cookie_read_function_t',
           'AVFilterPad', 'PRIxFAST8', '_G_fpos64_t',
           'avfilter_insert_filter', '_ISOC95_SOURCE',
           'AVFMT_FLAG_DISCARD_CORRUPT', 'av_frame_clone',
           'FF_CMP_BIT', '__compar_fn_t',
           'AV_CLASS_CATEGORY_BITSTREAM_FILTER', 'modfl',
           'FF_PROFILE_MPEG4_SIMPLE_STUDIO', 'ULONG_LONG_MAX',
           'av_get_standard_channel_layout', 'CODEC_ID_ADPCM_THP',
           '__io_close_fn', 'AVERROR_EXIT', 'pclose',
           'AV_CPU_FLAG_SSE3SLOW', 'SCNi32', 'llabs', 'CODEC_ID_TMV',
           'av_codec_next', '__codecvt_ok', 'av_demuxer_open',
           'PRIuFAST16', 'SCNd32', 'AV_CODEC_ID_MPEG2VIDEO',
           'PIX_FMT_YUV444P12LE', 'FF_DTG_AFD_16_9_SP_14_9',
           'CODEC_ID_MOV_TEXT', '__SYSCALL_WORDSIZE',
           'CODEC_ID_SUBVIEWER', 'AV_CODEC_ID_PRORES',
           '_IO_UPPERCASE', '_IO_EOF_SEEN', '__sprintf_chk',
           'CODEC_ID_TIERTEXSEQVIDEO',
           'CODEC_CAP_VARIABLE_FRAME_SIZE', 'INT_LEAST8_MAX',
           'ENOTRECOVERABLE', 'AV_PIX_FMT_YUV420P10LE',
           'AV_CLASS_CATEGORY_INPUT', '__strtoul_internal',
           'AVERROR_UNKNOWN', 'AV_CODEC_ID_DTS', '__stpncpy',
           'EADDRNOTAVAIL', 'EADV', 'INT8_C', 'strlen',
           'AVCOL_RANGE_JPEG', 'sws_convertPalette8ToPacked24',
           'AV_CODEC_ID_MICRODVD', 'ENOSYS',
           'AV_PIX_FMT_BAYER_BGGR16BE', 'u_int', 'puts', 'SEEK_END',
           'av_resample', 'mkostemps64',
           'av_codec_set_codec_descriptor', 'AV_CODEC_ID_TXD',
           'strcpy', 'av_samples_set_silence',
           'av_get_bytes_per_sample', 'av_calloc',
           'AV_OPT_FLAG_DECODING_PARAM', 'AVCOL_SPC_BT709',
           'avio_wb64', 'av_opt_ptr', 'SCNxLEAST16',
           'AV_PIX_FMT_VAAPI_VLD', '_ISOC11_SOURCE',
           'AV_CODEC_ID_AASC', 'CODEC_ID_MPEG1VIDEO',
           'AV_CODEC_ID_S302M', 'avcodec_encode_video2',
           'CODEC_ID_INTERPLAY_DPCM', '__USE_UNIX98',
           'fgets_unlocked', '__gid_t', '_IO_FILE_plus',
           'PIX_FMT_XVMC_MPEG2_IDCT', 'CODEC_ID_ADPCM_CT',
           'FF_LOSS_COLORSPACE', 'avio_r8', 'AV_PIX_FMT_RGB4_BYTE',
           'AV_CH_LAYOUT_5POINT1_BACK', 'AV_PIX_FMT_BGRA',
           'PRIxFAST64', 'AV_CH_LAYOUT_6POINT1_BACK',
           'avcodec_pix_fmt_to_codec_tag', 'url_feof',
           'PARSER_FLAG_FETCHED_OFFSET', 'CODEC_ID_R10K', 'PRIX8',
           'FF_OPT_TYPE_FLOAT', 'PRIoFAST32', 'CODEC_ID_RAWVIDEO',
           'AV_CODEC_ID_H261', 'AV_CODEC_ID_H263',
           'av_frame_set_decode_error_flags', 'AV_CODEC_ID_H265',
           'AV_CODEC_ID_H264', 'u_quad_t', 'getenv', '__u_char',
           'AVCOL_PRI_SMPTE170M', 'AV_PIX_FMT_BGR8', 'wcstombs',
           'AV_SAMPLE_FMT_S16', 'AV_PIX_FMT_BGR4',
           'PIX_FMT_YUV420P9BE', 'EOWNERDEAD', 'AV_PIX_FMT_BGR0',
           'CODEC_ID_PAF_AUDIO', 'av_find_nearest_q_idx', 'ME_PHODS',
           '_IO_getc', 'AV_HAVE_INCOMPATIBLE_FORK_ABI',
           'av_buffer_realloc', 'AV_CODEC_ID_ADPCM_IMA_AMV',
           'getc_unlocked', 'CODEC_ID_AMV', 'PIX_FMT_YUV422P10LE',
           'strspn', '__isnan', 'PRIdMAX', 'AV_CODEC_ID_XBM',
           'AV_PIX_FMT_GBRP9LE', 'AV_CODEC_ID_TSCC', 'PIX_FMT_NV21',
           'AV_CH_LAYOUT_3POINT1', 'SCNxLEAST64',
           'av_codec_get_seek_preroll', 'ldiv', 'strndup',
           'CODEC_ID_WMAV2', 'MB_TYPE_L0L1', 'CODEC_ID_WMAV1',
           'asinh', 'av_opt_next', 'jrand48_r',
           'AV_CODEC_ID_INTERPLAY_VIDEO', 'ENETDOWN', 'int64_t',
           'FF_LOSS_DEPTH', 'CODEC_ID_DNXHD', 'av_parse_cpu_caps',
           'AV_EF_BUFFER', 'le64toh', 'AV_CODEC_ID_PCM_U24LE',
           'UCHAR_MAX', '__va_copy', 'EDOTDOT', 'EBADFD',
           '_IO_MAGIC_MASK', 'CODEC_ID_KMVC', 'AV_CPU_FLAG_NEON',
           'rename', 'TTY_NAME_MAX', 'AVPacketSideDataType',
           'AV_PIX_FMT_YUV411P', 'CODEC_ID_PCM_ZORK',
           'AV_PIX_FMT_VDA_VLD', 'AVERROR_EXTERNAL',
           'av_find_program_from_stream', 'M_SQRT2',
           'PTHREAD_KEYS_MAX', 'EISCONN', 'FF_DEBUG_ER',
           'CODEC_ID_TQI', 'FD_SETSIZE', 'initstate_r',
           '__codecvt_error', '__wctomb_chk', 'CODEC_ID_MTS2',
           'remainderf', 'FF_IDCT_AUTO', '__strtok_r', 'remainderl',
           'j0f', 'FF_BUG_QPEL_CHROMA2', 'av_picture_copy',
           'AVCOL_PRI_BT470M', 'PIX_FMT_YUV444P10LE',
           '_POSIX2_BC_SCALE_MAX', 'FF_PROFILE_H264_HIGH_10_INTRA',
           'avpicture_get_size', 'locale_t', '__isinf',
           'FF_PROFILE_JPEG2000_CSTREAM_RESTRICTION_1', 'sincosf',
           'FF_PROFILE_DTS_96_24', 'swscale_configuration',
           'EXIT_FAILURE', 'av_opt_get_key_value', 'AVINDEX_KEYFRAME',
           'FF_PROFILE_MPEG2_AAC_LOW', 'AVERROR_BUG2', 'asinhf',
           'sincosl', '_IOLBF', 'CODEC_ID_QDM2',
           'PIX_FMT_YUV444P14LE', 'SCNoPTR', 'asinhl']
